
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004192  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000fc  00800060  00004192  00004226  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000010b  0080015c  0080015c  00004322  2**0
                  ALLOC
  3 .stab         00004758  00000000  00000000  00004324  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000122f  00000000  00000000  00008a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00009cab  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000278  00000000  00000000  00009cda  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002a2d  00000000  00000000  00009f52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005e1  00000000  00000000  0000c97f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000fdb  00000000  00000000  0000cf60  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000a48  00000000  00000000  0000df3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000fc4  00000000  00000000  0000e984  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002453  00000000  00000000  0000f948  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000002a0  00000000  00000000  00011d9b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 92 00 	jmp	0x124	; 0x124 <__ctors_end>
       4:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <__vector_1>
       8:	0c 94 c9 02 	jmp	0x592	; 0x592 <__vector_2>
       c:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      10:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <__vector_4>
      14:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      18:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      1c:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      20:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      24:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      28:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      2c:	0c 94 57 05 	jmp	0xaae	; 0xaae <__vector_11>
      30:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      34:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      38:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      3c:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      40:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      44:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      48:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      4c:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      50:	0c 94 ba 00 	jmp	0x174	; 0x174 <__bad_interrupt>
      54:	08 4a       	sbci	r16, 0xA8	; 168
      56:	d7 3b       	cpi	r29, 0xB7	; 183
      58:	3b ce       	rjmp	.-906    	; 0xfffffcd0 <__eeprom_end+0xff7efcd0>
      5a:	01 6e       	ori	r16, 0xE1	; 225
      5c:	84 bc       	out	0x24, r8	; 36
      5e:	bf fd       	.word	0xfdbf	; ????
      60:	c1 2f       	mov	r28, r17
      62:	3d 6c       	ori	r19, 0xCD	; 205
      64:	74 31       	cpi	r23, 0x14	; 20
      66:	9a bd       	out	0x2a, r25	; 42
      68:	56 83       	std	Z+6, r21	; 0x06
      6a:	3d da       	rcall	.-2950   	; 0xfffff4e6 <__eeprom_end+0xff7ef4e6>
      6c:	3d 00       	.word	0x003d	; ????
      6e:	c7 7f       	andi	r28, 0xF7	; 247
      70:	11 be       	out	0x31, r1	; 49
      72:	d9 e4       	ldi	r29, 0x49	; 73
      74:	bb 4c       	sbci	r27, 0xCB	; 203
      76:	3e 91       	ld	r19, -X
      78:	6b aa       	std	Y+51, r6	; 0x33
      7a:	aa be       	out	0x3a, r10	; 58
      7c:	00 00       	nop
      7e:	00 80       	ld	r0, Z
      80:	3f 05       	cpc	r19, r15
      82:	a8 4c       	sbci	r26, 0xC8	; 200
      84:	cd b2       	in	r12, 0x1d	; 29
      86:	d4 4e       	sbci	r29, 0xE4	; 228
      88:	b9 38       	cpi	r27, 0x89	; 137
      8a:	36 a9       	ldd	r19, Z+54	; 0x36
      8c:	02 0c       	add	r0, r2
      8e:	50 b9       	out	0x00, r21	; 0
      90:	91 86       	std	Z+9, r9	; 0x09
      92:	88 08       	sbc	r8, r8
      94:	3c a6       	std	Y+44, r3	; 0x2c
      96:	aa aa       	std	Y+50, r10	; 0x32
      98:	2a be       	out	0x3a, r2	; 58
      9a:	00 00       	nop
      9c:	00 80       	ld	r0, Z
      9e:	3f 07       	cpc	r19, r31
      a0:	63 42       	sbci	r22, 0x23	; 35
      a2:	36 b7       	in	r19, 0x36	; 54
      a4:	9b d8       	rcall	.-3786   	; 0xfffff1dc <__eeprom_end+0xff7ef1dc>
      a6:	a7 1a       	sub	r10, r23
      a8:	39 68       	ori	r19, 0x89	; 137
      aa:	56 18       	sub	r5, r6
      ac:	ae ba       	out	0x1e, r10	; 30
      ae:	ab 55       	subi	r26, 0x5B	; 91
      b0:	8c 1d       	adc	r24, r12
      b2:	3c b7       	in	r19, 0x3c	; 60
      b4:	cc 57       	subi	r28, 0x7C	; 124
      b6:	63 bd       	out	0x23, r22	; 35
      b8:	6d ed       	ldi	r22, 0xDD	; 221
      ba:	fd 75       	andi	r31, 0x5D	; 93
      bc:	3e f6       	brtc	.-114    	; 0x4c <__SREG__+0xd>
      be:	17 72       	andi	r17, 0x27	; 39
      c0:	31 bf       	out	0x31, r19	; 49
      c2:	00 00       	nop
      c4:	00 80       	ld	r0, Z
      c6:	3f 08       	sbc	r3, r15
      c8:	00 00       	nop
      ca:	00 be       	out	0x30, r0	; 48
      cc:	92 24       	eor	r9, r2
      ce:	49 12       	cpse	r4, r25
      d0:	3e ab       	std	Y+54, r19	; 0x36
      d2:	aa aa       	std	Y+50, r10	; 0x32
      d4:	2a be       	out	0x3a, r2	; 58
      d6:	cd cc       	rjmp	.-1638   	; 0xfffffa72 <__eeprom_end+0xff7efa72>
      d8:	cc 4c       	sbci	r28, 0xCC	; 204
      da:	3e 00       	.word	0x003e	; ????
      dc:	00 00       	nop
      de:	80 be       	out	0x30, r8	; 48
      e0:	ab aa       	std	Y+51, r10	; 0x33
      e2:	aa aa       	std	Y+50, r10	; 0x32
      e4:	3e 00       	.word	0x003e	; ????
      e6:	00 00       	nop
      e8:	00 bf       	out	0x30, r16	; 48
      ea:	00 00       	nop
      ec:	00 80       	ld	r0, Z
      ee:	3f 00       	.word	0x003f	; ????
      f0:	00 00       	nop
      f2:	00 00       	nop
      f4:	08 41       	sbci	r16, 0x18	; 24
      f6:	78 d3       	rcall	.+1776   	; 0x7e8 <_Z11check_colorv+0x19e>
      f8:	bb 43       	sbci	r27, 0x3B	; 59
      fa:	87 d1       	rcall	.+782    	; 0x40a <_Z9lcd_putchc+0x4>
      fc:	13 3d       	cpi	r17, 0xD3	; 211
      fe:	19 0e       	add	r1, r25
     100:	3c c3       	rjmp	.+1656   	; 0x77a <_Z11check_colorv+0x130>
     102:	bd 42       	sbci	r27, 0x2D	; 45
     104:	82 ad       	ldd	r24, Z+58	; 0x3a
     106:	2b 3e       	cpi	r18, 0xEB	; 235
     108:	68 ec       	ldi	r22, 0xC8	; 200
     10a:	82 76       	andi	r24, 0x62	; 98
     10c:	be d9       	rcall	.-3204   	; 0xfffff48a <__eeprom_end+0xff7ef48a>
     10e:	8f e1       	ldi	r24, 0x1F	; 31
     110:	a9 3e       	cpi	r26, 0xE9	; 233
     112:	4c 80       	ldd	r4, Y+4	; 0x04
     114:	ef ff       	.word	0xffef	; ????
     116:	be 01       	movw	r22, r28
     118:	c4 ff       	sbrs	r28, 4
     11a:	7f 3f       	cpi	r23, 0xFF	; 255
     11c:	00 00       	nop
     11e:	00 00       	nop
	...

00000122 <__ctors_start>:
     122:	68 1b       	sub	r22, r24

00000124 <__ctors_end>:
     124:	11 24       	eor	r1, r1
     126:	1f be       	out	0x3f, r1	; 63
     128:	cf e5       	ldi	r28, 0x5F	; 95
     12a:	d8 e0       	ldi	r29, 0x08	; 8
     12c:	de bf       	out	0x3e, r29	; 62
     12e:	cd bf       	out	0x3d, r28	; 61

00000130 <__do_copy_data>:
     130:	11 e0       	ldi	r17, 0x01	; 1
     132:	a0 e6       	ldi	r26, 0x60	; 96
     134:	b0 e0       	ldi	r27, 0x00	; 0
     136:	e2 e9       	ldi	r30, 0x92	; 146
     138:	f1 e4       	ldi	r31, 0x41	; 65
     13a:	02 c0       	rjmp	.+4      	; 0x140 <__do_copy_data+0x10>
     13c:	05 90       	lpm	r0, Z+
     13e:	0d 92       	st	X+, r0
     140:	ac 35       	cpi	r26, 0x5C	; 92
     142:	b1 07       	cpc	r27, r17
     144:	d9 f7       	brne	.-10     	; 0x13c <__do_copy_data+0xc>

00000146 <__do_clear_bss>:
     146:	22 e0       	ldi	r18, 0x02	; 2
     148:	ac e5       	ldi	r26, 0x5C	; 92
     14a:	b1 e0       	ldi	r27, 0x01	; 1
     14c:	01 c0       	rjmp	.+2      	; 0x150 <.do_clear_bss_start>

0000014e <.do_clear_bss_loop>:
     14e:	1d 92       	st	X+, r1

00000150 <.do_clear_bss_start>:
     150:	a7 36       	cpi	r26, 0x67	; 103
     152:	b2 07       	cpc	r27, r18
     154:	e1 f7       	brne	.-8      	; 0x14e <.do_clear_bss_loop>

00000156 <__do_global_ctors>:
     156:	11 e0       	ldi	r17, 0x01	; 1
     158:	c4 e2       	ldi	r28, 0x24	; 36
     15a:	d1 e0       	ldi	r29, 0x01	; 1
     15c:	04 c0       	rjmp	.+8      	; 0x166 <__do_global_ctors+0x10>
     15e:	22 97       	sbiw	r28, 0x02	; 2
     160:	fe 01       	movw	r30, r28
     162:	0e 94 92 20 	call	0x4124	; 0x4124 <__tablejump__>
     166:	c2 32       	cpi	r28, 0x22	; 34
     168:	d1 07       	cpc	r29, r17
     16a:	c9 f7       	brne	.-14     	; 0x15e <__do_global_ctors+0x8>
     16c:	0e 94 18 19 	call	0x3230	; 0x3230 <main>
     170:	0c 94 c7 20 	jmp	0x418e	; 0x418e <_exit>

00000174 <__bad_interrupt>:
     174:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000178 <_ZL9lcd_writeh>:
			if(speed!=0)
			{
				tspeed+=speed;
				tempCount++;
				speed=0;
				error1=river_setpoint-y_abs;
     178:	95 ed       	ldi	r25, 0xD5	; 213
     17a:	9a 95       	dec	r25
     17c:	f1 f7       	brne	.-4      	; 0x17a <_ZL9lcd_writeh+0x2>
     17e:	00 00       	nop
			if(error1>30)
     180:	88 23       	and	r24, r24
     182:	14 f4       	brge	.+4      	; 0x188 <_ZL9lcd_writeh+0x10>
     184:	de 9a       	sbi	0x1b, 6	; 27
     186:	01 c0       	rjmp	.+2      	; 0x18a <_ZL9lcd_writeh+0x12>
     188:	de 98       	cbi	0x1b, 6	; 27
     18a:	86 ff       	sbrs	r24, 6
     18c:	02 c0       	rjmp	.+4      	; 0x192 <_ZL9lcd_writeh+0x1a>
     18e:	df 9a       	sbi	0x1b, 7	; 27
			if(speed!=0)
			{
				tspeed+=speed;
				tempCount++;
				speed=0;
				error1=river_setpoint-y_abs;
     190:	01 c0       	rjmp	.+2      	; 0x194 <_ZL9lcd_writeh+0x1c>
     192:	df 98       	cbi	0x1b, 7	; 27
     194:	85 ff       	sbrs	r24, 5
     196:	02 c0       	rjmp	.+4      	; 0x19c <_ZL9lcd_writeh+0x24>
     198:	af 9a       	sbi	0x15, 7	; 21
     19a:	01 c0       	rjmp	.+2      	; 0x19e <_ZL9lcd_writeh+0x26>
     19c:	af 98       	cbi	0x15, 7	; 21
     19e:	84 ff       	sbrs	r24, 4
     1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <_ZL9lcd_writeh+0x2e>
     1a2:	ad 9a       	sbi	0x15, 5	; 21
     1a4:	01 c0       	rjmp	.+2      	; 0x1a8 <_ZL9lcd_writeh+0x30>
     1a6:	ad 98       	cbi	0x15, 5	; 21
     1a8:	ab 9a       	sbi	0x15, 3	; 21
			if(error1>30)
			error1=30;
     1aa:	ab 98       	cbi	0x15, 3	; 21
     1ac:	83 ff       	sbrs	r24, 3
     1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <_ZL9lcd_writeh+0x3c>
     1b0:	de 9a       	sbi	0x1b, 6	; 27
     1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <_ZL9lcd_writeh+0x3e>
     1b4:	de 98       	cbi	0x1b, 6	; 27
     1b6:	82 ff       	sbrs	r24, 2
     1b8:	02 c0       	rjmp	.+4      	; 0x1be <_ZL9lcd_writeh+0x46>
     1ba:	df 9a       	sbi	0x1b, 7	; 27
     1bc:	01 c0       	rjmp	.+2      	; 0x1c0 <_ZL9lcd_writeh+0x48>
     1be:	df 98       	cbi	0x1b, 7	; 27
     1c0:	81 ff       	sbrs	r24, 1
			if(d_first==true)
     1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <_ZL9lcd_writeh+0x50>
     1c4:	af 9a       	sbi	0x15, 7	; 21
     1c6:	01 c0       	rjmp	.+2      	; 0x1ca <_ZL9lcd_writeh+0x52>
     1c8:	af 98       	cbi	0x15, 7	; 21
			{
				last_error1=error1;
     1ca:	80 ff       	sbrs	r24, 0
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <_ZL9lcd_writeh+0x5a>
     1ce:	ad 9a       	sbi	0x15, 5	; 21
     1d0:	01 c0       	rjmp	.+2      	; 0x1d4 <_ZL9lcd_writeh+0x5c>
     1d2:	ad 98       	cbi	0x15, 5	; 21
     1d4:	ab 9a       	sbi	0x15, 3	; 21
     1d6:	ab 98       	cbi	0x15, 3	; 21
     1d8:	08 95       	ret

000001da <_Z9uart_initv>:
     1da:	10 bc       	out	0x20, r1	; 32
     1dc:	19 b8       	out	0x09, r1	; 9
     1de:	53 9a       	sbi	0x0a, 3	; 10
     1e0:	80 b5       	in	r24, 0x20	; 32
     1e2:	86 68       	ori	r24, 0x86	; 134
     1e4:	80 bd       	out	0x20, r24	; 32
     1e6:	08 95       	ret

000001e8 <_Z10uart_writeh>:
     1e8:	8c b9       	out	0x0c, r24	; 12
				d_first=false;
     1ea:	5d 9b       	sbis	0x0b, 5	; 11
     1ec:	fe cf       	rjmp	.-4      	; 0x1ea <_Z10uart_writeh+0x2>
			}
			//error2=(headingDegrees-axis);
			//error2=(headingDegrees-(axis+180));
			output_error=output-last_output;
     1ee:	08 95       	ret

000001f0 <_Z9uart_readv>:
     1f0:	5f 9b       	sbis	0x0b, 7	; 11
     1f2:	fe cf       	rjmp	.-4      	; 0x1f0 <_Z9uart_readv>
     1f4:	8c b1       	in	r24, 0x0c	; 12
     1f6:	08 95       	ret

000001f8 <_Z8transmithhh>:
     1f8:	df 92       	push	r13
     1fa:	ef 92       	push	r14
     1fc:	ff 92       	push	r15
     1fe:	0f 93       	push	r16
     200:	1f 93       	push	r17
     202:	cf 93       	push	r28
     204:	df 93       	push	r29
     206:	18 2f       	mov	r17, r24
     208:	c6 2f       	mov	r28, r22
     20a:	e4 2e       	mov	r14, r20
     20c:	89 9a       	sbi	0x11, 1	; 17
     20e:	54 98       	cbi	0x0a, 4	; 10
     210:	53 9a       	sbi	0x0a, 3	; 10
     212:	d4 2f       	mov	r29, r20
     214:	de 5f       	subi	r29, 0xFE	; 254
     216:	d6 2e       	mov	r13, r22
     218:	d8 0e       	add	r13, r24
			if(track==0)
     21a:	dd 0e       	add	r13, r29
     21c:	8f ef       	ldi	r24, 0xFF	; 255
     21e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     222:	8f ef       	ldi	r24, 0xFF	; 255
     224:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
			error2=(axis+180-river_compassSetPoint)-headingDegrees;
     228:	81 2f       	mov	r24, r17
     22a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     22e:	8d 2f       	mov	r24, r29
     230:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     234:	8c 2f       	mov	r24, r28
     236:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     23a:	ee 20       	and	r14, r14
     23c:	89 f0       	breq	.+34     	; 0x260 <_Z8transmithhh+0x68>
     23e:	cf e4       	ldi	r28, 0x4F	; 79
     240:	d2 e0       	ldi	r29, 0x02	; 2
     242:	4e 2d       	mov	r20, r14
     244:	50 e0       	ldi	r21, 0x00	; 0
     246:	7e 01       	movw	r14, r28
     248:	e4 0e       	add	r14, r20
     24a:	f5 1e       	adc	r15, r21
     24c:	8e 01       	movw	r16, r28
     24e:	89 91       	ld	r24, Y+
     250:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     254:	f8 01       	movw	r30, r16
     256:	80 81       	ld	r24, Z
     258:	d8 0e       	add	r13, r24
     25a:	ce 15       	cp	r28, r14
     25c:	df 05       	cpc	r29, r15
     25e:	b1 f7       	brne	.-20     	; 0x24c <_Z8transmithhh+0x54>
     260:	8d 2d       	mov	r24, r13
     262:	80 95       	com	r24
     264:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     268:	89 98       	cbi	0x11, 1	; 17
     26a:	54 9a       	sbi	0x0a, 4	; 10
     26c:	53 98       	cbi	0x0a, 3	; 10
     26e:	df 91       	pop	r29
     270:	cf 91       	pop	r28
     272:	1f 91       	pop	r17
			else if(track==1)
     274:	0f 91       	pop	r16
     276:	ff 90       	pop	r15
			error2=headingDegrees-axis;
     278:	ef 90       	pop	r14
     27a:	df 90       	pop	r13
     27c:	08 95       	ret

0000027e <_Z9transmit1hhh>:
     27e:	df 92       	push	r13
     280:	ef 92       	push	r14
     282:	ff 92       	push	r15
     284:	0f 93       	push	r16
     286:	1f 93       	push	r17
     288:	cf 93       	push	r28
     28a:	df 93       	push	r29
     28c:	d8 2f       	mov	r29, r24
     28e:	c6 2f       	mov	r28, r22
     290:	e4 2e       	mov	r14, r20
     292:	89 9a       	sbi	0x11, 1	; 17
     294:	54 98       	cbi	0x0a, 4	; 10
     296:	53 9a       	sbi	0x0a, 3	; 10
     298:	8c 5f       	subi	r24, 0xFC	; 252
     29a:	d8 2e       	mov	r13, r24
     29c:	d6 0e       	add	r13, r22
     29e:	8f ef       	ldi	r24, 0xFF	; 255
     2a0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     2a4:	8f ef       	ldi	r24, 0xFF	; 255
     2a6:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
			Kp_line = 1 + (30-abs(error1))*(1.5-1)/18;
			*/
			Kp_line = 2.5;
			Kd_line = 5;
			Kp_compass = 1;
			output=167-(red_field)*error1*Kp_line+(red_field)*(last_error1-error1)*Kd_line+(red_field)*error2*Kp_compass+(red_field)*output_error*0;
     2aa:	8d 2f       	mov	r24, r29
     2ac:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     2b0:	84 e0       	ldi	r24, 0x04	; 4
     2b2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     2b6:	8c 2f       	mov	r24, r28
     2b8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     2bc:	ee 20       	and	r14, r14
     2be:	89 f0       	breq	.+34     	; 0x2e2 <_Z9transmit1hhh+0x64>
     2c0:	cf e4       	ldi	r28, 0x4F	; 79
     2c2:	d2 e0       	ldi	r29, 0x02	; 2
     2c4:	4e 2d       	mov	r20, r14
     2c6:	50 e0       	ldi	r21, 0x00	; 0
     2c8:	7e 01       	movw	r14, r28
     2ca:	e4 0e       	add	r14, r20
     2cc:	f5 1e       	adc	r15, r21
     2ce:	8e 01       	movw	r16, r28
     2d0:	89 91       	ld	r24, Y+
     2d2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     2d6:	f8 01       	movw	r30, r16
     2d8:	80 81       	ld	r24, Z
     2da:	d8 0e       	add	r13, r24
     2dc:	ce 15       	cp	r28, r14
     2de:	df 05       	cpc	r29, r15
     2e0:	b1 f7       	brne	.-20     	; 0x2ce <_Z9transmit1hhh+0x50>
     2e2:	8d 2d       	mov	r24, r13
     2e4:	80 95       	com	r24
     2e6:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_Z10uart_writeh>
     2ea:	89 98       	cbi	0x11, 1	; 17
     2ec:	54 9a       	sbi	0x0a, 4	; 10
     2ee:	53 98       	cbi	0x0a, 3	; 10
     2f0:	df 91       	pop	r29
     2f2:	cf 91       	pop	r28
     2f4:	1f 91       	pop	r17
     2f6:	0f 91       	pop	r16
     2f8:	ff 90       	pop	r15
     2fa:	ef 90       	pop	r14
     2fc:	df 90       	pop	r13
     2fe:	08 95       	ret

00000300 <_Z6set_Idv>:
     300:	83 e0       	ldi	r24, 0x03	; 3
     302:	80 93 4f 02 	sts	0x024F, r24
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	80 93 50 02 	sts	0x0250, r24
     30c:	42 e0       	ldi	r20, 0x02	; 2
     30e:	63 e0       	ldi	r22, 0x03	; 3
     310:	8e ef       	ldi	r24, 0xFE	; 254
     312:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <_Z8transmithhh>
     316:	08 95       	ret

00000318 <_Z13enable_torquev>:
     318:	88 e1       	ldi	r24, 0x18	; 24
     31a:	80 93 4f 02 	sts	0x024F, r24
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	80 93 50 02 	sts	0x0250, r24
     324:	42 e0       	ldi	r20, 0x02	; 2
     326:	63 e0       	ldi	r22, 0x03	; 3
     328:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <_Z8transmithhh>
     32c:	08 95       	ret

0000032e <_Z13goal_positionj>:
     32e:	bc 01       	movw	r22, r24
     330:	80 e0       	ldi	r24, 0x00	; 0
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	0e 94 4e 1d 	call	0x3a9c	; 0x3a9c <__floatunsisf>
     338:	21 e7       	ldi	r18, 0x71	; 113
     33a:	3d e3       	ldi	r19, 0x3D	; 61
     33c:	4a e5       	ldi	r20, 0x5A	; 90
     33e:	50 e4       	ldi	r21, 0x40	; 64
     340:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
     344:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
     348:	80 91 a3 00 	lds	r24, 0x00A3
     34c:	80 93 4f 02 	sts	0x024F, r24
     350:	60 93 50 02 	sts	0x0250, r22
     354:	70 93 51 02 	sts	0x0251, r23
     358:	43 e0       	ldi	r20, 0x03	; 3
     35a:	63 e0       	ldi	r22, 0x03	; 3
     35c:	81 e0       	ldi	r24, 0x01	; 1
     35e:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <_Z8transmithhh>
     362:	08 95       	ret

00000364 <_Z12speed_movingj>:
     364:	20 91 a2 00 	lds	r18, 0x00A2
     368:	20 93 4f 02 	sts	0x024F, r18
     36c:	80 93 50 02 	sts	0x0250, r24
     370:	90 93 51 02 	sts	0x0251, r25
     374:	43 e0       	ldi	r20, 0x03	; 3
     376:	63 e0       	ldi	r22, 0x03	; 3
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <_Z8transmithhh>
     37e:	08 95       	ret

00000380 <_Z9maxtorquev>:
     380:	8e e0       	ldi	r24, 0x0E	; 14
     382:	80 93 4f 02 	sts	0x024F, r24
     386:	8f ef       	ldi	r24, 0xFF	; 255
     388:	80 93 50 02 	sts	0x0250, r24
     38c:	83 e0       	ldi	r24, 0x03	; 3
     38e:	80 93 51 02 	sts	0x0251, r24
     392:	43 e0       	ldi	r20, 0x03	; 3
     394:	63 e0       	ldi	r22, 0x03	; 3
     396:	81 e0       	ldi	r24, 0x01	; 1
     398:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <_Z8transmithhh>
     39c:	08 95       	ret

0000039e <_Z14dynamixel_initv>:
     39e:	0e 94 ed 00 	call	0x1da	; 0x1da <_Z9uart_initv>
     3a2:	0e 94 80 01 	call	0x300	; 0x300 <_Z6set_Idv>
     3a6:	0e 94 8c 01 	call	0x318	; 0x318 <_Z13enable_torquev>
     3aa:	0e 94 c0 01 	call	0x380	; 0x380 <_Z9maxtorquev>
     3ae:	8f ef       	ldi	r24, 0xFF	; 255
     3b0:	93 e0       	ldi	r25, 0x03	; 3
     3b2:	0e 94 b2 01 	call	0x364	; 0x364 <_Z12speed_movingj>
     3b6:	08 95       	ret

000003b8 <_Z18dynamixel_positionv>:
     3b8:	84 e2       	ldi	r24, 0x24	; 36
			if(max_error<(last_error1-error1))
     3ba:	80 93 4f 02 	sts	0x024F, r24
     3be:	82 e0       	ldi	r24, 0x02	; 2
     3c0:	80 93 50 02 	sts	0x0250, r24
     3c4:	42 e0       	ldi	r20, 0x02	; 2
     3c6:	62 e0       	ldi	r22, 0x02	; 2
     3c8:	81 e0       	ldi	r24, 0x01	; 1
     3ca:	0e 94 3f 01 	call	0x27e	; 0x27e <_Z9transmit1hhh>
     3ce:	08 95       	ret

000003d0 <_Z9lcd_clearv>:
     3d0:	ac 98       	cbi	0x15, 4	; 21
     3d2:	81 e0       	ldi	r24, 0x01	; 1
     3d4:	0e 94 bc 00 	call	0x178	; 0x178 <_ZL9lcd_writeh>
     3d8:	8f e3       	ldi	r24, 0x3F	; 63
     3da:	9f e1       	ldi	r25, 0x1F	; 31
     3dc:	01 97       	sbiw	r24, 0x01	; 1
     3de:	f1 f7       	brne	.-4      	; 0x3dc <_Z9lcd_clearv+0xc>
				max_error=last_error1-error1;
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <_Z9lcd_clearv+0x12>
     3e2:	00 00       	nop
     3e4:	08 95       	ret

000003e6 <_Z8lcd_putsPKc>:
     3e6:	cf 93       	push	r28
     3e8:	df 93       	push	r29
     3ea:	ec 01       	movw	r28, r24
     3ec:	ac 9a       	sbi	0x15, 4	; 21
     3ee:	88 81       	ld	r24, Y
     3f0:	88 23       	and	r24, r24
			last_error1=error1;
     3f2:	31 f0       	breq	.+12     	; 0x400 <_Z8lcd_putsPKc+0x1a>
     3f4:	21 96       	adiw	r28, 0x01	; 1
     3f6:	0e 94 bc 00 	call	0x178	; 0x178 <_ZL9lcd_writeh>
     3fa:	89 91       	ld	r24, Y+
     3fc:	81 11       	cpse	r24, r1
     3fe:	fb cf       	rjmp	.-10     	; 0x3f6 <_Z8lcd_putsPKc+0x10>
     400:	df 91       	pop	r29
			
		
		    if(output>(upper_limit-60))
     402:	cf 91       	pop	r28
     404:	08 95       	ret

00000406 <_Z9lcd_putchc>:
     406:	ac 9a       	sbi	0x15, 4	; 21
     408:	0e 94 bc 00 	call	0x178	; 0x178 <_ZL9lcd_writeh>
     40c:	08 95       	ret

0000040e <_Z8lcd_gotoh>:
     40e:	ac 98       	cbi	0x15, 4	; 21
     410:	80 68       	ori	r24, 0x80	; 128
     412:	0e 94 bc 00 	call	0x178	; 0x178 <_ZL9lcd_writeh>
     416:	08 95       	ret

00000418 <_Z8lcd_initv>:
     418:	a4 9a       	sbi	0x14, 4	; 20
     41a:	a3 9a       	sbi	0x14, 3	; 20
     41c:	d6 9a       	sbi	0x1a, 6	; 26
     41e:	d7 9a       	sbi	0x1a, 7	; 26
     420:	a7 9a       	sbi	0x14, 7	; 20
     422:	a5 9a       	sbi	0x14, 5	; 20
     424:	ac 98       	cbi	0x15, 4	; 21
     426:	ab 98       	cbi	0x15, 3	; 21
     428:	8f e5       	ldi	r24, 0x5F	; 95
     42a:	9a ee       	ldi	r25, 0xEA	; 234
     42c:	01 97       	sbiw	r24, 0x01	; 1
     42e:	f1 f7       	brne	.-4      	; 0x42c <_Z8lcd_initv+0x14>
     430:	00 c0       	rjmp	.+0      	; 0x432 <_Z8lcd_initv+0x1a>
     432:	00 00       	nop
     434:	ad 9a       	sbi	0x15, 5	; 21
			output=upper_limit-60;
     436:	af 9a       	sbi	0x15, 7	; 21
     438:	df 98       	cbi	0x1b, 7	; 27
     43a:	de 98       	cbi	0x1b, 6	; 27
     43c:	ab 9a       	sbi	0x15, 3	; 21
     43e:	ab 98       	cbi	0x15, 3	; 21
     440:	8f e1       	ldi	r24, 0x1F	; 31
     442:	9e e4       	ldi	r25, 0x4E	; 78
     444:	01 97       	sbiw	r24, 0x01	; 1
     446:	f1 f7       	brne	.-4      	; 0x444 <_Z8lcd_initv+0x2c>
			else if(output<(lower_limit+60))
     448:	00 c0       	rjmp	.+0      	; 0x44a <_Z8lcd_initv+0x32>
     44a:	00 00       	nop
     44c:	ab 9a       	sbi	0x15, 3	; 21
     44e:	ab 98       	cbi	0x15, 3	; 21
     450:	8f e1       	ldi	r24, 0x1F	; 31
     452:	93 e0       	ldi	r25, 0x03	; 3
     454:	01 97       	sbiw	r24, 0x01	; 1
     456:	f1 f7       	brne	.-4      	; 0x454 <_Z8lcd_initv+0x3c>
     458:	00 c0       	rjmp	.+0      	; 0x45a <_Z8lcd_initv+0x42>
     45a:	00 00       	nop
     45c:	ab 9a       	sbi	0x15, 3	; 21
     45e:	ab 98       	cbi	0x15, 3	; 21
     460:	8f e1       	ldi	r24, 0x1F	; 31
     462:	93 e0       	ldi	r25, 0x03	; 3
     464:	01 97       	sbiw	r24, 0x01	; 1
     466:	f1 f7       	brne	.-4      	; 0x464 <_Z8lcd_initv+0x4c>
     468:	00 c0       	rjmp	.+0      	; 0x46a <_Z8lcd_initv+0x52>
     46a:	00 00       	nop
     46c:	ad 98       	cbi	0x15, 5	; 21
     46e:	af 9a       	sbi	0x15, 7	; 21
     470:	df 98       	cbi	0x1b, 7	; 27
     472:	de 98       	cbi	0x1b, 6	; 27
     474:	ab 9a       	sbi	0x15, 3	; 21
     476:	ab 98       	cbi	0x15, 3	; 21
     478:	88 e2       	ldi	r24, 0x28	; 40
     47a:	0e 94 bc 00 	call	0x178	; 0x178 <_ZL9lcd_writeh>
			output=lower_limit+60;
     47e:	8c e0       	ldi	r24, 0x0C	; 12
     480:	0e 94 bc 00 	call	0x178	; 0x178 <_ZL9lcd_writeh>
     484:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
     488:	86 e0       	ldi	r24, 0x06	; 6
     48a:	0e 94 bc 00 	call	0x178	; 0x178 <_ZL9lcd_writeh>
			}
			if(tempCount>=4)
     48e:	08 95       	ret

00000490 <_Z7lcd_numi>:
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	00 d0       	rcall	.+0      	; 0x496 <_Z7lcd_numi+0x6>
     496:	00 d0       	rcall	.+0      	; 0x498 <_Z7lcd_numi+0x8>
     498:	00 d0       	rcall	.+0      	; 0x49a <_Z7lcd_numi+0xa>
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62
     49e:	4a e0       	ldi	r20, 0x0A	; 10
     4a0:	50 e0       	ldi	r21, 0x00	; 0
     4a2:	be 01       	movw	r22, r28
     4a4:	6f 5f       	subi	r22, 0xFF	; 255
     4a6:	7f 4f       	sbci	r23, 0xFF	; 255
     4a8:	0e 94 96 20 	call	0x412c	; 0x412c <itoa>
     4ac:	ce 01       	movw	r24, r28
			{
			  headingDegrees=getHeading();
     4ae:	01 96       	adiw	r24, 0x01	; 1
     4b0:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <_Z8lcd_putsPKc>
     4b4:	26 96       	adiw	r28, 0x06	; 6
     4b6:	0f b6       	in	r0, 0x3f	; 63
     4b8:	f8 94       	cli
     4ba:	de bf       	out	0x3e, r29	; 62
     4bc:	0f be       	out	0x3f, r0	; 63
     4be:	cd bf       	out	0x3d, r28	; 61
			  x+=(((float)tspeed)/(8.18))*cos(((headingDegrees-axis)*pi)/180);
     4c0:	df 91       	pop	r29
     4c2:	cf 91       	pop	r28
     4c4:	08 95       	ret

000004c6 <_Z10lcd_gotoxyhh>:
     4c6:	90 e4       	ldi	r25, 0x40	; 64
     4c8:	69 9f       	mul	r22, r25
     4ca:	80 0d       	add	r24, r0
     4cc:	11 24       	eor	r1, r1
     4ce:	0e 94 07 02 	call	0x40e	; 0x40e <_Z8lcd_gotoh>
     4d2:	08 95       	ret

000004d4 <_Z6PrintfPcz>:
     4d4:	cf 92       	push	r12
     4d6:	df 92       	push	r13
     4d8:	ef 92       	push	r14
     4da:	ff 92       	push	r15
     4dc:	0f 93       	push	r16
     4de:	1f 93       	push	r17
     4e0:	cf 93       	push	r28
     4e2:	df 93       	push	r29
     4e4:	cd b7       	in	r28, 0x3d	; 61
     4e6:	de b7       	in	r29, 0x3e	; 62
     4e8:	fe 01       	movw	r30, r28
     4ea:	3b 96       	adiw	r30, 0x0b	; 11
     4ec:	a1 91       	ld	r26, Z+
     4ee:	b1 91       	ld	r27, Z+
     4f0:	6f 01       	movw	r12, r30
     4f2:	8c 91       	ld	r24, X
     4f4:	88 23       	and	r24, r24
     4f6:	d1 f1       	breq	.+116    	; 0x56c <_Z6PrintfPcz+0x98>
     4f8:	8d 01       	movw	r16, r26
     4fa:	85 32       	cpi	r24, 0x25	; 37
     4fc:	69 f5       	brne	.+90     	; 0x558 <_Z6PrintfPcz+0x84>
     4fe:	78 01       	movw	r14, r16
     500:	8f ef       	ldi	r24, 0xFF	; 255
     502:	e8 1a       	sub	r14, r24
     504:	f8 0a       	sbc	r15, r24
     506:	f8 01       	movw	r30, r16
     508:	81 81       	ldd	r24, Z+1	; 0x01
     50a:	84 36       	cpi	r24, 0x64	; 100
     50c:	19 f0       	breq	.+6      	; 0x514 <_Z6PrintfPcz+0x40>
     50e:	83 37       	cpi	r24, 0x73	; 115
     510:	01 f5       	brne	.+64     	; 0x552 <_Z6PrintfPcz+0x7e>
     512:	0a c0       	rjmp	.+20     	; 0x528 <_Z6PrintfPcz+0x54>
     514:	86 01       	movw	r16, r12
     516:	0e 5f       	subi	r16, 0xFE	; 254
     518:	1f 4f       	sbci	r17, 0xFF	; 255
     51a:	f6 01       	movw	r30, r12
     51c:	80 81       	ld	r24, Z
     51e:	91 81       	ldd	r25, Z+1	; 0x01
     520:	0e 94 48 02 	call	0x490	; 0x490 <_Z7lcd_numi>
     524:	68 01       	movw	r12, r16
     526:	1b c0       	rjmp	.+54     	; 0x55e <_Z6PrintfPcz+0x8a>
     528:	f6 01       	movw	r30, r12
     52a:	82 e0       	ldi	r24, 0x02	; 2
     52c:	c8 0e       	add	r12, r24
     52e:	d1 1c       	adc	r13, r1
     530:	01 90       	ld	r0, Z+
     532:	f0 81       	ld	r31, Z
     534:	e0 2d       	mov	r30, r0
     536:	80 81       	ld	r24, Z
     538:	88 23       	and	r24, r24
     53a:	89 f0       	breq	.+34     	; 0x55e <_Z6PrintfPcz+0x8a>
     53c:	8f 01       	movw	r16, r30
     53e:	0f 5f       	subi	r16, 0xFF	; 255
     540:	1f 4f       	sbci	r17, 0xFF	; 255
     542:	0e 94 03 02 	call	0x406	; 0x406 <_Z9lcd_putchc>
     546:	f8 01       	movw	r30, r16
     548:	81 91       	ld	r24, Z+
     54a:	8f 01       	movw	r16, r30
     54c:	81 11       	cpse	r24, r1
     54e:	f9 cf       	rjmp	.-14     	; 0x542 <_Z6PrintfPcz+0x6e>
     550:	06 c0       	rjmp	.+12     	; 0x55e <_Z6PrintfPcz+0x8a>
     552:	0e 94 03 02 	call	0x406	; 0x406 <_Z9lcd_putchc>
     556:	03 c0       	rjmp	.+6      	; 0x55e <_Z6PrintfPcz+0x8a>
     558:	0e 94 03 02 	call	0x406	; 0x406 <_Z9lcd_putchc>
     55c:	78 01       	movw	r14, r16
     55e:	87 01       	movw	r16, r14
     560:	0f 5f       	subi	r16, 0xFF	; 255
     562:	1f 4f       	sbci	r17, 0xFF	; 255
     564:	f7 01       	movw	r30, r14
     566:	81 81       	ldd	r24, Z+1	; 0x01
     568:	81 11       	cpse	r24, r1
     56a:	c7 cf       	rjmp	.-114    	; 0x4fa <_Z6PrintfPcz+0x26>
     56c:	df 91       	pop	r29
			  y+=(((float)tspeed)/(8.18))*sin(((headingDegrees-axis)*pi)/180);
     56e:	cf 91       	pop	r28
     570:	1f 91       	pop	r17
     572:	0f 91       	pop	r16
     574:	ff 90       	pop	r15
     576:	ef 90       	pop	r14
     578:	df 90       	pop	r13
     57a:	cf 90       	pop	r12
     57c:	08 95       	ret

0000057e <_Z17init_extinterruptv>:
     57e:	78 94       	sei
     580:	85 b7       	in	r24, 0x35	; 53
     582:	8c 60       	ori	r24, 0x0C	; 12
     584:	85 bf       	out	0x35, r24	; 53
     586:	8b b7       	in	r24, 0x3b	; 59
     588:	80 68       	ori	r24, 0x80	; 128
     58a:	8b bf       	out	0x3b, r24	; 59
     58c:	8b 98       	cbi	0x11, 3	; 17
     58e:	93 9a       	sbi	0x12, 3	; 18
     590:	08 95       	ret

00000592 <__vector_2>:
     592:	1f 92       	push	r1
     594:	0f 92       	push	r0
     596:	0f b6       	in	r0, 0x3f	; 63
     598:	0f 92       	push	r0
     59a:	11 24       	eor	r1, r1
     59c:	8f 93       	push	r24
     59e:	9f 93       	push	r25
     5a0:	80 91 4d 02 	lds	r24, 0x024D
     5a4:	90 91 4e 02 	lds	r25, 0x024E
     5a8:	01 96       	adiw	r24, 0x01	; 1
     5aa:	90 93 4e 02 	sts	0x024E, r25
     5ae:	80 93 4d 02 	sts	0x024D, r24
     5b2:	9f 91       	pop	r25
     5b4:	8f 91       	pop	r24
     5b6:	0f 90       	pop	r0
     5b8:	0f be       	out	0x3f, r0	; 63
     5ba:	0f 90       	pop	r0
     5bc:	1f 90       	pop	r1
     5be:	18 95       	reti

000005c0 <_Z17init_color_sensorv>:
     5c0:	0e 94 bf 02 	call	0x57e	; 0x57e <_Z17init_extinterruptv>
			  tspeed=0;
			  y_abs = y+23.5*sin(((headingDegrees-axis)*pi)/180);
     5c4:	8a b3       	in	r24, 0x1a	; 26
     5c6:	83 60       	ori	r24, 0x03	; 3
     5c8:	8a bb       	out	0x1a, r24	; 26
     5ca:	08 95       	ret

000005cc <_Z10calc_colorv>:
     5cc:	10 92 4e 02 	sts	0x024E, r1
     5d0:	10 92 4d 02 	sts	0x024D, r1
     5d4:	8b b3       	in	r24, 0x1b	; 27
     5d6:	83 60       	ori	r24, 0x03	; 3
     5d8:	8b bb       	out	0x1b, r24	; 27
     5da:	8f e9       	ldi	r24, 0x9F	; 159
     5dc:	9f e0       	ldi	r25, 0x0F	; 15
     5de:	01 97       	sbiw	r24, 0x01	; 1
     5e0:	f1 f7       	brne	.-4      	; 0x5de <_Z10calc_colorv+0x12>
     5e2:	00 c0       	rjmp	.+0      	; 0x5e4 <_Z10calc_colorv+0x18>
     5e4:	00 00       	nop
     5e6:	80 91 4d 02 	lds	r24, 0x024D
     5ea:	90 91 4e 02 	lds	r25, 0x024E
     5ee:	90 93 4a 02 	sts	0x024A, r25
			  x_abs = x+23.5*cos(((headingDegrees-axis)*pi)/180);
     5f2:	80 93 49 02 	sts	0x0249, r24
     5f6:	10 92 4e 02 	sts	0x024E, r1
     5fa:	10 92 4d 02 	sts	0x024D, r1
     5fe:	8b b3       	in	r24, 0x1b	; 27
     600:	8c 7f       	andi	r24, 0xFC	; 252
     602:	8b bb       	out	0x1b, r24	; 27
     604:	8f e9       	ldi	r24, 0x9F	; 159
     606:	9f e0       	ldi	r25, 0x0F	; 15
     608:	01 97       	sbiw	r24, 0x01	; 1
     60a:	f1 f7       	brne	.-4      	; 0x608 <_Z10calc_colorv+0x3c>
     60c:	00 c0       	rjmp	.+0      	; 0x60e <_Z10calc_colorv+0x42>
     60e:	00 00       	nop
     610:	80 91 4d 02 	lds	r24, 0x024D
     614:	90 91 4e 02 	lds	r25, 0x024E
     618:	90 93 4c 02 	sts	0x024C, r25
     61c:	80 93 4b 02 	sts	0x024B, r24
     620:	10 92 4e 02 	sts	0x024E, r1
     624:	10 92 4d 02 	sts	0x024D, r1
			  tempCount=0;
     628:	d9 98       	cbi	0x1b, 1	; 27
     62a:	d8 9a       	sbi	0x1b, 0	; 27
     62c:	8f e9       	ldi	r24, 0x9F	; 159
			if(tempCount>=4)
			{
			  headingDegrees=getHeading();
			  x+=(((float)tspeed)/(8.18))*cos(((headingDegrees-axis)*pi)/180);
			  y+=(((float)tspeed)/(8.18))*sin(((headingDegrees-axis)*pi)/180);
			  tspeed=0;
     62e:	9f e0       	ldi	r25, 0x0F	; 15
     630:	01 97       	sbiw	r24, 0x01	; 1
     632:	f1 f7       	brne	.-4      	; 0x630 <_Z10calc_colorv+0x64>
     634:	00 c0       	rjmp	.+0      	; 0x636 <_Z10calc_colorv+0x6a>
			  y_abs = y+23.5*sin(((headingDegrees-axis)*pi)/180);
			  x_abs = x+23.5*cos(((headingDegrees-axis)*pi)/180);
			  tempCount=0;
			}
			goal_position(output);
     636:	00 00       	nop
     638:	80 91 4d 02 	lds	r24, 0x024D
     63c:	90 91 4e 02 	lds	r25, 0x024E
     640:	90 93 48 02 	sts	0x0248, r25
     644:	80 93 47 02 	sts	0x0247, r24
     648:	08 95       	ret

0000064a <_Z11check_colorv>:
     64a:	2f 92       	push	r2
     64c:	3f 92       	push	r3
     64e:	4f 92       	push	r4
			last_output=output;
     650:	5f 92       	push	r5
     652:	6f 92       	push	r6
     654:	7f 92       	push	r7
     656:	8f 92       	push	r8
     658:	9f 92       	push	r9
     65a:	af 92       	push	r10
     65c:	bf 92       	push	r11
     65e:	cf 92       	push	r12
     660:	df 92       	push	r13
     662:	ef 92       	push	r14
     664:	ff 92       	push	r15
     666:	0f 93       	push	r16
     668:	1f 93       	push	r17
     66a:	cf 93       	push	r28
     66c:	df 93       	push	r29
     66e:	cd b7       	in	r28, 0x3d	; 61
			lcd_clear();
     670:	de b7       	in	r29, 0x3e	; 62
     672:	28 97       	sbiw	r28, 0x08	; 8
			Printf("%d %d %d",(int)(x_abs*10),(int)(y_abs*10),headingDegrees);
     674:	0f b6       	in	r0, 0x3f	; 63
     676:	f8 94       	cli
     678:	de bf       	out	0x3e, r29	; 62
     67a:	0f be       	out	0x3f, r0	; 63
     67c:	cd bf       	out	0x3d, r28	; 61
     67e:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_Z10calc_colorv>
     682:	e0 90 4b 02 	lds	r14, 0x024B
     686:	f0 90 4c 02 	lds	r15, 0x024C
     68a:	20 90 49 02 	lds	r2, 0x0249
     68e:	30 90 4a 02 	lds	r3, 0x024A
     692:	00 91 47 02 	lds	r16, 0x0247
     696:	10 91 48 02 	lds	r17, 0x0248
     69a:	22 9c       	mul	r2, r2
     69c:	b0 01       	movw	r22, r0
     69e:	23 9c       	mul	r2, r3
     6a0:	70 0d       	add	r23, r0
     6a2:	70 0d       	add	r23, r0
     6a4:	11 24       	eor	r1, r1
     6a6:	ee 9c       	mul	r14, r14
     6a8:	c0 01       	movw	r24, r0
     6aa:	ef 9c       	mul	r14, r15
     6ac:	90 0d       	add	r25, r0
     6ae:	90 0d       	add	r25, r0
     6b0:	11 24       	eor	r1, r1
     6b2:	68 0f       	add	r22, r24
     6b4:	79 1f       	adc	r23, r25
     6b6:	00 9f       	mul	r16, r16
     6b8:	c0 01       	movw	r24, r0
     6ba:	01 9f       	mul	r16, r17
     6bc:	90 0d       	add	r25, r0
     6be:	90 0d       	add	r25, r0
     6c0:	11 24       	eor	r1, r1
     6c2:	68 0f       	add	r22, r24
     6c4:	79 1f       	adc	r23, r25
     6c6:	80 e0       	ldi	r24, 0x00	; 0
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	0e 94 4e 1d 	call	0x3a9c	; 0x3a9c <__floatunsisf>
     6ce:	0e 94 22 1f 	call	0x3e44	; 0x3e44 <sqrt>
     6d2:	2b 01       	movw	r4, r22
			lcd_gotoxy(0,1);
     6d4:	3c 01       	movw	r6, r24
     6d6:	b7 01       	movw	r22, r14
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	90 e0       	ldi	r25, 0x00	; 0
			Printf("%d %d %d %d",(int)output,(int)(error1),(int)(error2),max_error);
     6dc:	0e 94 4e 1d 	call	0x3a9c	; 0x3a9c <__floatunsisf>
     6e0:	a3 01       	movw	r20, r6
     6e2:	92 01       	movw	r18, r4
     6e4:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
     6e8:	c6 2e       	mov	r12, r22
     6ea:	d7 2e       	mov	r13, r23
     6ec:	e8 2e       	mov	r14, r24
     6ee:	f9 2e       	mov	r15, r25
     6f0:	86 2f       	mov	r24, r22
     6f2:	9d 2d       	mov	r25, r13
     6f4:	ae 2d       	mov	r26, r14
     6f6:	bf 2d       	mov	r27, r15
     6f8:	80 93 27 02 	sts	0x0227, r24
     6fc:	90 93 28 02 	sts	0x0228, r25
     700:	a0 93 29 02 	sts	0x0229, r26
     704:	b0 93 2a 02 	sts	0x022A, r27
     708:	b8 01       	movw	r22, r16
     70a:	80 e0       	ldi	r24, 0x00	; 0
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	0e 94 4e 1d 	call	0x3a9c	; 0x3a9c <__floatunsisf>
     712:	a3 01       	movw	r20, r6
     714:	92 01       	movw	r18, r4
     716:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
     71a:	86 2e       	mov	r8, r22
     71c:	97 2e       	mov	r9, r23
     71e:	a8 2e       	mov	r10, r24
     720:	b9 2e       	mov	r11, r25
     722:	86 2f       	mov	r24, r22
     724:	99 2d       	mov	r25, r9
     726:	aa 2d       	mov	r26, r10
     728:	bb 2d       	mov	r27, r11
     72a:	80 93 1f 02 	sts	0x021F, r24
     72e:	90 93 20 02 	sts	0x0220, r25
     732:	a0 93 21 02 	sts	0x0221, r26
     736:	b0 93 22 02 	sts	0x0222, r27
		x_abs=0;
		speed=0;
		y_abs=0;
		counter=0;
		last_counter=0;
		while(abs(x_abs)<140)
     73a:	b1 01       	movw	r22, r2
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 4e 1d 	call	0x3a9c	; 0x3a9c <__floatunsisf>
     744:	a3 01       	movw	r20, r6
     746:	92 01       	movw	r18, r4
     748:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
     74c:	06 2f       	mov	r16, r22
     74e:	17 2f       	mov	r17, r23
     750:	88 87       	std	Y+8, r24	; 0x08
     752:	9f 83       	std	Y+7, r25	; 0x07
     754:	38 2f       	mov	r19, r24
     756:	29 2f       	mov	r18, r25
     758:	86 2f       	mov	r24, r22
     75a:	91 2f       	mov	r25, r17
     75c:	a3 2f       	mov	r26, r19
     75e:	b2 2f       	mov	r27, r18
     760:	80 93 23 02 	sts	0x0223, r24
			lcd_clear();
			Printf("%d %d %d",(int)(x_abs*10),(int)(y_abs*10),headingDegrees);
			lcd_gotoxy(0,1);
			Printf("%d %d %d %d",(int)output,(int)(error1),(int)(error2),max_error);
		}
		river_entry=0;
     764:	90 93 24 02 	sts	0x0224, r25
     768:	a0 93 25 02 	sts	0x0225, r26
		running=1;
     76c:	b0 93 26 02 	sts	0x0226, r27
     770:	20 2f       	mov	r18, r16
     772:	31 2f       	mov	r19, r17
     774:	4a 2f       	mov	r20, r26
		lcd_clear();
     776:	5b 2f       	mov	r21, r27
     778:	6c 2d       	mov	r22, r12
		position=0;
     77a:	7d 2d       	mov	r23, r13
     77c:	8e 2d       	mov	r24, r14
     77e:	9f 2d       	mov	r25, r15
     780:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
		river_enable=0;
     784:	66 2e       	mov	r6, r22
     786:	77 2e       	mov	r7, r23
     788:	48 2e       	mov	r4, r24
		first_junc=0;
     78a:	59 2e       	mov	r5, r25
     78c:	86 2f       	mov	r24, r22
     78e:	97 2d       	mov	r25, r7
     790:	a4 2d       	mov	r26, r4
		output=straight;
     792:	b5 2d       	mov	r27, r5
     794:	80 93 43 02 	sts	0x0243, r24
     798:	90 93 44 02 	sts	0x0244, r25
     79c:	a0 93 45 02 	sts	0x0245, r26
     7a0:	b0 93 46 02 	sts	0x0246, r27
     7a4:	28 2d       	mov	r18, r8
     7a6:	39 2d       	mov	r19, r9
     7a8:	4a 2d       	mov	r20, r10
     7aa:	5b 2d       	mov	r21, r11
     7ac:	6c 2d       	mov	r22, r12
     7ae:	7d 2d       	mov	r23, r13
     7b0:	8e 2d       	mov	r24, r14
     7b2:	9f 2d       	mov	r25, r15
     7b4:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
		last_output=straight;
     7b8:	6b 83       	std	Y+3, r22	; 0x03
     7ba:	7c 83       	std	Y+4, r23	; 0x04
     7bc:	8d 83       	std	Y+5, r24	; 0x05
     7be:	9e 83       	std	Y+6, r25	; 0x06
     7c0:	47 2f       	mov	r20, r23
     7c2:	38 2f       	mov	r19, r24
     7c4:	29 2f       	mov	r18, r25
		river_flag=1;
     7c6:	86 2f       	mov	r24, r22
     7c8:	94 2f       	mov	r25, r20
     7ca:	a3 2f       	mov	r26, r19
     7cc:	b2 2f       	mov	r27, r18
		counter=0;
     7ce:	80 93 3f 02 	sts	0x023F, r24
     7d2:	90 93 40 02 	sts	0x0240, r25
		last_counter=0;
     7d6:	a0 93 41 02 	sts	0x0241, r26
     7da:	b0 93 42 02 	sts	0x0242, r27
		Printf("outside loop");
     7de:	28 2d       	mov	r18, r8
     7e0:	39 2d       	mov	r19, r9
     7e2:	4a 2d       	mov	r20, r10
     7e4:	5b 2d       	mov	r21, r11
     7e6:	f8 85       	ldd	r31, Y+8	; 0x08
     7e8:	ef 81       	ldd	r30, Y+7	; 0x07
		while(1)
		{
			if(track==1)
     7ea:	60 2f       	mov	r22, r16
     7ec:	71 2f       	mov	r23, r17
     7ee:	8f 2f       	mov	r24, r31
     7f0:	9e 2f       	mov	r25, r30
     7f2:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
     7f6:	60 93 2f 02 	sts	0x022F, r22
     7fa:	70 93 30 02 	sts	0x0230, r23
			{
				if(PINB<64 && PINB>0)
     7fe:	80 93 31 02 	sts	0x0231, r24
     802:	90 93 32 02 	sts	0x0232, r25
     806:	2c 2d       	mov	r18, r12
     808:	3d 2d       	mov	r19, r13
				{
					break;
				}
			}
			if(track==0)
     80a:	4e 2d       	mov	r20, r14
     80c:	5f 2d       	mov	r21, r15
			{
				setPoint=65;
     80e:	68 2d       	mov	r22, r8
     810:	79 2d       	mov	r23, r9
     812:	8a 2d       	mov	r24, r10
     814:	9b 2d       	mov	r25, r11
     816:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
				lower_limit=true_straight+10;
     81a:	26 2e       	mov	r2, r22
     81c:	37 2e       	mov	r3, r23
     81e:	89 83       	std	Y+1, r24	; 0x01
     820:	9a 83       	std	Y+2, r25	; 0x02
     822:	38 2f       	mov	r19, r24
     824:	29 2f       	mov	r18, r25
     826:	86 2f       	mov	r24, r22
     828:	93 2d       	mov	r25, r3
     82a:	a3 2f       	mov	r26, r19
     82c:	b2 2f       	mov	r27, r18
     82e:	80 93 37 02 	sts	0x0237, r24
				upper_limit=true_straight+90;
     832:	90 93 38 02 	sts	0x0238, r25
     836:	a0 93 39 02 	sts	0x0239, r26
     83a:	b0 93 3a 02 	sts	0x023A, r27
				straight=true_straight;
     83e:	98 85       	ldd	r25, Y+8	; 0x08
     840:	8f 81       	ldd	r24, Y+7	; 0x07
     842:	20 2f       	mov	r18, r16
     844:	31 2f       	mov	r19, r17
				}
			}
			
		}
	}
}
     846:	49 2f       	mov	r20, r25
     848:	58 2f       	mov	r21, r24
     84a:	68 2d       	mov	r22, r8
     84c:	79 2d       	mov	r23, r9
     84e:	8a 2d       	mov	r24, r10
     850:	9b 2d       	mov	r25, r11
     852:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
     856:	86 2e       	mov	r8, r22
     858:	97 2e       	mov	r9, r23
     85a:	a8 2e       	mov	r10, r24
     85c:	b9 2e       	mov	r11, r25
     85e:	86 2f       	mov	r24, r22
     860:	99 2d       	mov	r25, r9
     862:	aa 2d       	mov	r26, r10
     864:	bb 2d       	mov	r27, r11
     866:	80 93 3b 02 	sts	0x023B, r24
     86a:	90 93 3c 02 	sts	0x023C, r25
     86e:	a0 93 3d 02 	sts	0x023D, r26
     872:	b0 93 3e 02 	sts	0x023E, r27
     876:	2c 2d       	mov	r18, r12
	rg=(float)r/g;
	rb=(float)r/bl;
	gb=(float)g/bl;
	br=(float)bl/r;
	bg=(float)bl/g;
	gr=(float)g/r;
     878:	3d 2d       	mov	r19, r13
     87a:	4e 2d       	mov	r20, r14
     87c:	5f 2d       	mov	r21, r15
     87e:	f8 85       	ldd	r31, Y+8	; 0x08
     880:	ef 81       	ldd	r30, Y+7	; 0x07
     882:	60 2f       	mov	r22, r16
     884:	71 2f       	mov	r23, r17
     886:	8f 2f       	mov	r24, r31
     888:	9e 2f       	mov	r25, r30
     88a:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
     88e:	06 2f       	mov	r16, r22
     890:	17 2f       	mov	r17, r23
     892:	c8 2e       	mov	r12, r24
     894:	f9 2e       	mov	r15, r25
     896:	86 2f       	mov	r24, r22
     898:	91 2f       	mov	r25, r17
     89a:	ac 2d       	mov	r26, r12
     89c:	bf 2d       	mov	r27, r15
     89e:	80 93 33 02 	sts	0x0233, r24
     8a2:	90 93 34 02 	sts	0x0234, r25
     8a6:	a0 93 35 02 	sts	0x0235, r26
     8aa:	b0 93 36 02 	sts	0x0236, r27
	
	if(rg>1.6 && rb>1.8)
     8ae:	2d ec       	ldi	r18, 0xCD	; 205
     8b0:	3c ec       	ldi	r19, 0xCC	; 204
     8b2:	4c ec       	ldi	r20, 0xCC	; 204
     8b4:	5f e3       	ldi	r21, 0x3F	; 63
     8b6:	66 2d       	mov	r22, r6
     8b8:	77 2d       	mov	r23, r7
     8ba:	84 2d       	mov	r24, r4
     8bc:	95 2d       	mov	r25, r5
     8be:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
     8c2:	18 16       	cp	r1, r24
     8c4:	bc f4       	brge	.+46     	; 0x8f4 <__stack+0x95>
     8c6:	26 e6       	ldi	r18, 0x66	; 102
     8c8:	36 e6       	ldi	r19, 0x66	; 102
     8ca:	46 ee       	ldi	r20, 0xE6	; 230
     8cc:	5f e3       	ldi	r21, 0x3F	; 63
     8ce:	bb 81       	ldd	r27, Y+3	; 0x03
     8d0:	ac 81       	ldd	r26, Y+4	; 0x04
     8d2:	ed 80       	ldd	r14, Y+5	; 0x05
     8d4:	de 80       	ldd	r13, Y+6	; 0x06
     8d6:	6b 2f       	mov	r22, r27
     8d8:	7a 2f       	mov	r23, r26
     8da:	8e 2d       	mov	r24, r14
     8dc:	9d 2d       	mov	r25, r13
     8de:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
     8e2:	18 16       	cp	r1, r24
     8e4:	3c f4       	brge	.+14     	; 0x8f4 <__stack+0x95>
	col=1;
     8e6:	81 e0       	ldi	r24, 0x01	; 1
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	90 93 2e 02 	sts	0x022E, r25
     8ee:	80 93 2d 02 	sts	0x022D, r24
     8f2:	60 c0       	rjmp	.+192    	; 0x9b4 <__stack+0x155>
	else if(br>1.9 && bg>1.4 && bg<1.7)
     8f4:	23 e3       	ldi	r18, 0x33	; 51
     8f6:	33 e3       	ldi	r19, 0x33	; 51
     8f8:	43 ef       	ldi	r20, 0xF3	; 243
     8fa:	5f e3       	ldi	r21, 0x3F	; 63
     8fc:	e9 80       	ldd	r14, Y+1	; 0x01
     8fe:	da 80       	ldd	r13, Y+2	; 0x02
     900:	62 2d       	mov	r22, r2
     902:	73 2d       	mov	r23, r3
     904:	8e 2d       	mov	r24, r14
     906:	9d 2d       	mov	r25, r13
     908:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
     90c:	18 16       	cp	r1, r24
     90e:	fc f4       	brge	.+62     	; 0x94e <__stack+0xef>
     910:	23 e3       	ldi	r18, 0x33	; 51
     912:	33 e3       	ldi	r19, 0x33	; 51
     914:	43 eb       	ldi	r20, 0xB3	; 179
     916:	5f e3       	ldi	r21, 0x3F	; 63
     918:	68 2d       	mov	r22, r8
     91a:	79 2d       	mov	r23, r9
     91c:	8a 2d       	mov	r24, r10
     91e:	9b 2d       	mov	r25, r11
     920:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
     924:	18 16       	cp	r1, r24
     926:	9c f4       	brge	.+38     	; 0x94e <__stack+0xef>
     928:	2a e9       	ldi	r18, 0x9A	; 154
     92a:	39 e9       	ldi	r19, 0x99	; 153
     92c:	49 ed       	ldi	r20, 0xD9	; 217
     92e:	5f e3       	ldi	r21, 0x3F	; 63
     930:	68 2d       	mov	r22, r8
     932:	79 2d       	mov	r23, r9
     934:	8a 2d       	mov	r24, r10
     936:	9b 2d       	mov	r25, r11
     938:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
     93c:	88 23       	and	r24, r24
     93e:	3c f4       	brge	.+14     	; 0x94e <__stack+0xef>
	col=2;
     940:	82 e0       	ldi	r24, 0x02	; 2
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	90 93 2e 02 	sts	0x022E, r25
     948:	80 93 2d 02 	sts	0x022D, r24
     94c:	33 c0       	rjmp	.+102    	; 0x9b4 <__stack+0x155>
	else if( bg<1.2 && gr>1.45 && gr<1.8)  //gr>1.8  gr<2.25
     94e:	2a e9       	ldi	r18, 0x9A	; 154
     950:	39 e9       	ldi	r19, 0x99	; 153
     952:	49 e9       	ldi	r20, 0x99	; 153
     954:	5f e3       	ldi	r21, 0x3F	; 63
     956:	68 2d       	mov	r22, r8
     958:	79 2d       	mov	r23, r9
     95a:	8a 2d       	mov	r24, r10
     95c:	9b 2d       	mov	r25, r11
     95e:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
     962:	88 23       	and	r24, r24
     964:	fc f4       	brge	.+62     	; 0x9a4 <__stack+0x145>
     966:	2a e9       	ldi	r18, 0x9A	; 154
     968:	39 e9       	ldi	r19, 0x99	; 153
     96a:	49 eb       	ldi	r20, 0xB9	; 185
     96c:	5f e3       	ldi	r21, 0x3F	; 63
     96e:	60 2f       	mov	r22, r16
     970:	71 2f       	mov	r23, r17
     972:	8c 2d       	mov	r24, r12
     974:	9f 2d       	mov	r25, r15
     976:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
     97a:	18 16       	cp	r1, r24
     97c:	9c f4       	brge	.+38     	; 0x9a4 <__stack+0x145>
     97e:	26 e6       	ldi	r18, 0x66	; 102
     980:	36 e6       	ldi	r19, 0x66	; 102
     982:	46 ee       	ldi	r20, 0xE6	; 230
     984:	5f e3       	ldi	r21, 0x3F	; 63
     986:	60 2f       	mov	r22, r16
     988:	71 2f       	mov	r23, r17
     98a:	8c 2d       	mov	r24, r12
     98c:	9f 2d       	mov	r25, r15
     98e:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
     992:	88 23       	and	r24, r24
     994:	3c f4       	brge	.+14     	; 0x9a4 <__stack+0x145>
	col=3;
     996:	83 e0       	ldi	r24, 0x03	; 3
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	90 93 2e 02 	sts	0x022E, r25
     99e:	80 93 2d 02 	sts	0x022D, r24
     9a2:	08 c0       	rjmp	.+16     	; 0x9b4 <__stack+0x155>
			col=last_col;
	}*/
	else col=0;
	if(col==0)
	{
		col=last_col;
     9a4:	80 91 2b 02 	lds	r24, 0x022B
     9a8:	90 91 2c 02 	lds	r25, 0x022C
     9ac:	90 93 2e 02 	sts	0x022E, r25
     9b0:	80 93 2d 02 	sts	0x022D, r24
	}
	last_col=col;
     9b4:	80 91 2d 02 	lds	r24, 0x022D
     9b8:	90 91 2e 02 	lds	r25, 0x022E
     9bc:	80 93 2b 02 	sts	0x022B, r24
     9c0:	90 93 2c 02 	sts	0x022C, r25
	return col;
}
     9c4:	28 96       	adiw	r28, 0x08	; 8
     9c6:	0f b6       	in	r0, 0x3f	; 63
     9c8:	f8 94       	cli
     9ca:	de bf       	out	0x3e, r29	; 62
     9cc:	0f be       	out	0x3f, r0	; 63
     9ce:	cd bf       	out	0x3d, r28	; 61
     9d0:	df 91       	pop	r29
     9d2:	cf 91       	pop	r28
     9d4:	1f 91       	pop	r17
     9d6:	0f 91       	pop	r16
     9d8:	ff 90       	pop	r15
     9da:	ef 90       	pop	r14
     9dc:	df 90       	pop	r13
     9de:	cf 90       	pop	r12
     9e0:	bf 90       	pop	r11
     9e2:	af 90       	pop	r10
     9e4:	9f 90       	pop	r9
     9e6:	8f 90       	pop	r8
     9e8:	7f 90       	pop	r7
     9ea:	6f 90       	pop	r6
     9ec:	5f 90       	pop	r5
     9ee:	4f 90       	pop	r4
     9f0:	3f 90       	pop	r3
     9f2:	2f 90       	pop	r2
     9f4:	08 95       	ret

000009f6 <__vector_1>:
int compass_flag=0;
int ending_flag=0;
int compass_flag2=0;

ISR(INT0_vect)
{
     9f6:	1f 92       	push	r1
     9f8:	0f 92       	push	r0
     9fa:	0f b6       	in	r0, 0x3f	; 63
     9fc:	0f 92       	push	r0
     9fe:	11 24       	eor	r1, r1
     a00:	8f 93       	push	r24
     a02:	9f 93       	push	r25
	if(bit_is_set(PIND,5))
     a04:	85 9b       	sbis	0x10, 5	; 16
     a06:	1b c0       	rjmp	.+54     	; 0xa3e <__vector_1+0x48>
	{
		counter--;
     a08:	80 91 1d 02 	lds	r24, 0x021D
     a0c:	90 91 1e 02 	lds	r25, 0x021E
     a10:	01 97       	sbiw	r24, 0x01	; 1
     a12:	90 93 1e 02 	sts	0x021E, r25
     a16:	80 93 1d 02 	sts	0x021D, r24
		if(counter % 8==0)
     a1a:	80 91 1d 02 	lds	r24, 0x021D
     a1e:	90 91 1e 02 	lds	r25, 0x021E
     a22:	87 70       	andi	r24, 0x07	; 7
     a24:	99 27       	eor	r25, r25
     a26:	89 2b       	or	r24, r25
     a28:	21 f5       	brne	.+72     	; 0xa72 <__vector_1+0x7c>
		{
			distance--;
     a2a:	80 91 19 02 	lds	r24, 0x0219
     a2e:	90 91 1a 02 	lds	r25, 0x021A
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	90 93 1a 02 	sts	0x021A, r25
     a38:	80 93 19 02 	sts	0x0219, r24
     a3c:	1a c0       	rjmp	.+52     	; 0xa72 <__vector_1+0x7c>
		}
	}
	else
	{
		counter++;
     a3e:	80 91 1d 02 	lds	r24, 0x021D
     a42:	90 91 1e 02 	lds	r25, 0x021E
     a46:	01 96       	adiw	r24, 0x01	; 1
     a48:	90 93 1e 02 	sts	0x021E, r25
     a4c:	80 93 1d 02 	sts	0x021D, r24
		if(counter%8==0)
     a50:	80 91 1d 02 	lds	r24, 0x021D
     a54:	90 91 1e 02 	lds	r25, 0x021E
     a58:	87 70       	andi	r24, 0x07	; 7
     a5a:	99 27       	eor	r25, r25
     a5c:	89 2b       	or	r24, r25
     a5e:	49 f4       	brne	.+18     	; 0xa72 <__vector_1+0x7c>
		{
			distance++;
     a60:	80 91 19 02 	lds	r24, 0x0219
     a64:	90 91 1a 02 	lds	r25, 0x021A
     a68:	01 96       	adiw	r24, 0x01	; 1
     a6a:	90 93 1a 02 	sts	0x021A, r25
     a6e:	80 93 19 02 	sts	0x0219, r24
		}
	}
	
	
}
     a72:	9f 91       	pop	r25
     a74:	8f 91       	pop	r24
     a76:	0f 90       	pop	r0
     a78:	0f be       	out	0x3f, r0	; 63
     a7a:	0f 90       	pop	r0
     a7c:	1f 90       	pop	r1
     a7e:	18 95       	reti

00000a80 <_Z12init_encoderv>:


void init_encoder()
{
	MCUCR|=(1<<ISC00)|(1<<ISC01);
     a80:	85 b7       	in	r24, 0x35	; 53
     a82:	83 60       	ori	r24, 0x03	; 3
     a84:	85 bf       	out	0x35, r24	; 53
	GICR|=(1<<INT0);
     a86:	8b b7       	in	r24, 0x3b	; 59
     a88:	80 64       	ori	r24, 0x40	; 64
     a8a:	8b bf       	out	0x3b, r24	; 59
	DDRD&=~((1<<PIND5)|(1<<PIND2));
     a8c:	81 b3       	in	r24, 0x11	; 17
     a8e:	8b 7d       	andi	r24, 0xDB	; 219
     a90:	81 bb       	out	0x11, r24	; 17
	PORTD|=(1<<PIND5)|(1<<PIND2);
     a92:	82 b3       	in	r24, 0x12	; 18
     a94:	84 62       	ori	r24, 0x24	; 36
     a96:	82 bb       	out	0x12, r24	; 18
     a98:	08 95       	ret

00000a9a <_Z10init_timerv>:
}
void init_timer()
{
	TCCR0|=(1<<CS02)|(1<<CS00);
     a9a:	83 b7       	in	r24, 0x33	; 51
     a9c:	85 60       	ori	r24, 0x05	; 5
     a9e:	83 bf       	out	0x33, r24	; 51
	TIMSK|=(1<<TOIE0);
     aa0:	89 b7       	in	r24, 0x39	; 57
     aa2:	81 60       	ori	r24, 0x01	; 1
     aa4:	89 bf       	out	0x39, r24	; 57
	TIFR |= (1<<TOV0);
     aa6:	88 b7       	in	r24, 0x38	; 56
     aa8:	81 60       	ori	r24, 0x01	; 1
     aaa:	88 bf       	out	0x38, r24	; 56
     aac:	08 95       	ret

00000aae <__vector_11>:
}

ISR(TIMER0_OVF_vect)
{
     aae:	1f 92       	push	r1
     ab0:	0f 92       	push	r0
     ab2:	0f b6       	in	r0, 0x3f	; 63
     ab4:	0f 92       	push	r0
     ab6:	11 24       	eor	r1, r1
     ab8:	2f 93       	push	r18
     aba:	3f 93       	push	r19
     abc:	8f 93       	push	r24
     abe:	9f 93       	push	r25
	//diffdist=counter-last_counter;
	diffdist=counter-last_counter;
     ac0:	80 91 1d 02 	lds	r24, 0x021D
     ac4:	90 91 1e 02 	lds	r25, 0x021E
     ac8:	20 91 1b 02 	lds	r18, 0x021B
     acc:	30 91 1c 02 	lds	r19, 0x021C
     ad0:	82 1b       	sub	r24, r18
     ad2:	93 0b       	sbc	r25, r19
     ad4:	90 93 16 02 	sts	0x0216, r25
     ad8:	80 93 15 02 	sts	0x0215, r24
	speed=diffdist;
     adc:	80 91 15 02 	lds	r24, 0x0215
     ae0:	90 91 16 02 	lds	r25, 0x0216
     ae4:	90 93 14 02 	sts	0x0214, r25
     ae8:	80 93 13 02 	sts	0x0213, r24
	last_counter=counter;
     aec:	80 91 1d 02 	lds	r24, 0x021D
     af0:	90 91 1e 02 	lds	r25, 0x021E
     af4:	90 93 1c 02 	sts	0x021C, r25
     af8:	80 93 1b 02 	sts	0x021B, r24
	last_dist=distance;
     afc:	80 91 19 02 	lds	r24, 0x0219
     b00:	90 91 1a 02 	lds	r25, 0x021A
     b04:	90 93 18 02 	sts	0x0218, r25
     b08:	80 93 17 02 	sts	0x0217, r24
	displayflag++;
     b0c:	80 91 11 02 	lds	r24, 0x0211
     b10:	90 91 12 02 	lds	r25, 0x0212
     b14:	01 96       	adiw	r24, 0x01	; 1
     b16:	90 93 12 02 	sts	0x0212, r25
     b1a:	80 93 11 02 	sts	0x0211, r24
	
}
     b1e:	9f 91       	pop	r25
     b20:	8f 91       	pop	r24
     b22:	3f 91       	pop	r19
     b24:	2f 91       	pop	r18
     b26:	0f 90       	pop	r0
     b28:	0f be       	out	0x3f, r0	; 63
     b2a:	0f 90       	pop	r0
     b2c:	1f 90       	pop	r1
     b2e:	18 95       	reti

00000b30 <_Z11init_timer2v>:

void init_timer2()
{
	TCCR2|=(1<<WGM21)|(1<<CS22)|(1<<CS20)|(1<<CS21);
     b30:	85 b5       	in	r24, 0x25	; 37
     b32:	8f 60       	ori	r24, 0x0F	; 15
     b34:	85 bd       	out	0x25, r24	; 37
	TIMSK|=(1<<OCIE2);
     b36:	89 b7       	in	r24, 0x39	; 57
     b38:	80 68       	ori	r24, 0x80	; 128
     b3a:	89 bf       	out	0x39, r24	; 57
	OCR2=77;	
     b3c:	8d e4       	ldi	r24, 0x4D	; 77
     b3e:	83 bd       	out	0x23, r24	; 35
     b40:	08 95       	ret

00000b42 <__vector_4>:
}


ISR(TIMER2_COMP_vect)
{
     b42:	1f 92       	push	r1
     b44:	0f 92       	push	r0
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	0f 92       	push	r0
     b4a:	11 24       	eor	r1, r1
     b4c:	8f 93       	push	r24
     b4e:	9f 93       	push	r25
	ending_flag++;
     b50:	80 91 0d 02 	lds	r24, 0x020D
     b54:	90 91 0e 02 	lds	r25, 0x020E
     b58:	01 96       	adiw	r24, 0x01	; 1
     b5a:	90 93 0e 02 	sts	0x020E, r25
     b5e:	80 93 0d 02 	sts	0x020D, r24
}
     b62:	9f 91       	pop	r25
     b64:	8f 91       	pop	r24
     b66:	0f 90       	pop	r0
     b68:	0f be       	out	0x3f, r0	; 63
     b6a:	0f 90       	pop	r0
     b6c:	1f 90       	pop	r1
     b6e:	18 95       	reti

00000b70 <_Z13init_HMC5883Lv>:
int16_t y_offset=22;//56 -58
int16_t z_offset=0;

void init_HMC5883L(void){

	i2c_init();
     b70:	0e 94 a1 1b 	call	0x3742	; 0x3742 <_Z8i2c_initv>
	i2c_start(HMC5883L_WRITE);
     b74:	8c e3       	ldi	r24, 0x3C	; 60
     b76:	0e 94 a5 1b 	call	0x374a	; 0x374a <_Z9i2c_starth>
	i2c_write(0x00); // set pointer to CRA 0x10
     b7a:	80 e0       	ldi	r24, 0x00	; 0
     b7c:	0e 94 cc 1b 	call	0x3798	; 0x3798 <_Z9i2c_writeh>
	i2c_write(0x70); // write 0x70 to CRA  Number of samples per output=8  ,data output rate=15
     b80:	80 e7       	ldi	r24, 0x70	; 112
     b82:	0e 94 cc 1b 	call	0x3798	; 0x3798 <_Z9i2c_writeh>
	i2c_stop();
     b86:	0e 94 c6 1b 	call	0x378c	; 0x378c <_Z8i2c_stopv>

	i2c_start(HMC5883L_WRITE);
     b8a:	8c e3       	ldi	r24, 0x3C	; 60
     b8c:	0e 94 a5 1b 	call	0x374a	; 0x374a <_Z9i2c_starth>
	i2c_write(0x01); // set pointer to CRB  0x20
     b90:	81 e0       	ldi	r24, 0x01	; 1
     b92:	0e 94 cc 1b 	call	0x3798	; 0x3798 <_Z9i2c_writeh>
	i2c_write(0xA0); //gain=390  resolution(mg/LSB)=2.56  ,output= -2048-2047
     b96:	80 ea       	ldi	r24, 0xA0	; 160
     b98:	0e 94 cc 1b 	call	0x3798	; 0x3798 <_Z9i2c_writeh>
	i2c_stop();
     b9c:	0e 94 c6 1b 	call	0x378c	; 0x378c <_Z8i2c_stopv>

	i2c_start(HMC5883L_WRITE);
     ba0:	8c e3       	ldi	r24, 0x3C	; 60
     ba2:	0e 94 a5 1b 	call	0x374a	; 0x374a <_Z9i2c_starth>
	i2c_write(0x02); // set pointer to measurement mode
     ba6:	82 e0       	ldi	r24, 0x02	; 2
     ba8:	0e 94 cc 1b 	call	0x3798	; 0x3798 <_Z9i2c_writeh>
	i2c_write(0x00); // continous measurement
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	0e 94 cc 1b 	call	0x3798	; 0x3798 <_Z9i2c_writeh>
	i2c_stop();
     bb2:	0e 94 c6 1b 	call	0x378c	; 0x378c <_Z8i2c_stopv>
     bb6:	08 95       	ret

00000bb8 <_Z12read_Compassv>:
}

void read_Compass(void){

	i2c_start(HMC5883L_WRITE);
     bb8:	8c e3       	ldi	r24, 0x3C	; 60
     bba:	0e 94 a5 1b 	call	0x374a	; 0x374a <_Z9i2c_starth>
	i2c_write(0x03); //set pointer to X-axis MSB
     bbe:	83 e0       	ldi	r24, 0x03	; 3
     bc0:	0e 94 cc 1b 	call	0x3798	; 0x3798 <_Z9i2c_writeh>
	i2c_stop();
     bc4:	0e 94 c6 1b 	call	0x378c	; 0x378c <_Z8i2c_stopv>

	i2c_rep_start(HMC5883L_READ);
     bc8:	8d e3       	ldi	r24, 0x3D	; 61
     bca:	0e 94 c3 1b 	call	0x3786	; 0x3786 <_Z13i2c_rep_starth>

	raw_x = ((uint8_t)i2c_readAck())<<8;
     bce:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_Z11i2c_readAckv>
     bd2:	10 92 0b 02 	sts	0x020B, r1
     bd6:	80 93 0c 02 	sts	0x020C, r24
	raw_x |= i2c_readAck();
     bda:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_Z11i2c_readAckv>
     bde:	20 91 0b 02 	lds	r18, 0x020B
     be2:	30 91 0c 02 	lds	r19, 0x020C
     be6:	28 2b       	or	r18, r24
     be8:	30 93 0c 02 	sts	0x020C, r19
     bec:	20 93 0b 02 	sts	0x020B, r18
	
	raw_z = ((uint8_t)i2c_readAck())<<8;
     bf0:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_Z11i2c_readAckv>
     bf4:	10 92 07 02 	sts	0x0207, r1
     bf8:	80 93 08 02 	sts	0x0208, r24
	raw_z |= i2c_readAck();
     bfc:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_Z11i2c_readAckv>
     c00:	20 91 07 02 	lds	r18, 0x0207
     c04:	30 91 08 02 	lds	r19, 0x0208
     c08:	28 2b       	or	r18, r24
     c0a:	30 93 08 02 	sts	0x0208, r19
     c0e:	20 93 07 02 	sts	0x0207, r18
	
	
	raw_y = ((uint8_t)i2c_readAck())<<8;
     c12:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_Z11i2c_readAckv>
     c16:	10 92 09 02 	sts	0x0209, r1
     c1a:	80 93 0a 02 	sts	0x020A, r24
	raw_y |= i2c_readNak();
     c1e:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <_Z11i2c_readNakv>
     c22:	20 91 09 02 	lds	r18, 0x0209
     c26:	30 91 0a 02 	lds	r19, 0x020A
     c2a:	28 2b       	or	r18, r24
     c2c:	30 93 0a 02 	sts	0x020A, r19
     c30:	20 93 09 02 	sts	0x0209, r18
	
	i2c_stop();
     c34:	0e 94 c6 1b 	call	0x378c	; 0x378c <_Z8i2c_stopv>
     c38:	08 95       	ret

00000c3a <_Z17calibrate_compassv>:
}
void calibrate_compass()
{ 
     c3a:	cf 93       	push	r28
     c3c:	df 93       	push	r29
     c3e:	c8 ee       	ldi	r28, 0xE8	; 232
     c40:	d3 e0       	ldi	r29, 0x03	; 3
	float x_avg=0,y_avg=0,z_avg=0;
	float all_avg=0;

	for(int i=0;i<1000;i++)
	{
		read_Compass();
     c42:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <_Z12read_Compassv>
		if(raw_x>x_max)
     c46:	80 91 0b 02 	lds	r24, 0x020B
     c4a:	90 91 0c 02 	lds	r25, 0x020C
     c4e:	20 91 f7 01 	lds	r18, 0x01F7
     c52:	30 91 f8 01 	lds	r19, 0x01F8
     c56:	28 17       	cp	r18, r24
     c58:	39 07       	cpc	r19, r25
     c5a:	2c f4       	brge	.+10     	; 0xc66 <_Z17calibrate_compassv+0x2c>
		x_max=raw_x;
     c5c:	90 93 f8 01 	sts	0x01F8, r25
     c60:	80 93 f7 01 	sts	0x01F7, r24
     c64:	0b c0       	rjmp	.+22     	; 0xc7c <_Z17calibrate_compassv+0x42>
		else if(raw_x<x_min)
     c66:	20 91 f1 01 	lds	r18, 0x01F1
     c6a:	30 91 f2 01 	lds	r19, 0x01F2
     c6e:	82 17       	cp	r24, r18
     c70:	93 07       	cpc	r25, r19
     c72:	24 f4       	brge	.+8      	; 0xc7c <_Z17calibrate_compassv+0x42>
		x_min=raw_x;
     c74:	90 93 f2 01 	sts	0x01F2, r25
     c78:	80 93 f1 01 	sts	0x01F1, r24
		if(raw_y>y_max)
     c7c:	80 91 09 02 	lds	r24, 0x0209
     c80:	90 91 0a 02 	lds	r25, 0x020A
     c84:	20 91 f5 01 	lds	r18, 0x01F5
     c88:	30 91 f6 01 	lds	r19, 0x01F6
     c8c:	28 17       	cp	r18, r24
     c8e:	39 07       	cpc	r19, r25
     c90:	2c f4       	brge	.+10     	; 0xc9c <_Z17calibrate_compassv+0x62>
		y_max=raw_y;
     c92:	90 93 f6 01 	sts	0x01F6, r25
     c96:	80 93 f5 01 	sts	0x01F5, r24
     c9a:	0b c0       	rjmp	.+22     	; 0xcb2 <_Z17calibrate_compassv+0x78>
		else if(raw_y<y_min)
     c9c:	20 91 ef 01 	lds	r18, 0x01EF
     ca0:	30 91 f0 01 	lds	r19, 0x01F0
     ca4:	82 17       	cp	r24, r18
     ca6:	93 07       	cpc	r25, r19
     ca8:	24 f4       	brge	.+8      	; 0xcb2 <_Z17calibrate_compassv+0x78>
		y_min=raw_y;
     caa:	90 93 f0 01 	sts	0x01F0, r25
     cae:	80 93 ef 01 	sts	0x01EF, r24
		if(raw_z>z_max)
     cb2:	80 91 07 02 	lds	r24, 0x0207
     cb6:	90 91 08 02 	lds	r25, 0x0208
     cba:	20 91 f3 01 	lds	r18, 0x01F3
     cbe:	30 91 f4 01 	lds	r19, 0x01F4
     cc2:	28 17       	cp	r18, r24
     cc4:	39 07       	cpc	r19, r25
     cc6:	2c f4       	brge	.+10     	; 0xcd2 <_Z17calibrate_compassv+0x98>
		z_max=raw_z;
     cc8:	90 93 f4 01 	sts	0x01F4, r25
     ccc:	80 93 f3 01 	sts	0x01F3, r24
     cd0:	0b c0       	rjmp	.+22     	; 0xce8 <_Z17calibrate_compassv+0xae>
		else if(raw_z<z_min)
     cd2:	20 91 ed 01 	lds	r18, 0x01ED
     cd6:	30 91 ee 01 	lds	r19, 0x01EE
     cda:	82 17       	cp	r24, r18
     cdc:	93 07       	cpc	r25, r19
     cde:	24 f4       	brge	.+8      	; 0xce8 <_Z17calibrate_compassv+0xae>
		z_min=raw_z;
     ce0:	90 93 ee 01 	sts	0x01EE, r25
     ce4:	80 93 ed 01 	sts	0x01ED, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ce8:	8f e3       	ldi	r24, 0x3F	; 63
     cea:	9c e9       	ldi	r25, 0x9C	; 156
     cec:	01 97       	sbiw	r24, 0x01	; 1
     cee:	f1 f7       	brne	.-4      	; 0xcec <_Z17calibrate_compassv+0xb2>
     cf0:	00 c0       	rjmp	.+0      	; 0xcf2 <_Z17calibrate_compassv+0xb8>
     cf2:	00 00       	nop
     cf4:	21 97       	sbiw	r28, 0x01	; 1
{ 

	float x_avg=0,y_avg=0,z_avg=0;
	float all_avg=0;

	for(int i=0;i<1000;i++)
     cf6:	09 f0       	breq	.+2      	; 0xcfa <_Z17calibrate_compassv+0xc0>
     cf8:	a4 cf       	rjmp	.-184    	; 0xc42 <_Z17calibrate_compassv+0x8>
		else if(raw_z<z_min)
		z_min=raw_z;
	_delay_ms(10);
	
	}
	x_offset=((x_max+x_min)/2);
     cfa:	20 91 f7 01 	lds	r18, 0x01F7
     cfe:	30 91 f8 01 	lds	r19, 0x01F8
     d02:	80 91 f1 01 	lds	r24, 0x01F1
     d06:	90 91 f2 01 	lds	r25, 0x01F2
     d0a:	82 0f       	add	r24, r18
     d0c:	93 1f       	adc	r25, r19
     d0e:	99 23       	and	r25, r25
     d10:	0c f4       	brge	.+2      	; 0xd14 <_Z17calibrate_compassv+0xda>
     d12:	01 96       	adiw	r24, 0x01	; 1
     d14:	95 95       	asr	r25
     d16:	87 95       	ror	r24
     d18:	90 93 a1 00 	sts	0x00A1, r25
     d1c:	80 93 a0 00 	sts	0x00A0, r24
	y_offset=((y_min +y_max)/2);
     d20:	20 91 ef 01 	lds	r18, 0x01EF
     d24:	30 91 f0 01 	lds	r19, 0x01F0
     d28:	80 91 f5 01 	lds	r24, 0x01F5
     d2c:	90 91 f6 01 	lds	r25, 0x01F6
     d30:	82 0f       	add	r24, r18
     d32:	93 1f       	adc	r25, r19
     d34:	99 23       	and	r25, r25
     d36:	0c f4       	brge	.+2      	; 0xd3a <_Z17calibrate_compassv+0x100>
     d38:	01 96       	adiw	r24, 0x01	; 1
     d3a:	95 95       	asr	r25
     d3c:	87 95       	ror	r24
     d3e:	90 93 9f 00 	sts	0x009F, r25
     d42:	80 93 9e 00 	sts	0x009E, r24
	z_offset=((z_min +z_max)/2);
     d46:	20 91 ed 01 	lds	r18, 0x01ED
     d4a:	30 91 ee 01 	lds	r19, 0x01EE
     d4e:	80 91 f3 01 	lds	r24, 0x01F3
     d52:	90 91 f4 01 	lds	r25, 0x01F4
     d56:	82 0f       	add	r24, r18
     d58:	93 1f       	adc	r25, r19
     d5a:	99 23       	and	r25, r25
     d5c:	0c f4       	brge	.+2      	; 0xd60 <_Z17calibrate_compassv+0x126>
     d5e:	01 96       	adiw	r24, 0x01	; 1
     d60:	95 95       	asr	r25
     d62:	87 95       	ror	r24
     d64:	90 93 ec 01 	sts	0x01EC, r25
     d68:	80 93 eb 01 	sts	0x01EB, r24
	x_scale=all_avg/x_avg;
	y_scale=all_avg/y_avg;
	z_scale=all_avg/z_avg;
	*/
	
}
     d6c:	df 91       	pop	r29
     d6e:	cf 91       	pop	r28
     d70:	08 95       	ret

00000d72 <_Z10getHeadingv>:
float getHeading()
{
     d72:	cf 92       	push	r12
     d74:	df 92       	push	r13
     d76:	ef 92       	push	r14
     d78:	ff 92       	push	r15
     d7a:	cf 93       	push	r28
     d7c:	df 93       	push	r29
	read_Compass();
     d7e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <_Z12read_Compassv>
	raw_x=(raw_x-x_offset);
     d82:	60 91 0b 02 	lds	r22, 0x020B
     d86:	70 91 0c 02 	lds	r23, 0x020C
     d8a:	80 91 a0 00 	lds	r24, 0x00A0
     d8e:	90 91 a1 00 	lds	r25, 0x00A1
     d92:	68 1b       	sub	r22, r24
     d94:	79 0b       	sbc	r23, r25
     d96:	70 93 0c 02 	sts	0x020C, r23
     d9a:	60 93 0b 02 	sts	0x020B, r22
	raw_y=(raw_y-y_offset);//*y_scale;
     d9e:	c0 91 09 02 	lds	r28, 0x0209
     da2:	d0 91 0a 02 	lds	r29, 0x020A
     da6:	80 91 9e 00 	lds	r24, 0x009E
     daa:	90 91 9f 00 	lds	r25, 0x009F
     dae:	c8 1b       	sub	r28, r24
     db0:	d9 0b       	sbc	r29, r25
     db2:	d0 93 0a 02 	sts	0x020A, r29
     db6:	c0 93 09 02 	sts	0x0209, r28
	raw_z=(raw_z-z_offset);//*z_scal
     dba:	80 91 07 02 	lds	r24, 0x0207
     dbe:	90 91 08 02 	lds	r25, 0x0208
     dc2:	20 91 eb 01 	lds	r18, 0x01EB
     dc6:	30 91 ec 01 	lds	r19, 0x01EC
     dca:	82 1b       	sub	r24, r18
     dcc:	93 0b       	sbc	r25, r19
     dce:	90 93 08 02 	sts	0x0208, r25
     dd2:	80 93 07 02 	sts	0x0207, r24
	// convert the raw data into a heading in degrees
	headingDegrees1 = atan2((double)raw_y,(double)raw_x)* 180 / 3.14159265 + 180;
     dd6:	88 27       	eor	r24, r24
     dd8:	77 fd       	sbrc	r23, 7
     dda:	80 95       	com	r24
     ddc:	98 2f       	mov	r25, r24
     dde:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
     de2:	6b 01       	movw	r12, r22
     de4:	7c 01       	movw	r14, r24
     de6:	be 01       	movw	r22, r28
     de8:	88 27       	eor	r24, r24
     dea:	77 fd       	sbrc	r23, 7
     dec:	80 95       	com	r24
     dee:	98 2f       	mov	r25, r24
     df0:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
     df4:	a7 01       	movw	r20, r14
     df6:	96 01       	movw	r18, r12
     df8:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <atan2>
     dfc:	20 e0       	ldi	r18, 0x00	; 0
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	44 e3       	ldi	r20, 0x34	; 52
     e02:	53 e4       	ldi	r21, 0x43	; 67
     e04:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
     e08:	2b ed       	ldi	r18, 0xDB	; 219
     e0a:	3f e0       	ldi	r19, 0x0F	; 15
     e0c:	49 e4       	ldi	r20, 0x49	; 73
     e0e:	50 e4       	ldi	r21, 0x40	; 64
     e10:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
     e14:	20 e0       	ldi	r18, 0x00	; 0
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	44 e3       	ldi	r20, 0x34	; 52
     e1a:	53 e4       	ldi	r21, 0x43	; 67
     e1c:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
     e20:	e6 2e       	mov	r14, r22
     e22:	f7 2e       	mov	r15, r23
     e24:	d8 2f       	mov	r29, r24
     e26:	c9 2f       	mov	r28, r25
     e28:	98 2f       	mov	r25, r24
     e2a:	4e 2d       	mov	r20, r14
     e2c:	5f 2d       	mov	r21, r15
     e2e:	69 2f       	mov	r22, r25
     e30:	7c 2f       	mov	r23, r28
     e32:	40 93 fd 01 	sts	0x01FD, r20
     e36:	50 93 fe 01 	sts	0x01FE, r21
     e3a:	60 93 ff 01 	sts	0x01FF, r22
     e3e:	70 93 00 02 	sts	0x0200, r23
	headingDegrees2=headingDegrees1-compass_offset;
     e42:	60 91 01 02 	lds	r22, 0x0201
     e46:	70 91 02 02 	lds	r23, 0x0202
     e4a:	88 27       	eor	r24, r24
     e4c:	77 fd       	sbrc	r23, 7
     e4e:	80 95       	com	r24
     e50:	98 2f       	mov	r25, r24
     e52:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
     e56:	9b 01       	movw	r18, r22
     e58:	ac 01       	movw	r20, r24
     e5a:	6e 2d       	mov	r22, r14
     e5c:	7f 2d       	mov	r23, r15
     e5e:	8d 2f       	mov	r24, r29
     e60:	9c 2f       	mov	r25, r28
     e62:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <__subsf3>
     e66:	e6 2e       	mov	r14, r22
     e68:	f7 2e       	mov	r15, r23
     e6a:	d8 2f       	mov	r29, r24
     e6c:	c9 2f       	mov	r28, r25
	if(headingDegrees2<0)
     e6e:	20 e0       	ldi	r18, 0x00	; 0
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	a9 01       	movw	r20, r18
     e74:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
     e78:	88 23       	and	r24, r24
     e7a:	9c f4       	brge	.+38     	; 0xea2 <_Z10getHeadingv+0x130>
		headingDegrees2=360+headingDegrees2;
     e7c:	20 e0       	ldi	r18, 0x00	; 0
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	44 eb       	ldi	r20, 0xB4	; 180
     e82:	53 e4       	ldi	r21, 0x43	; 67
     e84:	6e 2d       	mov	r22, r14
     e86:	7f 2d       	mov	r23, r15
     e88:	8d 2f       	mov	r24, r29
     e8a:	9c 2f       	mov	r25, r28
     e8c:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
     e90:	60 93 f9 01 	sts	0x01F9, r22
     e94:	70 93 fa 01 	sts	0x01FA, r23
     e98:	80 93 fb 01 	sts	0x01FB, r24
     e9c:	90 93 fc 01 	sts	0x01FC, r25
     ea0:	2b c0       	rjmp	.+86     	; 0xef8 <_Z10getHeadingv+0x186>
	else if(headingDegrees2>360)
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	44 eb       	ldi	r20, 0xB4	; 180
     ea8:	53 e4       	ldi	r21, 0x43	; 67
     eaa:	6e 2d       	mov	r22, r14
     eac:	7f 2d       	mov	r23, r15
     eae:	8d 2f       	mov	r24, r29
     eb0:	9c 2f       	mov	r25, r28
     eb2:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
     eb6:	18 16       	cp	r1, r24
     eb8:	6c f0       	brlt	.+26     	; 0xed4 <_Z10getHeadingv+0x162>
	raw_x=(raw_x-x_offset);
	raw_y=(raw_y-y_offset);//*y_scale;
	raw_z=(raw_z-z_offset);//*z_scal
	// convert the raw data into a heading in degrees
	headingDegrees1 = atan2((double)raw_y,(double)raw_x)* 180 / 3.14159265 + 180;
	headingDegrees2=headingDegrees1-compass_offset;
     eba:	8e 2d       	mov	r24, r14
     ebc:	9f 2d       	mov	r25, r15
     ebe:	ad 2f       	mov	r26, r29
     ec0:	bc 2f       	mov	r27, r28
     ec2:	80 93 f9 01 	sts	0x01F9, r24
     ec6:	90 93 fa 01 	sts	0x01FA, r25
     eca:	a0 93 fb 01 	sts	0x01FB, r26
     ece:	b0 93 fc 01 	sts	0x01FC, r27
     ed2:	12 c0       	rjmp	.+36     	; 0xef8 <_Z10getHeadingv+0x186>
	if(headingDegrees2<0)
		headingDegrees2=360+headingDegrees2;
	else if(headingDegrees2>360)
		headingDegrees2=headingDegrees2-360;
     ed4:	20 e0       	ldi	r18, 0x00	; 0
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	44 eb       	ldi	r20, 0xB4	; 180
     eda:	53 e4       	ldi	r21, 0x43	; 67
     edc:	6e 2d       	mov	r22, r14
     ede:	7f 2d       	mov	r23, r15
     ee0:	8d 2f       	mov	r24, r29
     ee2:	9c 2f       	mov	r25, r28
     ee4:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <__subsf3>
     ee8:	60 93 f9 01 	sts	0x01F9, r22
     eec:	70 93 fa 01 	sts	0x01FA, r23
     ef0:	80 93 fb 01 	sts	0x01FB, r24
     ef4:	90 93 fc 01 	sts	0x01FC, r25
	return headingDegrees2;
}
     ef8:	50 91 f9 01 	lds	r21, 0x01F9
     efc:	40 91 fa 01 	lds	r20, 0x01FA
     f00:	30 91 fb 01 	lds	r19, 0x01FB
     f04:	20 91 fc 01 	lds	r18, 0x01FC
     f08:	65 2f       	mov	r22, r21
     f0a:	74 2f       	mov	r23, r20
     f0c:	83 2f       	mov	r24, r19
     f0e:	92 2f       	mov	r25, r18
     f10:	df 91       	pop	r29
     f12:	cf 91       	pop	r28
     f14:	ff 90       	pop	r15
     f16:	ef 90       	pop	r14
     f18:	df 90       	pop	r13
     f1a:	cf 90       	pop	r12
     f1c:	08 95       	ret

00000f1e <_Z24calculate_compass_offsetv>:
void calculate_compass_offset()
{
	heading_proxy=getHeading();
     f1e:	0e 94 b9 06 	call	0xd72	; 0xd72 <_Z10getHeadingv>
     f22:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
     f26:	70 93 04 02 	sts	0x0204, r23
     f2a:	60 93 03 02 	sts	0x0203, r22
	compass_offset=heading_proxy-180;
     f2e:	cb 01       	movw	r24, r22
     f30:	84 5b       	subi	r24, 0xB4	; 180
     f32:	91 09       	sbc	r25, r1
     f34:	90 93 02 02 	sts	0x0202, r25
     f38:	80 93 01 02 	sts	0x0201, r24
     f3c:	08 95       	ret

00000f3e <_Z8init_allv>:
int downhill_flag=0; 

//FUNCTIONS
void init_all()
{
	init_encoder();
     f3e:	0e 94 40 05 	call	0xa80	; 0xa80 <_Z12init_encoderv>
	init_timer();
     f42:	0e 94 4d 05 	call	0xa9a	; 0xa9a <_Z10init_timerv>
	init_timer2();
     f46:	0e 94 98 05 	call	0xb30	; 0xb30 <_Z11init_timer2v>
	dynamixel_init();
     f4a:	0e 94 cf 01 	call	0x39e	; 0x39e <_Z14dynamixel_initv>
	sei();
     f4e:	78 94       	sei
	lcd_init();
     f50:	0e 94 0c 02 	call	0x418	; 0x418 <_Z8lcd_initv>
	init_color_sensor();
     f54:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <_Z17init_color_sensorv>
	init_HMC5883L();
     f58:	0e 94 b8 05 	call	0xb70	; 0xb70 <_Z13init_HMC5883Lv>
	GAME_FIELD_D&=~(1<<GAME_FIELD);
     f5c:	a2 98       	cbi	0x14, 2	; 20
	CHECK_POINT_3_D&=~(1<<CHECK_POINT_3);
     f5e:	8f 98       	cbi	0x11, 7	; 17
	NINETY_COUNT_D&=~(1<<NINETY_COUNT);
     f60:	a6 98       	cbi	0x14, 6	; 20
	NINETY_COUNT_LOOP_D&=~(1<<NINETY_COUNT_LOOP);
     f62:	d3 98       	cbi	0x1a, 3	; 26
     f64:	08 95       	ret

00000f66 <_Z31check_for_field_and_check_pointv>:
}
void check_for_field_and_check_point()
{
     f66:	0f 93       	push	r16
     f68:	1f 93       	push	r17
     f6a:	cf 93       	push	r28
     f6c:	df 93       	push	r29
	calculate_compass_offset();
     f6e:	0e 94 8f 07 	call	0xf1e	; 0xf1e <_Z24calculate_compass_offsetv>
	headingDegrees=getHeading();
     f72:	0e 94 b9 06 	call	0xd72	; 0xd72 <_Z10getHeadingv>
     f76:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
     f7a:	9b 01       	movw	r18, r22
     f7c:	70 93 06 02 	sts	0x0206, r23
     f80:	60 93 05 02 	sts	0x0205, r22
	if (bit_is_clear(GAME_FIELD_P,GAME_FIELD))//for RIght gamefield
     f84:	9a 99       	sbic	0x13, 2	; 19
     f86:	35 c0       	rjmp	.+106    	; 0xff2 <_Z31check_for_field_and_check_pointv+0x8c>
	{
		axis=headingDegrees-90;
     f88:	2a 55       	subi	r18, 0x5A	; 90
     f8a:	31 09       	sbc	r19, r1
     f8c:	30 93 6b 00 	sts	0x006B, r19
     f90:	20 93 6a 00 	sts	0x006A, r18
		track=0;
     f94:	10 92 5f 01 	sts	0x015F, r1
     f98:	10 92 5e 01 	sts	0x015E, r1
		red_field=-1;
     f9c:	8f ef       	ldi	r24, 0xFF	; 255
     f9e:	9f ef       	ldi	r25, 0xFF	; 255
     fa0:	90 93 9d 00 	sts	0x009D, r25
     fa4:	80 93 9c 00 	sts	0x009C, r24
		river_compass_angle=251-compass_offset;
     fa8:	20 91 01 02 	lds	r18, 0x0201
     fac:	30 91 02 02 	lds	r19, 0x0202
     fb0:	8b ef       	ldi	r24, 0xFB	; 251
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	82 1b       	sub	r24, r18
     fb6:	93 0b       	sbc	r25, r19
		if(river_compass_angle>360)
     fb8:	89 36       	cpi	r24, 0x69	; 105
     fba:	41 e0       	ldi	r20, 0x01	; 1
     fbc:	94 07       	cpc	r25, r20
     fbe:	4c f0       	brlt	.+18     	; 0xfd2 <_Z31check_for_field_and_check_pointv+0x6c>
			river_compass_angle=river_compass_angle-360;
     fc0:	83 e9       	ldi	r24, 0x93	; 147
     fc2:	9f ef       	ldi	r25, 0xFF	; 255
     fc4:	82 1b       	sub	r24, r18
     fc6:	93 0b       	sbc	r25, r19
     fc8:	90 93 7d 01 	sts	0x017D, r25
     fcc:	80 93 7c 01 	sts	0x017C, r24
     fd0:	46 c0       	rjmp	.+140    	; 0x105e <_Z31check_for_field_and_check_pointv+0xf8>
		else if(river_compass_angle<0)
     fd2:	99 23       	and	r25, r25
     fd4:	2c f0       	brlt	.+10     	; 0xfe0 <_Z31check_for_field_and_check_pointv+0x7a>
	if (bit_is_clear(GAME_FIELD_P,GAME_FIELD))//for RIght gamefield
	{
		axis=headingDegrees-90;
		track=0;
		red_field=-1;
		river_compass_angle=251-compass_offset;
     fd6:	90 93 7d 01 	sts	0x017D, r25
     fda:	80 93 7c 01 	sts	0x017C, r24
     fde:	3f c0       	rjmp	.+126    	; 0x105e <_Z31check_for_field_and_check_pointv+0xf8>
		if(river_compass_angle>360)
			river_compass_angle=river_compass_angle-360;
		else if(river_compass_angle<0)
			river_compass_angle=360+river_compass_angle;
     fe0:	83 e6       	ldi	r24, 0x63	; 99
     fe2:	92 e0       	ldi	r25, 0x02	; 2
     fe4:	82 1b       	sub	r24, r18
     fe6:	93 0b       	sbc	r25, r19
     fe8:	90 93 7d 01 	sts	0x017D, r25
     fec:	80 93 7c 01 	sts	0x017C, r24
     ff0:	36 c0       	rjmp	.+108    	; 0x105e <_Z31check_for_field_and_check_pointv+0xf8>
	}
	else if(bit_is_set(GAME_FIELD_P,GAME_FIELD))//for left gamefield
     ff2:	9a 9b       	sbis	0x13, 2	; 19
     ff4:	34 c0       	rjmp	.+104    	; 0x105e <_Z31check_for_field_and_check_pointv+0xf8>
	{
		axis=headingDegrees-90;
     ff6:	2a 55       	subi	r18, 0x5A	; 90
     ff8:	31 09       	sbc	r19, r1
     ffa:	30 93 6b 00 	sts	0x006B, r19
     ffe:	20 93 6a 00 	sts	0x006A, r18
		track=1;
    1002:	81 e0       	ldi	r24, 0x01	; 1
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	90 93 5f 01 	sts	0x015F, r25
    100a:	80 93 5e 01 	sts	0x015E, r24
		red_field=1;
    100e:	90 93 9d 00 	sts	0x009D, r25
    1012:	80 93 9c 00 	sts	0x009C, r24
		river_compass_angle=71-compass_offset;
    1016:	20 91 01 02 	lds	r18, 0x0201
    101a:	30 91 02 02 	lds	r19, 0x0202
    101e:	87 e4       	ldi	r24, 0x47	; 71
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	82 1b       	sub	r24, r18
    1024:	93 0b       	sbc	r25, r19
		if(river_compass_angle>360)
    1026:	89 36       	cpi	r24, 0x69	; 105
    1028:	41 e0       	ldi	r20, 0x01	; 1
    102a:	94 07       	cpc	r25, r20
    102c:	4c f0       	brlt	.+18     	; 0x1040 <_Z31check_for_field_and_check_pointv+0xda>
			river_compass_angle=river_compass_angle-360;
    102e:	8f ed       	ldi	r24, 0xDF	; 223
    1030:	9e ef       	ldi	r25, 0xFE	; 254
    1032:	82 1b       	sub	r24, r18
    1034:	93 0b       	sbc	r25, r19
    1036:	90 93 7d 01 	sts	0x017D, r25
    103a:	80 93 7c 01 	sts	0x017C, r24
    103e:	0f c0       	rjmp	.+30     	; 0x105e <_Z31check_for_field_and_check_pointv+0xf8>
		else if(river_compass_angle<0)
    1040:	99 23       	and	r25, r25
    1042:	2c f0       	brlt	.+10     	; 0x104e <_Z31check_for_field_and_check_pointv+0xe8>
	else if(bit_is_set(GAME_FIELD_P,GAME_FIELD))//for left gamefield
	{
		axis=headingDegrees-90;
		track=1;
		red_field=1;
		river_compass_angle=71-compass_offset;
    1044:	90 93 7d 01 	sts	0x017D, r25
    1048:	80 93 7c 01 	sts	0x017C, r24
    104c:	08 c0       	rjmp	.+16     	; 0x105e <_Z31check_for_field_and_check_pointv+0xf8>
		if(river_compass_angle>360)
			river_compass_angle=river_compass_angle-360;
		else if(river_compass_angle<0)
			river_compass_angle=360+river_compass_angle;
    104e:	8f ea       	ldi	r24, 0xAF	; 175
    1050:	91 e0       	ldi	r25, 0x01	; 1
    1052:	82 1b       	sub	r24, r18
    1054:	93 0b       	sbc	r25, r19
    1056:	90 93 7d 01 	sts	0x017D, r25
    105a:	80 93 7c 01 	sts	0x017C, r24
	}
	lcd_clear();
    105e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
	Printf("STARTING TRACK=%d",track);
    1062:	80 91 5f 01 	lds	r24, 0x015F
    1066:	8f 93       	push	r24
    1068:	80 91 5e 01 	lds	r24, 0x015E
    106c:	8f 93       	push	r24
    106e:	84 ea       	ldi	r24, 0xA4	; 164
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	9f 93       	push	r25
    1074:	8f 93       	push	r24
    1076:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
	lcd_gotoxy(0,1);
    107a:	61 e0       	ldi	r22, 0x01	; 1
    107c:	80 e0       	ldi	r24, 0x00	; 0
    107e:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_Z10lcd_gotoxyhh>
	Printf("C=%d N=%d",headingDegrees,axis);
    1082:	80 91 6b 00 	lds	r24, 0x006B
    1086:	8f 93       	push	r24
    1088:	80 91 6a 00 	lds	r24, 0x006A
    108c:	8f 93       	push	r24
    108e:	80 91 06 02 	lds	r24, 0x0206
    1092:	8f 93       	push	r24
    1094:	80 91 05 02 	lds	r24, 0x0205
    1098:	8f 93       	push	r24
    109a:	86 eb       	ldi	r24, 0xB6	; 182
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	9f 93       	push	r25
    10a0:	8f 93       	push	r24
    10a2:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
    10a6:	8f ef       	ldi	r24, 0xFF	; 255
    10a8:	93 ed       	ldi	r25, 0xD3	; 211
    10aa:	20 e3       	ldi	r18, 0x30	; 48
    10ac:	81 50       	subi	r24, 0x01	; 1
    10ae:	90 40       	sbci	r25, 0x00	; 0
    10b0:	20 40       	sbci	r18, 0x00	; 0
    10b2:	e1 f7       	brne	.-8      	; 0x10ac <_Z31check_for_field_and_check_pointv+0x146>
    10b4:	00 c0       	rjmp	.+0      	; 0x10b6 <_Z31check_for_field_and_check_pointv+0x150>
    10b6:	00 00       	nop
	_delay_ms(1000);
	if(bit_is_clear(CHECK_POINT_3_P,CHECK_POINT_3))
    10b8:	8d b7       	in	r24, 0x3d	; 61
    10ba:	9e b7       	in	r25, 0x3e	; 62
    10bc:	0a 96       	adiw	r24, 0x0a	; 10
    10be:	0f b6       	in	r0, 0x3f	; 63
    10c0:	f8 94       	cli
    10c2:	9e bf       	out	0x3e, r25	; 62
    10c4:	0f be       	out	0x3f, r0	; 63
    10c6:	8d bf       	out	0x3d, r24	; 61
    10c8:	87 99       	sbic	0x10, 7	; 16
    10ca:	37 c0       	rjmp	.+110    	; 0x113a <_Z31check_for_field_and_check_pointv+0x1d4>
	{
		headingDegrees=getHeading();
    10cc:	0e 94 b9 06 	call	0xd72	; 0xd72 <_Z10getHeadingv>
    10d0:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    10d4:	9b 01       	movw	r18, r22
    10d6:	70 93 06 02 	sts	0x0206, r23
    10da:	60 93 05 02 	sts	0x0205, r22
		if(track==0)
    10de:	80 91 5e 01 	lds	r24, 0x015E
    10e2:	90 91 5f 01 	lds	r25, 0x015F
    10e6:	00 97       	sbiw	r24, 0x00	; 0
    10e8:	39 f4       	brne	.+14     	; 0x10f8 <_Z31check_for_field_and_check_pointv+0x192>
			axis=headingDegrees-180;
    10ea:	24 5b       	subi	r18, 0xB4	; 180
    10ec:	31 09       	sbc	r19, r1
    10ee:	30 93 6b 00 	sts	0x006B, r19
    10f2:	20 93 6a 00 	sts	0x006A, r18
    10f6:	06 c0       	rjmp	.+12     	; 0x1104 <_Z31check_for_field_and_check_pointv+0x19e>
		else if(track==1)
    10f8:	01 97       	sbiw	r24, 0x01	; 1
    10fa:	21 f4       	brne	.+8      	; 0x1104 <_Z31check_for_field_and_check_pointv+0x19e>
			axis=headingDegrees;
    10fc:	30 93 6b 00 	sts	0x006B, r19
    1100:	20 93 6a 00 	sts	0x006A, r18
		lcd_clear();
    1104:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
		Printf("After ninety=%d",axis);
    1108:	80 91 6b 00 	lds	r24, 0x006B
    110c:	8f 93       	push	r24
    110e:	80 91 6a 00 	lds	r24, 0x006A
    1112:	8f 93       	push	r24
    1114:	80 ec       	ldi	r24, 0xC0	; 192
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	9f 93       	push	r25
    111a:	8f 93       	push	r24
    111c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
    1120:	9f ef       	ldi	r25, 0xFF	; 255
    1122:	23 ed       	ldi	r18, 0xD3	; 211
    1124:	40 e3       	ldi	r20, 0x30	; 48
    1126:	91 50       	subi	r25, 0x01	; 1
    1128:	20 40       	sbci	r18, 0x00	; 0
    112a:	40 40       	sbci	r20, 0x00	; 0
    112c:	e1 f7       	brne	.-8      	; 0x1126 <_Z31check_for_field_and_check_pointv+0x1c0>
    112e:	00 c0       	rjmp	.+0      	; 0x1130 <_Z31check_for_field_and_check_pointv+0x1ca>
    1130:	00 00       	nop
    1132:	0f 90       	pop	r0
    1134:	0f 90       	pop	r0
    1136:	0f 90       	pop	r0
    1138:	0f 90       	pop	r0
		_delay_ms(1000);
	}
	while(bit_is_clear(NINETY_COUNT_LOOP_P,NINETY_COUNT_LOOP))
    113a:	cb 99       	sbic	0x19, 3	; 25
    113c:	2a c0       	rjmp	.+84     	; 0x1192 <_Z31check_for_field_and_check_pointv+0x22c>
	{
		if(bit_is_clear(NINETY_COUNT_P,NINETY_COUNT) && press==0)
		{
			ninety_counter+=1;
			press=1;
    113e:	01 e0       	ldi	r16, 0x01	; 1
    1140:	10 e0       	ldi	r17, 0x00	; 0
		else if(bit_is_set(NINETY_COUNT_P,NINETY_COUNT))
		{
			press=0;
		}
		lcd_clear();
		Printf("%d",ninety_counter);
    1142:	ce ee       	ldi	r28, 0xEE	; 238
    1144:	d0 e0       	ldi	r29, 0x00	; 0
		Printf("After ninety=%d",axis);
		_delay_ms(1000);
	}
	while(bit_is_clear(NINETY_COUNT_LOOP_P,NINETY_COUNT_LOOP))
	{
		if(bit_is_clear(NINETY_COUNT_P,NINETY_COUNT) && press==0)
    1146:	9e 99       	sbic	0x13, 6	; 19
    1148:	98 c0       	rjmp	.+304    	; 0x127a <_Z31check_for_field_and_check_pointv+0x314>
    114a:	80 91 7a 01 	lds	r24, 0x017A
    114e:	90 91 7b 01 	lds	r25, 0x017B
    1152:	89 2b       	or	r24, r25
    1154:	09 f4       	brne	.+2      	; 0x1158 <_Z31check_for_field_and_check_pointv+0x1f2>
    1156:	83 c0       	rjmp	.+262    	; 0x125e <_Z31check_for_field_and_check_pointv+0x2f8>
    1158:	90 c0       	rjmp	.+288    	; 0x127a <_Z31check_for_field_and_check_pointv+0x314>
			ninety_counter+=1;
			press=1;
		}
		else if(bit_is_set(NINETY_COUNT_P,NINETY_COUNT))
		{
			press=0;
    115a:	10 92 7b 01 	sts	0x017B, r1
    115e:	10 92 7a 01 	sts	0x017A, r1
		}
		lcd_clear();
    1162:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
		Printf("%d",ninety_counter);
    1166:	80 91 6d 01 	lds	r24, 0x016D
    116a:	8f 93       	push	r24
    116c:	80 91 6c 01 	lds	r24, 0x016C
    1170:	8f 93       	push	r24
    1172:	df 93       	push	r29
    1174:	cf 93       	push	r28
    1176:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
    117a:	8f e3       	ldi	r24, 0x3F	; 63
    117c:	9c e9       	ldi	r25, 0x9C	; 156
    117e:	01 97       	sbiw	r24, 0x01	; 1
    1180:	f1 f7       	brne	.-4      	; 0x117e <_Z31check_for_field_and_check_pointv+0x218>
    1182:	00 c0       	rjmp	.+0      	; 0x1184 <_Z31check_for_field_and_check_pointv+0x21e>
    1184:	00 00       	nop
			axis=headingDegrees;
		lcd_clear();
		Printf("After ninety=%d",axis);
		_delay_ms(1000);
	}
	while(bit_is_clear(NINETY_COUNT_LOOP_P,NINETY_COUNT_LOOP))
    1186:	0f 90       	pop	r0
    1188:	0f 90       	pop	r0
    118a:	0f 90       	pop	r0
    118c:	0f 90       	pop	r0
    118e:	cb 9b       	sbis	0x19, 3	; 25
    1190:	da cf       	rjmp	.-76     	; 0x1146 <_Z31check_for_field_and_check_pointv+0x1e0>
		}
		lcd_clear();
		Printf("%d",ninety_counter);
		_delay_ms(10);
	}
	if(bit_is_clear(NINETY_COUNT_P,NINETY_COUNT) && bit_is_set(NINETY_COUNT_LOOP_P,NINETY_COUNT_LOOP))//FOR COMPASS CALIBRATION
    1192:	9e 99       	sbic	0x13, 6	; 19
    1194:	58 c0       	rjmp	.+176    	; 0x1246 <_Z31check_for_field_and_check_pointv+0x2e0>
    1196:	cb 99       	sbic	0x19, 3	; 25
    1198:	73 c0       	rjmp	.+230    	; 0x1280 <_Z31check_for_field_and_check_pointv+0x31a>
    119a:	55 c0       	rjmp	.+170    	; 0x1246 <_Z31check_for_field_and_check_pointv+0x2e0>
		calibrate_compass();
		compass_calibrate_flag=1;
	}
	while(compass_calibrate_flag==1)
	{
		headingDegrees=getHeading();
    119c:	0e 94 b9 06 	call	0xd72	; 0xd72 <_Z10getHeadingv>
    11a0:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    11a4:	70 93 06 02 	sts	0x0206, r23
    11a8:	60 93 05 02 	sts	0x0205, r22
		lcd_clear();
    11ac:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
		Printf("%d %d %d %d",headingDegrees,x_max,x_min,y_max);
    11b0:	80 91 f6 01 	lds	r24, 0x01F6
    11b4:	8f 93       	push	r24
    11b6:	80 91 f5 01 	lds	r24, 0x01F5
    11ba:	8f 93       	push	r24
    11bc:	80 91 f2 01 	lds	r24, 0x01F2
    11c0:	8f 93       	push	r24
    11c2:	80 91 f1 01 	lds	r24, 0x01F1
    11c6:	8f 93       	push	r24
    11c8:	80 91 f8 01 	lds	r24, 0x01F8
    11cc:	8f 93       	push	r24
    11ce:	80 91 f7 01 	lds	r24, 0x01F7
    11d2:	8f 93       	push	r24
    11d4:	80 91 06 02 	lds	r24, 0x0206
    11d8:	8f 93       	push	r24
    11da:	80 91 05 02 	lds	r24, 0x0205
    11de:	8f 93       	push	r24
    11e0:	1f 93       	push	r17
    11e2:	0f 93       	push	r16
    11e4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
		lcd_gotoxy(0,1);
    11e8:	61 e0       	ldi	r22, 0x01	; 1
    11ea:	80 e0       	ldi	r24, 0x00	; 0
    11ec:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_Z10lcd_gotoxyhh>
		Printf("x=%d y=%d %d",x_offset,y_offset,y_min);
    11f0:	80 91 f0 01 	lds	r24, 0x01F0
    11f4:	8f 93       	push	r24
    11f6:	80 91 ef 01 	lds	r24, 0x01EF
    11fa:	8f 93       	push	r24
    11fc:	80 91 9f 00 	lds	r24, 0x009F
    1200:	8f 93       	push	r24
    1202:	80 91 9e 00 	lds	r24, 0x009E
    1206:	8f 93       	push	r24
    1208:	80 91 a1 00 	lds	r24, 0x00A1
    120c:	8f 93       	push	r24
    120e:	80 91 a0 00 	lds	r24, 0x00A0
    1212:	8f 93       	push	r24
    1214:	df 93       	push	r29
    1216:	cf 93       	push	r28
    1218:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
    121c:	8f e3       	ldi	r24, 0x3F	; 63
    121e:	9c e9       	ldi	r25, 0x9C	; 156
    1220:	01 97       	sbiw	r24, 0x01	; 1
    1222:	f1 f7       	brne	.-4      	; 0x1220 <_Z31check_for_field_and_check_pointv+0x2ba>
    1224:	00 c0       	rjmp	.+0      	; 0x1226 <_Z31check_for_field_and_check_pointv+0x2c0>
    1226:	00 00       	nop
		_delay_ms(10);
		if(bit_is_clear(NINETY_COUNT_P,NINETY_COUNT))
    1228:	8d b7       	in	r24, 0x3d	; 61
    122a:	9e b7       	in	r25, 0x3e	; 62
    122c:	42 96       	adiw	r24, 0x12	; 18
    122e:	0f b6       	in	r0, 0x3f	; 63
    1230:	f8 94       	cli
    1232:	9e bf       	out	0x3e, r25	; 62
    1234:	0f be       	out	0x3f, r0	; 63
    1236:	8d bf       	out	0x3d, r24	; 61
    1238:	9e 99       	sbic	0x13, 6	; 19
    123a:	09 c0       	rjmp	.+18     	; 0x124e <_Z31check_for_field_and_check_pointv+0x2e8>
		{
			compass_calibrate_flag=0;
    123c:	10 92 61 01 	sts	0x0161, r1
    1240:	10 92 60 01 	sts	0x0160, r1
    1244:	04 c0       	rjmp	.+8      	; 0x124e <_Z31check_for_field_and_check_pointv+0x2e8>
	}
	while(compass_calibrate_flag==1)
	{
		headingDegrees=getHeading();
		lcd_clear();
		Printf("%d %d %d %d",headingDegrees,x_max,x_min,y_max);
    1246:	04 ef       	ldi	r16, 0xF4	; 244
    1248:	10 e0       	ldi	r17, 0x00	; 0
		lcd_gotoxy(0,1);
		Printf("x=%d y=%d %d",x_offset,y_offset,y_min);
    124a:	c0 ed       	ldi	r28, 0xD0	; 208
    124c:	d0 e0       	ldi	r29, 0x00	; 0
		lcd_clear();
		Printf("Calibrating");
		calibrate_compass();
		compass_calibrate_flag=1;
	}
	while(compass_calibrate_flag==1)
    124e:	80 91 60 01 	lds	r24, 0x0160
    1252:	90 91 61 01 	lds	r25, 0x0161
    1256:	01 97       	sbiw	r24, 0x01	; 1
    1258:	09 f4       	brne	.+2      	; 0x125c <_Z31check_for_field_and_check_pointv+0x2f6>
    125a:	a0 cf       	rjmp	.-192    	; 0x119c <_Z31check_for_field_and_check_pointv+0x236>
    125c:	34 c0       	rjmp	.+104    	; 0x12c6 <_Z31check_for_field_and_check_pointv+0x360>
	}
	while(bit_is_clear(NINETY_COUNT_LOOP_P,NINETY_COUNT_LOOP))
	{
		if(bit_is_clear(NINETY_COUNT_P,NINETY_COUNT) && press==0)
		{
			ninety_counter+=1;
    125e:	80 91 6c 01 	lds	r24, 0x016C
    1262:	90 91 6d 01 	lds	r25, 0x016D
    1266:	01 96       	adiw	r24, 0x01	; 1
    1268:	90 93 6d 01 	sts	0x016D, r25
    126c:	80 93 6c 01 	sts	0x016C, r24
			press=1;
    1270:	10 93 7b 01 	sts	0x017B, r17
    1274:	00 93 7a 01 	sts	0x017A, r16
    1278:	74 cf       	rjmp	.-280    	; 0x1162 <_Z31check_for_field_and_check_pointv+0x1fc>
		}
		else if(bit_is_set(NINETY_COUNT_P,NINETY_COUNT))
    127a:	9e 99       	sbic	0x13, 6	; 19
    127c:	6e cf       	rjmp	.-292    	; 0x115a <_Z31check_for_field_and_check_pointv+0x1f4>
    127e:	71 cf       	rjmp	.-286    	; 0x1162 <_Z31check_for_field_and_check_pointv+0x1fc>
		Printf("%d",ninety_counter);
		_delay_ms(10);
	}
	if(bit_is_clear(NINETY_COUNT_P,NINETY_COUNT) && bit_is_set(NINETY_COUNT_LOOP_P,NINETY_COUNT_LOOP))//FOR COMPASS CALIBRATION
	{
		goal_position(upper_limit-30);
    1280:	80 91 ad 01 	lds	r24, 0x01AD
    1284:	90 91 ae 01 	lds	r25, 0x01AE
    1288:	4e 97       	sbiw	r24, 0x1e	; 30
    128a:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
    128e:	9f ef       	ldi	r25, 0xFF	; 255
    1290:	2d e2       	ldi	r18, 0x2D	; 45
    1292:	42 e2       	ldi	r20, 0x22	; 34
    1294:	91 50       	subi	r25, 0x01	; 1
    1296:	20 40       	sbci	r18, 0x00	; 0
    1298:	40 40       	sbci	r20, 0x00	; 0
    129a:	e1 f7       	brne	.-8      	; 0x1294 <_Z31check_for_field_and_check_pointv+0x32e>
    129c:	00 c0       	rjmp	.+0      	; 0x129e <_Z31check_for_field_and_check_pointv+0x338>
    129e:	00 00       	nop
		_delay_ms(700);
		lcd_clear();
    12a0:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
		Printf("Calibrating");
    12a4:	8d ed       	ldi	r24, 0xDD	; 221
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	9f 93       	push	r25
    12aa:	8f 93       	push	r24
    12ac:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
		calibrate_compass();
    12b0:	0e 94 1d 06 	call	0xc3a	; 0xc3a <_Z17calibrate_compassv>
		compass_calibrate_flag=1;
    12b4:	81 e0       	ldi	r24, 0x01	; 1
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	90 93 61 01 	sts	0x0161, r25
    12bc:	80 93 60 01 	sts	0x0160, r24
    12c0:	0f 90       	pop	r0
    12c2:	0f 90       	pop	r0
    12c4:	c0 cf       	rjmp	.-128    	; 0x1246 <_Z31check_for_field_and_check_pointv+0x2e0>
		if(bit_is_clear(NINETY_COUNT_P,NINETY_COUNT))
		{
			compass_calibrate_flag=0;
		}	
	}
}
    12c6:	df 91       	pop	r29
    12c8:	cf 91       	pop	r28
    12ca:	1f 91       	pop	r17
    12cc:	0f 91       	pop	r16
    12ce:	08 95       	ret

000012d0 <_Z19receive_servo_anglev>:
void receive_servo_angle()
{
    12d0:	0f 93       	push	r16
    12d2:	1f 93       	push	r17
    12d4:	cf 93       	push	r28
    12d6:	df 93       	push	r29
	
	dynamixel_position();
    12d8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <_Z18dynamixel_positionv>
	//_delay_us(100);
	
	UDR=0;
    12dc:	1c b8       	out	0x0c, r1	; 12
    12de:	cd e5       	ldi	r28, 0x5D	; 93
    12e0:	d2 e0       	ldi	r29, 0x02	; 2
		{
			compass_calibrate_flag=0;
		}	
	}
}
void receive_servo_angle()
    12e2:	06 e6       	ldi	r16, 0x66	; 102
    12e4:	12 e0       	ldi	r17, 0x02	; 2
	//_delay_us(100);
	
	UDR=0;
	for(int i=0;i<9;i++)
	{
		data[i]=uart_read();
    12e6:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <_Z9uart_readv>
    12ea:	89 93       	st	Y+, r24
	
	dynamixel_position();
	//_delay_us(100);
	
	UDR=0;
	for(int i=0;i<9;i++)
    12ec:	c0 17       	cp	r28, r16
    12ee:	d1 07       	cpc	r29, r17
    12f0:	d1 f7       	brne	.-12     	; 0x12e6 <_Z19receive_servo_anglev+0x16>
	{
		data[i]=uart_read();
	}
	angle_data=data[6]|(data[7]<<8);
    12f2:	70 91 64 02 	lds	r23, 0x0264
    12f6:	60 e0       	ldi	r22, 0x00	; 0
    12f8:	80 91 63 02 	lds	r24, 0x0263
    12fc:	68 2b       	or	r22, r24
    12fe:	70 93 5a 02 	sts	0x025A, r23
    1302:	60 93 59 02 	sts	0x0259, r22
	angle=angle_data/3.41;
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	0e 94 4e 1d 	call	0x3a9c	; 0x3a9c <__floatunsisf>
    130e:	21 e7       	ldi	r18, 0x71	; 113
    1310:	3d e3       	ldi	r19, 0x3D	; 61
    1312:	4a e5       	ldi	r20, 0x5A	; 90
    1314:	50 e4       	ldi	r21, 0x40	; 64
    1316:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
    131a:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    131e:	70 93 5c 02 	sts	0x025C, r23
    1322:	60 93 5b 02 	sts	0x025B, r22

}
    1326:	df 91       	pop	r29
    1328:	cf 91       	pop	r28
    132a:	1f 91       	pop	r17
    132c:	0f 91       	pop	r16
    132e:	08 95       	ret

00001330 <_Z26check_for_color_conditionsv>:
void check_for_color_conditions()
{
	if(color_flag==1)
    1330:	80 91 84 00 	lds	r24, 0x0084
    1334:	90 91 85 00 	lds	r25, 0x0085
    1338:	01 97       	sbiw	r24, 0x01	; 1
    133a:	31 f4       	brne	.+12     	; 0x1348 <_Z26check_for_color_conditionsv+0x18>
	{
		color=check_color();
    133c:	0e 94 25 03 	call	0x64a	; 0x64a <_Z11check_colorv>
    1340:	90 93 c0 01 	sts	0x01C0, r25
    1344:	80 93 bf 01 	sts	0x01BF, r24
	}
	if(color==1 && lastcolor==2)
    1348:	80 91 bf 01 	lds	r24, 0x01BF
    134c:	90 91 c0 01 	lds	r25, 0x01C0
    1350:	81 30       	cpi	r24, 0x01	; 1
    1352:	91 05       	cpc	r25, r1
    1354:	51 f5       	brne	.+84     	; 0x13aa <_Z26check_for_color_conditionsv+0x7a>
    1356:	80 91 bd 01 	lds	r24, 0x01BD
    135a:	90 91 be 01 	lds	r25, 0x01BE
    135e:	02 97       	sbiw	r24, 0x02	; 2
    1360:	09 f0       	breq	.+2      	; 0x1364 <_Z26check_for_color_conditionsv+0x34>
    1362:	40 c0       	rjmp	.+128    	; 0x13e4 <_Z26check_for_color_conditionsv+0xb4>
	{
		counter=0;
    1364:	10 92 1e 02 	sts	0x021E, r1
    1368:	10 92 1d 02 	sts	0x021D, r1
		last_counter=0;
    136c:	10 92 1c 02 	sts	0x021C, r1
    1370:	10 92 1b 02 	sts	0x021B, r1
		down_auto=1;
    1374:	81 e0       	ldi	r24, 0x01	; 1
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	90 93 79 01 	sts	0x0179, r25
    137c:	80 93 78 01 	sts	0x0178, r24
		down_normal_pid=1;
    1380:	90 93 77 01 	sts	0x0177, r25
    1384:	80 93 76 01 	sts	0x0176, r24
		down_turn=1;
    1388:	90 93 75 01 	sts	0x0175, r25
    138c:	80 93 74 01 	sts	0x0174, r24
		first_junc=0;
    1390:	10 92 65 00 	sts	0x0065, r1
    1394:	10 92 64 00 	sts	0x0064, r1
		river_enable=0;
    1398:	10 92 67 00 	sts	0x0067, r1
    139c:	10 92 66 00 	sts	0x0066, r1
		ninety_enable=0;
    13a0:	10 92 63 00 	sts	0x0063, r1
    13a4:	10 92 62 00 	sts	0x0062, r1
    13a8:	08 95       	ret
	}
	else if (color==2 && lastcolor==1)
    13aa:	02 97       	sbiw	r24, 0x02	; 2
    13ac:	09 f0       	breq	.+2      	; 0x13b0 <_Z26check_for_color_conditionsv+0x80>
    13ae:	4c c0       	rjmp	.+152    	; 0x1448 <_Z26check_for_color_conditionsv+0x118>
    13b0:	80 91 bd 01 	lds	r24, 0x01BD
    13b4:	90 91 be 01 	lds	r25, 0x01BE
    13b8:	01 97       	sbiw	r24, 0x01	; 1
    13ba:	09 f0       	breq	.+2      	; 0x13be <_Z26check_for_color_conditionsv+0x8e>
    13bc:	45 c0       	rjmp	.+138    	; 0x1448 <_Z26check_for_color_conditionsv+0x118>
	{
		distance=0;
    13be:	10 92 1a 02 	sts	0x021A, r1
    13c2:	10 92 19 02 	sts	0x0219, r1
		counter=0;
    13c6:	10 92 1e 02 	sts	0x021E, r1
    13ca:	10 92 1d 02 	sts	0x021D, r1
		color_flag=0;
    13ce:	10 92 85 00 	sts	0x0085, r1
    13d2:	10 92 84 00 	sts	0x0084, r1
		river_entry=1;//start river navigation
    13d6:	81 e0       	ldi	r24, 0x01	; 1
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	90 93 73 01 	sts	0x0173, r25
    13de:	80 93 72 01 	sts	0x0172, r24
    13e2:	08 95       	ret
	}
	
	else if (color==1 && lastcolor==3)
    13e4:	80 91 bd 01 	lds	r24, 0x01BD
    13e8:	90 91 be 01 	lds	r25, 0x01BE
    13ec:	03 97       	sbiw	r24, 0x03	; 3
    13ee:	61 f5       	brne	.+88     	; 0x1448 <_Z26check_for_color_conditionsv+0x118>
	{
		if(counter>1600 || first_ninety_counter==1)
    13f0:	80 91 1d 02 	lds	r24, 0x021D
    13f4:	90 91 1e 02 	lds	r25, 0x021E
    13f8:	81 34       	cpi	r24, 0x41	; 65
    13fa:	96 40       	sbci	r25, 0x06	; 6
    13fc:	34 f4       	brge	.+12     	; 0x140a <_Z26check_for_color_conditionsv+0xda>
    13fe:	80 91 68 00 	lds	r24, 0x0068
    1402:	90 91 69 00 	lds	r25, 0x0069
    1406:	01 97       	sbiw	r24, 0x01	; 1
    1408:	69 f4       	brne	.+26     	; 0x1424 <_Z26check_for_color_conditionsv+0xf4>
			{	
			ninety_counter++;
    140a:	80 91 6c 01 	lds	r24, 0x016C
    140e:	90 91 6d 01 	lds	r25, 0x016D
    1412:	01 96       	adiw	r24, 0x01	; 1
    1414:	90 93 6d 01 	sts	0x016D, r25
    1418:	80 93 6c 01 	sts	0x016C, r24
			first_ninety_counter=0;
    141c:	10 92 69 00 	sts	0x0069, r1
    1420:	10 92 68 00 	sts	0x0068, r1
			}
		if(ninety_counter==3)//start ninety navigation
    1424:	80 91 6c 01 	lds	r24, 0x016C
    1428:	90 91 6d 01 	lds	r25, 0x016D
    142c:	03 97       	sbiw	r24, 0x03	; 3
    142e:	41 f4       	brne	.+16     	; 0x1440 <_Z26check_for_color_conditionsv+0x110>
		{
			counter=0;
    1430:	10 92 1e 02 	sts	0x021E, r1
    1434:	10 92 1d 02 	sts	0x021D, r1
			last_counter=0;
    1438:	10 92 1c 02 	sts	0x021C, r1
    143c:	10 92 1b 02 	sts	0x021B, r1
		}
		counter=0;
    1440:	10 92 1e 02 	sts	0x021E, r1
    1444:	10 92 1d 02 	sts	0x021D, r1
    1448:	08 95       	ret

0000144a <_Z29check_for_downhill_conditionsv>:
	}
}
void check_for_downhill_conditions()
{
    144a:	0f 93       	push	r16
    144c:	1f 93       	push	r17
    144e:	cf 93       	push	r28
    1450:	df 93       	push	r29
	if(down_auto==1 && down_normal_pid==1 && down_turn==1)
    1452:	80 91 78 01 	lds	r24, 0x0178
    1456:	90 91 79 01 	lds	r25, 0x0179
    145a:	81 30       	cpi	r24, 0x01	; 1
    145c:	91 05       	cpc	r25, r1
    145e:	a9 f5       	brne	.+106    	; 0x14ca <_Z29check_for_downhill_conditionsv+0x80>
    1460:	80 91 76 01 	lds	r24, 0x0176
    1464:	90 91 77 01 	lds	r25, 0x0177
    1468:	01 97       	sbiw	r24, 0x01	; 1
    146a:	09 f0       	breq	.+2      	; 0x146e <_Z29check_for_downhill_conditionsv+0x24>
    146c:	f3 c1       	rjmp	.+998    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
    146e:	80 91 74 01 	lds	r24, 0x0174
    1472:	90 91 75 01 	lds	r25, 0x0175
    1476:	01 97       	sbiw	r24, 0x01	; 1
    1478:	09 f0       	breq	.+2      	; 0x147c <_Z29check_for_downhill_conditionsv+0x32>
    147a:	ec c1       	rjmp	.+984    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
	{
		if(abs(counter-last_counter)<=2 && counter>400 && counter<1050)
    147c:	80 91 1d 02 	lds	r24, 0x021D
    1480:	90 91 1e 02 	lds	r25, 0x021E
    1484:	20 91 1b 02 	lds	r18, 0x021B
    1488:	30 91 1c 02 	lds	r19, 0x021C
    148c:	82 1b       	sub	r24, r18
    148e:	93 0b       	sbc	r25, r19
    1490:	1a f4       	brpl	.+6      	; 0x1498 <_Z29check_for_downhill_conditionsv+0x4e>
    1492:	91 95       	neg	r25
    1494:	81 95       	neg	r24
    1496:	91 09       	sbc	r25, r1
    1498:	03 97       	sbiw	r24, 0x03	; 3
    149a:	0c f0       	brlt	.+2      	; 0x149e <_Z29check_for_downhill_conditionsv+0x54>
    149c:	4e c1       	rjmp	.+668    	; 0x173a <_Z29check_for_downhill_conditionsv+0x2f0>
    149e:	80 91 1d 02 	lds	r24, 0x021D
    14a2:	90 91 1e 02 	lds	r25, 0x021E
    14a6:	81 39       	cpi	r24, 0x91	; 145
    14a8:	91 40       	sbci	r25, 0x01	; 1
    14aa:	0c f4       	brge	.+2      	; 0x14ae <_Z29check_for_downhill_conditionsv+0x64>
    14ac:	46 c1       	rjmp	.+652    	; 0x173a <_Z29check_for_downhill_conditionsv+0x2f0>
    14ae:	80 91 1d 02 	lds	r24, 0x021D
    14b2:	90 91 1e 02 	lds	r25, 0x021E
    14b6:	8a 31       	cpi	r24, 0x1A	; 26
    14b8:	94 40       	sbci	r25, 0x04	; 4
    14ba:	0c f4       	brge	.+2      	; 0x14be <_Z29check_for_downhill_conditionsv+0x74>
    14bc:	0d c1       	rjmp	.+538    	; 0x16d8 <_Z29check_for_downhill_conditionsv+0x28e>
    14be:	3d c1       	rjmp	.+634    	; 0x173a <_Z29check_for_downhill_conditionsv+0x2f0>
			kp=0.005;
			Prop_power=2.5;
			ki=0.004;
			kd=30;
			if(counter>1050)
				down_auto=0;
    14c0:	10 92 79 01 	sts	0x0179, r1
    14c4:	10 92 78 01 	sts	0x0178, r1
    14c8:	c5 c1       	rjmp	.+906    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
		}
	}
	else if( (down_auto==0 && down_normal_pid==1 && down_turn==1) && counter>5000)
    14ca:	89 2b       	or	r24, r25
    14cc:	09 f0       	breq	.+2      	; 0x14d0 <_Z29check_for_downhill_conditionsv+0x86>
    14ce:	c2 c1       	rjmp	.+900    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
    14d0:	80 91 76 01 	lds	r24, 0x0176
    14d4:	90 91 77 01 	lds	r25, 0x0177
    14d8:	01 97       	sbiw	r24, 0x01	; 1
    14da:	09 f0       	breq	.+2      	; 0x14de <_Z29check_for_downhill_conditionsv+0x94>
    14dc:	3f c0       	rjmp	.+126    	; 0x155c <_Z29check_for_downhill_conditionsv+0x112>
    14de:	80 91 74 01 	lds	r24, 0x0174
    14e2:	90 91 75 01 	lds	r25, 0x0175
    14e6:	01 97       	sbiw	r24, 0x01	; 1
    14e8:	c9 f5       	brne	.+114    	; 0x155c <_Z29check_for_downhill_conditionsv+0x112>
    14ea:	80 91 1d 02 	lds	r24, 0x021D
    14ee:	90 91 1e 02 	lds	r25, 0x021E
    14f2:	89 38       	cpi	r24, 0x89	; 137
    14f4:	93 41       	sbci	r25, 0x13	; 19
    14f6:	0c f0       	brlt	.+2      	; 0x14fa <_Z29check_for_downhill_conditionsv+0xb0>
    14f8:	59 c1       	rjmp	.+690    	; 0x17ac <_Z29check_for_downhill_conditionsv+0x362>
    14fa:	30 c0       	rjmp	.+96     	; 0x155c <_Z29check_for_downhill_conditionsv+0x112>
		ki=0.002;
		kd=30;
		first_junc=0;
		if(track==0)
		{
			lower_limit=true_straight-35;
    14fc:	80 91 bb 01 	lds	r24, 0x01BB
    1500:	90 91 bc 01 	lds	r25, 0x01BC
    1504:	9c 01       	movw	r18, r24
    1506:	23 52       	subi	r18, 0x23	; 35
    1508:	31 09       	sbc	r19, r1
    150a:	30 93 ac 01 	sts	0x01AC, r19
    150e:	20 93 ab 01 	sts	0x01AB, r18
			upper_limit=true_straight;
    1512:	90 93 ae 01 	sts	0x01AE, r25
    1516:	80 93 ad 01 	sts	0x01AD, r24
    151a:	11 c0       	rjmp	.+34     	; 0x153e <_Z29check_for_downhill_conditionsv+0xf4>
		}
		else if(track==1)
    151c:	01 97       	sbiw	r24, 0x01	; 1
    151e:	79 f4       	brne	.+30     	; 0x153e <_Z29check_for_downhill_conditionsv+0xf4>
		{
			lower_limit=true_straight-35;
    1520:	80 91 bb 01 	lds	r24, 0x01BB
    1524:	90 91 bc 01 	lds	r25, 0x01BC
    1528:	9c 01       	movw	r18, r24
    152a:	23 52       	subi	r18, 0x23	; 35
    152c:	31 09       	sbc	r19, r1
    152e:	30 93 ac 01 	sts	0x01AC, r19
    1532:	20 93 ab 01 	sts	0x01AB, r18
			upper_limit=true_straight;
    1536:	90 93 ae 01 	sts	0x01AE, r25
    153a:	80 93 ad 01 	sts	0x01AD, r24
		}
		down_auto=0;
    153e:	10 92 79 01 	sts	0x0179, r1
    1542:	10 92 78 01 	sts	0x0178, r1
		down_normal_pid=0;
    1546:	10 92 77 01 	sts	0x0177, r1
    154a:	10 92 76 01 	sts	0x0176, r1
		down_turn=1;
    154e:	81 e0       	ldi	r24, 0x01	; 1
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	90 93 75 01 	sts	0x0175, r25
    1556:	80 93 74 01 	sts	0x0174, r24
    155a:	7c c1       	rjmp	.+760    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
	}
	else if(down_auto==0 && down_normal_pid==0 && down_turn==1 && counter>4200 && counter<=last_counter )
    155c:	80 91 76 01 	lds	r24, 0x0176
    1560:	90 91 77 01 	lds	r25, 0x0177
    1564:	89 2b       	or	r24, r25
    1566:	09 f0       	breq	.+2      	; 0x156a <_Z29check_for_downhill_conditionsv+0x120>
    1568:	75 c1       	rjmp	.+746    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
    156a:	80 91 74 01 	lds	r24, 0x0174
    156e:	90 91 75 01 	lds	r25, 0x0175
    1572:	01 97       	sbiw	r24, 0x01	; 1
    1574:	09 f0       	breq	.+2      	; 0x1578 <_Z29check_for_downhill_conditionsv+0x12e>
    1576:	6e c1       	rjmp	.+732    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
    1578:	80 91 1d 02 	lds	r24, 0x021D
    157c:	90 91 1e 02 	lds	r25, 0x021E
    1580:	89 36       	cpi	r24, 0x69	; 105
    1582:	90 41       	sbci	r25, 0x10	; 16
    1584:	0c f4       	brge	.+2      	; 0x1588 <_Z29check_for_downhill_conditionsv+0x13e>
    1586:	66 c1       	rjmp	.+716    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
    1588:	20 91 1d 02 	lds	r18, 0x021D
    158c:	30 91 1e 02 	lds	r19, 0x021E
    1590:	80 91 1b 02 	lds	r24, 0x021B
    1594:	90 91 1c 02 	lds	r25, 0x021C
    1598:	82 17       	cp	r24, r18
    159a:	93 07       	cpc	r25, r19
    159c:	0c f0       	brlt	.+2      	; 0x15a0 <_Z29check_for_downhill_conditionsv+0x156>
    159e:	48 c1       	rjmp	.+656    	; 0x1830 <_Z29check_for_downhill_conditionsv+0x3e6>
    15a0:	59 c1       	rjmp	.+690    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
		running=0;
		//goal_position(167);
		_delay_ms(800);
		while(1)
		{	
			if(track==0)
    15a2:	80 91 5e 01 	lds	r24, 0x015E
    15a6:	90 91 5f 01 	lds	r25, 0x015F
    15aa:	00 97       	sbiw	r24, 0x00	; 0
    15ac:	11 f5       	brne	.+68     	; 0x15f2 <_Z29check_for_downhill_conditionsv+0x1a8>
			{
				output=straight-100;
    15ae:	60 91 82 00 	lds	r22, 0x0082
    15b2:	70 91 83 00 	lds	r23, 0x0083
    15b6:	64 56       	subi	r22, 0x64	; 100
    15b8:	71 09       	sbc	r23, r1
    15ba:	88 27       	eor	r24, r24
    15bc:	77 fd       	sbrc	r23, 7
    15be:	80 95       	com	r24
    15c0:	98 2f       	mov	r25, r24
    15c2:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    15c6:	60 93 b7 01 	sts	0x01B7, r22
    15ca:	70 93 b8 01 	sts	0x01B8, r23
    15ce:	80 93 b9 01 	sts	0x01B9, r24
    15d2:	90 93 ba 01 	sts	0x01BA, r25
				goal_position(output);
    15d6:	60 91 b7 01 	lds	r22, 0x01B7
    15da:	70 91 b8 01 	lds	r23, 0x01B8
    15de:	80 91 b9 01 	lds	r24, 0x01B9
    15e2:	90 91 ba 01 	lds	r25, 0x01BA
    15e6:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    15ea:	cb 01       	movw	r24, r22
    15ec:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
    15f0:	23 c0       	rjmp	.+70     	; 0x1638 <_Z29check_for_downhill_conditionsv+0x1ee>
			
			}
			else if(track==1)
    15f2:	01 97       	sbiw	r24, 0x01	; 1
    15f4:	09 f5       	brne	.+66     	; 0x1638 <_Z29check_for_downhill_conditionsv+0x1ee>
			{
				output=straight+100;
    15f6:	60 91 82 00 	lds	r22, 0x0082
    15fa:	70 91 83 00 	lds	r23, 0x0083
    15fe:	6c 59       	subi	r22, 0x9C	; 156
    1600:	7f 4f       	sbci	r23, 0xFF	; 255
    1602:	88 27       	eor	r24, r24
    1604:	77 fd       	sbrc	r23, 7
    1606:	80 95       	com	r24
    1608:	98 2f       	mov	r25, r24
    160a:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    160e:	60 93 b7 01 	sts	0x01B7, r22
    1612:	70 93 b8 01 	sts	0x01B8, r23
    1616:	80 93 b9 01 	sts	0x01B9, r24
    161a:	90 93 ba 01 	sts	0x01BA, r25
				goal_position(output);
    161e:	60 91 b7 01 	lds	r22, 0x01B7
    1622:	70 91 b8 01 	lds	r23, 0x01B8
    1626:	80 91 b9 01 	lds	r24, 0x01B9
    162a:	90 91 ba 01 	lds	r25, 0x01BA
    162e:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    1632:	cb 01       	movw	r24, r22
    1634:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
    1638:	8f ef       	ldi	r24, 0xFF	; 255
    163a:	90 e7       	ldi	r25, 0x70	; 112
    163c:	22 e0       	ldi	r18, 0x02	; 2
    163e:	81 50       	subi	r24, 0x01	; 1
    1640:	90 40       	sbci	r25, 0x00	; 0
    1642:	20 40       	sbci	r18, 0x00	; 0
    1644:	e1 f7       	brne	.-8      	; 0x163e <_Z29check_for_downhill_conditionsv+0x1f4>
    1646:	00 c0       	rjmp	.+0      	; 0x1648 <_Z29check_for_downhill_conditionsv+0x1fe>
    1648:	00 00       	nop
			}
			_delay_ms(50);
			lcd_clear();
    164a:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
			Printf("F %d %d",counter,check4);
    164e:	80 91 1d 02 	lds	r24, 0x021D
    1652:	90 91 1e 02 	lds	r25, 0x021E
    1656:	20 91 dc 01 	lds	r18, 0x01DC
    165a:	2f 93       	push	r18
    165c:	20 91 db 01 	lds	r18, 0x01DB
    1660:	2f 93       	push	r18
    1662:	9f 93       	push	r25
    1664:	8f 93       	push	r24
    1666:	1f 93       	push	r17
    1668:	0f 93       	push	r16
    166a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
			lcd_gotoxy(0,1);
    166e:	61 e0       	ldi	r22, 0x01	; 1
    1670:	80 e0       	ldi	r24, 0x00	; 0
    1672:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_Z10lcd_gotoxyhh>
			Printf("%d %d %d %d %d",(int)(ninety_y_abs_derivative_error*100),check1,check2,check3);
    1676:	80 91 de 01 	lds	r24, 0x01DE
    167a:	8f 93       	push	r24
    167c:	80 91 dd 01 	lds	r24, 0x01DD
    1680:	8f 93       	push	r24
    1682:	80 91 e0 01 	lds	r24, 0x01E0
    1686:	8f 93       	push	r24
    1688:	80 91 df 01 	lds	r24, 0x01DF
    168c:	8f 93       	push	r24
    168e:	80 91 e2 01 	lds	r24, 0x01E2
    1692:	8f 93       	push	r24
    1694:	80 91 e1 01 	lds	r24, 0x01E1
    1698:	8f 93       	push	r24
    169a:	20 e0       	ldi	r18, 0x00	; 0
    169c:	30 e0       	ldi	r19, 0x00	; 0
    169e:	48 ec       	ldi	r20, 0xC8	; 200
    16a0:	52 e4       	ldi	r21, 0x42	; 66
    16a2:	60 91 66 01 	lds	r22, 0x0166
    16a6:	70 91 67 01 	lds	r23, 0x0167
    16aa:	80 91 68 01 	lds	r24, 0x0168
    16ae:	90 91 69 01 	lds	r25, 0x0169
    16b2:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    16b6:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    16ba:	7f 93       	push	r23
    16bc:	6f 93       	push	r22
    16be:	df 93       	push	r29
    16c0:	cf 93       	push	r28
    16c2:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
	else if(down_auto==0 && down_normal_pid==0 && down_turn==1 && counter>4200 && counter<=last_counter )
	{
		running=0;
		//goal_position(167);
		_delay_ms(800);
		while(1)
    16c6:	8d b7       	in	r24, 0x3d	; 61
    16c8:	9e b7       	in	r25, 0x3e	; 62
    16ca:	40 96       	adiw	r24, 0x10	; 16
    16cc:	0f b6       	in	r0, 0x3f	; 63
    16ce:	f8 94       	cli
    16d0:	9e bf       	out	0x3e, r25	; 62
    16d2:	0f be       	out	0x3f, r0	; 63
    16d4:	8d bf       	out	0x3d, r24	; 61
    16d6:	65 cf       	rjmp	.-310    	; 0x15a2 <_Z29check_for_downhill_conditionsv+0x158>
{
	if(down_auto==1 && down_normal_pid==1 && down_turn==1)
	{
		if(abs(counter-last_counter)<=2 && counter>400 && counter<1050)
		{
			kp=1.5;
    16d8:	80 e0       	ldi	r24, 0x00	; 0
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	a0 ec       	ldi	r26, 0xC0	; 192
    16de:	bf e3       	ldi	r27, 0x3F	; 63
    16e0:	80 93 98 00 	sts	0x0098, r24
    16e4:	90 93 99 00 	sts	0x0099, r25
    16e8:	a0 93 9a 00 	sts	0x009A, r26
    16ec:	b0 93 9b 00 	sts	0x009B, r27
			Prop_power=1;
    16f0:	80 e0       	ldi	r24, 0x00	; 0
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	a0 e8       	ldi	r26, 0x80	; 128
    16f6:	bf e3       	ldi	r27, 0x3F	; 63
    16f8:	80 93 88 00 	sts	0x0088, r24
    16fc:	90 93 89 00 	sts	0x0089, r25
    1700:	a0 93 8a 00 	sts	0x008A, r26
    1704:	b0 93 8b 00 	sts	0x008B, r27
			ki=0.003;
    1708:	86 ea       	ldi	r24, 0xA6	; 166
    170a:	9b e9       	ldi	r25, 0x9B	; 155
    170c:	a4 e4       	ldi	r26, 0x44	; 68
    170e:	bb e3       	ldi	r27, 0x3B	; 59
    1710:	80 93 94 00 	sts	0x0094, r24
    1714:	90 93 95 00 	sts	0x0095, r25
    1718:	a0 93 96 00 	sts	0x0096, r26
    171c:	b0 93 97 00 	sts	0x0097, r27
			kd=30;
    1720:	80 e0       	ldi	r24, 0x00	; 0
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	a0 ef       	ldi	r26, 0xF0	; 240
    1726:	b1 e4       	ldi	r27, 0x41	; 65
    1728:	80 93 90 00 	sts	0x0090, r24
    172c:	90 93 91 00 	sts	0x0091, r25
    1730:	a0 93 92 00 	sts	0x0092, r26
    1734:	b0 93 93 00 	sts	0x0093, r27
    1738:	8d c0       	rjmp	.+282    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
		}
		else
		{
			kp=0.005;
    173a:	8a e0       	ldi	r24, 0x0A	; 10
    173c:	97 ed       	ldi	r25, 0xD7	; 215
    173e:	a3 ea       	ldi	r26, 0xA3	; 163
    1740:	bb e3       	ldi	r27, 0x3B	; 59
    1742:	80 93 98 00 	sts	0x0098, r24
    1746:	90 93 99 00 	sts	0x0099, r25
    174a:	a0 93 9a 00 	sts	0x009A, r26
    174e:	b0 93 9b 00 	sts	0x009B, r27
			Prop_power=2.5;
    1752:	80 e0       	ldi	r24, 0x00	; 0
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	a0 e2       	ldi	r26, 0x20	; 32
    1758:	b0 e4       	ldi	r27, 0x40	; 64
    175a:	80 93 88 00 	sts	0x0088, r24
    175e:	90 93 89 00 	sts	0x0089, r25
    1762:	a0 93 8a 00 	sts	0x008A, r26
    1766:	b0 93 8b 00 	sts	0x008B, r27
			ki=0.004;
    176a:	8f e6       	ldi	r24, 0x6F	; 111
    176c:	92 e1       	ldi	r25, 0x12	; 18
    176e:	a3 e8       	ldi	r26, 0x83	; 131
    1770:	bb e3       	ldi	r27, 0x3B	; 59
    1772:	80 93 94 00 	sts	0x0094, r24
    1776:	90 93 95 00 	sts	0x0095, r25
    177a:	a0 93 96 00 	sts	0x0096, r26
    177e:	b0 93 97 00 	sts	0x0097, r27
			kd=30;
    1782:	80 e0       	ldi	r24, 0x00	; 0
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	a0 ef       	ldi	r26, 0xF0	; 240
    1788:	b1 e4       	ldi	r27, 0x41	; 65
    178a:	80 93 90 00 	sts	0x0090, r24
    178e:	90 93 91 00 	sts	0x0091, r25
    1792:	a0 93 92 00 	sts	0x0092, r26
    1796:	b0 93 93 00 	sts	0x0093, r27
			if(counter>1050)
    179a:	80 91 1d 02 	lds	r24, 0x021D
    179e:	90 91 1e 02 	lds	r25, 0x021E
    17a2:	8b 31       	cpi	r24, 0x1B	; 27
    17a4:	94 40       	sbci	r25, 0x04	; 4
    17a6:	0c f0       	brlt	.+2      	; 0x17aa <_Z29check_for_downhill_conditionsv+0x360>
    17a8:	8b ce       	rjmp	.-746    	; 0x14c0 <_Z29check_for_downhill_conditionsv+0x76>
    17aa:	54 c0       	rjmp	.+168    	; 0x1854 <_Z29check_for_downhill_conditionsv+0x40a>
				down_auto=0;
		}
	}
	else if( (down_auto==0 && down_normal_pid==1 && down_turn==1) && counter>5000)
	{
		running=1;
    17ac:	81 e0       	ldi	r24, 0x01	; 1
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	90 93 81 00 	sts	0x0081, r25
    17b4:	80 93 80 00 	sts	0x0080, r24
		kp=0.005;
    17b8:	8a e0       	ldi	r24, 0x0A	; 10
    17ba:	97 ed       	ldi	r25, 0xD7	; 215
    17bc:	a3 ea       	ldi	r26, 0xA3	; 163
    17be:	bb e3       	ldi	r27, 0x3B	; 59
    17c0:	80 93 98 00 	sts	0x0098, r24
    17c4:	90 93 99 00 	sts	0x0099, r25
    17c8:	a0 93 9a 00 	sts	0x009A, r26
    17cc:	b0 93 9b 00 	sts	0x009B, r27
		Prop_power=2.5;
    17d0:	80 e0       	ldi	r24, 0x00	; 0
    17d2:	90 e0       	ldi	r25, 0x00	; 0
    17d4:	a0 e2       	ldi	r26, 0x20	; 32
    17d6:	b0 e4       	ldi	r27, 0x40	; 64
    17d8:	80 93 88 00 	sts	0x0088, r24
    17dc:	90 93 89 00 	sts	0x0089, r25
    17e0:	a0 93 8a 00 	sts	0x008A, r26
    17e4:	b0 93 8b 00 	sts	0x008B, r27
		ki=0.002;
    17e8:	8f e6       	ldi	r24, 0x6F	; 111
    17ea:	92 e1       	ldi	r25, 0x12	; 18
    17ec:	a3 e0       	ldi	r26, 0x03	; 3
    17ee:	bb e3       	ldi	r27, 0x3B	; 59
    17f0:	80 93 94 00 	sts	0x0094, r24
    17f4:	90 93 95 00 	sts	0x0095, r25
    17f8:	a0 93 96 00 	sts	0x0096, r26
    17fc:	b0 93 97 00 	sts	0x0097, r27
		kd=30;
    1800:	80 e0       	ldi	r24, 0x00	; 0
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	a0 ef       	ldi	r26, 0xF0	; 240
    1806:	b1 e4       	ldi	r27, 0x41	; 65
    1808:	80 93 90 00 	sts	0x0090, r24
    180c:	90 93 91 00 	sts	0x0091, r25
    1810:	a0 93 92 00 	sts	0x0092, r26
    1814:	b0 93 93 00 	sts	0x0093, r27
		first_junc=0;
    1818:	10 92 65 00 	sts	0x0065, r1
    181c:	10 92 64 00 	sts	0x0064, r1
		if(track==0)
    1820:	80 91 5e 01 	lds	r24, 0x015E
    1824:	90 91 5f 01 	lds	r25, 0x015F
    1828:	00 97       	sbiw	r24, 0x00	; 0
    182a:	09 f4       	brne	.+2      	; 0x182e <_Z29check_for_downhill_conditionsv+0x3e4>
    182c:	67 ce       	rjmp	.-818    	; 0x14fc <_Z29check_for_downhill_conditionsv+0xb2>
    182e:	76 ce       	rjmp	.-788    	; 0x151c <_Z29check_for_downhill_conditionsv+0xd2>
		down_normal_pid=0;
		down_turn=1;
	}
	else if(down_auto==0 && down_normal_pid==0 && down_turn==1 && counter>4200 && counter<=last_counter )
	{
		running=0;
    1830:	10 92 81 00 	sts	0x0081, r1
    1834:	10 92 80 00 	sts	0x0080, r1
    1838:	8f ef       	ldi	r24, 0xFF	; 255
    183a:	9f e0       	ldi	r25, 0x0F	; 15
    183c:	27 e2       	ldi	r18, 0x27	; 39
    183e:	81 50       	subi	r24, 0x01	; 1
    1840:	90 40       	sbci	r25, 0x00	; 0
    1842:	20 40       	sbci	r18, 0x00	; 0
    1844:	e1 f7       	brne	.-8      	; 0x183e <_Z29check_for_downhill_conditionsv+0x3f4>
    1846:	00 c0       	rjmp	.+0      	; 0x1848 <_Z29check_for_downhill_conditionsv+0x3fe>
    1848:	00 00       	nop
				output=straight+100;
				goal_position(output);
			}
			_delay_ms(50);
			lcd_clear();
			Printf("F %d %d",counter,check4);
    184a:	09 ee       	ldi	r16, 0xE9	; 233
    184c:	10 e0       	ldi	r17, 0x00	; 0
			lcd_gotoxy(0,1);
			Printf("%d %d %d %d %d",(int)(ninety_y_abs_derivative_error*100),check1,check2,check3);
    184e:	c1 ef       	ldi	r28, 0xF1	; 241
    1850:	d0 e0       	ldi	r29, 0x00	; 0
    1852:	a7 ce       	rjmp	.-690    	; 0x15a2 <_Z29check_for_downhill_conditionsv+0x158>
		}
	}
	
}
    1854:	df 91       	pop	r29
    1856:	cf 91       	pop	r28
    1858:	1f 91       	pop	r17
    185a:	0f 91       	pop	r16
    185c:	08 95       	ret

0000185e <_Z22ninety_turn_navigationv>:
void ninety_turn_navigation()
{
    185e:	2f 92       	push	r2
    1860:	3f 92       	push	r3
    1862:	4f 92       	push	r4
    1864:	5f 92       	push	r5
    1866:	6f 92       	push	r6
    1868:	7f 92       	push	r7
    186a:	8f 92       	push	r8
    186c:	9f 92       	push	r9
    186e:	af 92       	push	r10
    1870:	bf 92       	push	r11
    1872:	cf 92       	push	r12
    1874:	df 92       	push	r13
    1876:	ef 92       	push	r14
    1878:	ff 92       	push	r15
    187a:	0f 93       	push	r16
    187c:	1f 93       	push	r17
    187e:	cf 93       	push	r28
    1880:	df 93       	push	r29
    1882:	cd b7       	in	r28, 0x3d	; 61
    1884:	de b7       	in	r29, 0x3e	; 62
    1886:	2f 97       	sbiw	r28, 0x0f	; 15
    1888:	0f b6       	in	r0, 0x3f	; 63
    188a:	f8 94       	cli
    188c:	de bf       	out	0x3e, r29	; 62
    188e:	0f be       	out	0x3f, r0	; 63
    1890:	cd bf       	out	0x3d, r28	; 61
	if(ninety_counter==3 && ninety_enable==1)
    1892:	80 91 6c 01 	lds	r24, 0x016C
    1896:	90 91 6d 01 	lds	r25, 0x016D
    189a:	03 97       	sbiw	r24, 0x03	; 3
    189c:	09 f0       	breq	.+2      	; 0x18a0 <_Z22ninety_turn_navigationv+0x42>
    189e:	ab c4       	rjmp	.+2390   	; 0x21f6 <_Z22ninety_turn_navigationv+0x998>
    18a0:	80 91 62 00 	lds	r24, 0x0062
    18a4:	90 91 63 00 	lds	r25, 0x0063
    18a8:	01 97       	sbiw	r24, 0x01	; 1
    18aa:	09 f0       	breq	.+2      	; 0x18ae <_Z22ninety_turn_navigationv+0x50>
    18ac:	a4 c4       	rjmp	.+2376   	; 0x21f6 <_Z22ninety_turn_navigationv+0x998>
	{
		float Kp_compass=0.5;
		float Kp_line =1;
		float tspeed=0;
		float tempCount=0;
		running=0;
    18ae:	10 92 81 00 	sts	0x0081, r1
    18b2:	10 92 80 00 	sts	0x0080, r1
		x=0;
    18b6:	10 92 7c 00 	sts	0x007C, r1
    18ba:	10 92 7d 00 	sts	0x007D, r1
    18be:	10 92 7e 00 	sts	0x007E, r1
    18c2:	10 92 7f 00 	sts	0x007F, r1
		y=-23.5*sin(75*pi/180)-8-10;
    18c6:	8c ec       	ldi	r24, 0xCC	; 204
    18c8:	9b ec       	ldi	r25, 0xCB	; 203
    18ca:	a2 e2       	ldi	r26, 0x22	; 34
    18cc:	b2 ec       	ldi	r27, 0xC2	; 194
    18ce:	80 93 a3 01 	sts	0x01A3, r24
    18d2:	90 93 a4 01 	sts	0x01A4, r25
    18d6:	a0 93 a5 01 	sts	0x01A5, r26
    18da:	b0 93 a6 01 	sts	0x01A6, r27
		x_abs=0;
    18de:	10 92 9b 01 	sts	0x019B, r1
    18e2:	10 92 9c 01 	sts	0x019C, r1
    18e6:	10 92 9d 01 	sts	0x019D, r1
    18ea:	10 92 9e 01 	sts	0x019E, r1
		y_abs=0;
    18ee:	10 92 9f 01 	sts	0x019F, r1
    18f2:	10 92 a0 01 	sts	0x01A0, r1
    18f6:	10 92 a1 01 	sts	0x01A1, r1
    18fa:	10 92 a2 01 	sts	0x01A2, r1
		counter=0;
    18fe:	10 92 1e 02 	sts	0x021E, r1
    1902:	10 92 1d 02 	sts	0x021D, r1
		last_counter=0;
    1906:	10 92 1c 02 	sts	0x021C, r1
    190a:	10 92 1b 02 	sts	0x021B, r1
		ninety_flag1=1;
    190e:	81 e0       	ldi	r24, 0x01	; 1
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	90 93 6b 01 	sts	0x016B, r25
    1916:	80 93 6a 01 	sts	0x016A, r24
	if(ninety_counter==3 && ninety_enable==1)
	{
		float Kp_compass=0.5;
		float Kp_line =1;
		float tspeed=0;
		float tempCount=0;
    191a:	1a 82       	std	Y+2, r1	; 0x02
    191c:	1b 82       	std	Y+3, r1	; 0x03
    191e:	1c 82       	std	Y+4, r1	; 0x04
    1920:	1d 82       	std	Y+5, r1	; 0x05
{
	if(ninety_counter==3 && ninety_enable==1)
	{
		float Kp_compass=0.5;
		float Kp_line =1;
		float tspeed=0;
    1922:	1a 86       	std	Y+10, r1	; 0x0a
    1924:	1b 86       	std	Y+11, r1	; 0x0b
    1926:	1c 86       	std	Y+12, r1	; 0x0c
    1928:	1d 86       	std	Y+13, r1	; 0x0d
			 x+=(((float)tspeed)/(8.18))*cos(((headingDegrees-axis)*pi)/180);
			 y+=(((float)tspeed)/(8.18))*sin(((headingDegrees-axis)*pi)/180);
			 tspeed=0;
			 y_abs = y+23.5*sin(((headingDegrees-axis)*pi)/180);
			 x_abs = x+23.5*cos(((headingDegrees-axis)*pi)/180);
			 tempCount=0;
    192a:	31 2c       	mov	r3, r1
				else if(output<lower_limit+65)
					output=lower_limit+65;
			}
			goal_position(output);
			lcd_clear();
			Printf("%d %d %d",(int)x_abs,(int)y_abs,headingDegrees);
    192c:	39 82       	std	Y+1, r3	; 0x01
		counter=0;
		last_counter=0;
		ninety_flag1=1;
		while(1)
		{
			if(speed!=0)
    192e:	80 91 13 02 	lds	r24, 0x0213
    1932:	90 91 14 02 	lds	r25, 0x0214
    1936:	89 2b       	or	r24, r25
    1938:	81 f1       	breq	.+96     	; 0x199a <_Z22ninety_turn_navigationv+0x13c>
			{
				tspeed+=speed;
    193a:	60 91 13 02 	lds	r22, 0x0213
    193e:	70 91 14 02 	lds	r23, 0x0214
    1942:	88 27       	eor	r24, r24
    1944:	77 fd       	sbrc	r23, 7
    1946:	80 95       	com	r24
    1948:	98 2f       	mov	r25, r24
    194a:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    194e:	9b 01       	movw	r18, r22
    1950:	ac 01       	movw	r20, r24
    1952:	ba 85       	ldd	r27, Y+10	; 0x0a
    1954:	ab 85       	ldd	r26, Y+11	; 0x0b
    1956:	ec 85       	ldd	r30, Y+12	; 0x0c
    1958:	1d 85       	ldd	r17, Y+13	; 0x0d
    195a:	6b 2f       	mov	r22, r27
    195c:	7a 2f       	mov	r23, r26
    195e:	8e 2f       	mov	r24, r30
    1960:	91 2f       	mov	r25, r17
    1962:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    1966:	6a 87       	std	Y+10, r22	; 0x0a
    1968:	7b 87       	std	Y+11, r23	; 0x0b
    196a:	8c 87       	std	Y+12, r24	; 0x0c
    196c:	9d 87       	std	Y+13, r25	; 0x0d
				tempCount++;
    196e:	20 e0       	ldi	r18, 0x00	; 0
    1970:	30 e0       	ldi	r19, 0x00	; 0
    1972:	40 e8       	ldi	r20, 0x80	; 128
    1974:	5f e3       	ldi	r21, 0x3F	; 63
    1976:	ba 81       	ldd	r27, Y+2	; 0x02
    1978:	ab 81       	ldd	r26, Y+3	; 0x03
    197a:	ec 81       	ldd	r30, Y+4	; 0x04
    197c:	1d 81       	ldd	r17, Y+5	; 0x05
    197e:	6b 2f       	mov	r22, r27
    1980:	7a 2f       	mov	r23, r26
    1982:	8e 2f       	mov	r24, r30
    1984:	91 2f       	mov	r25, r17
    1986:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    198a:	6a 83       	std	Y+2, r22	; 0x02
    198c:	7b 83       	std	Y+3, r23	; 0x03
    198e:	8c 83       	std	Y+4, r24	; 0x04
    1990:	9d 83       	std	Y+5, r25	; 0x05
				speed=0;
    1992:	10 92 14 02 	sts	0x0214, r1
    1996:	10 92 13 02 	sts	0x0213, r1
			}
			if(tempCount>=4)
    199a:	20 e0       	ldi	r18, 0x00	; 0
    199c:	30 e0       	ldi	r19, 0x00	; 0
    199e:	40 e8       	ldi	r20, 0x80	; 128
    19a0:	50 e4       	ldi	r21, 0x40	; 64
    19a2:	ba 81       	ldd	r27, Y+2	; 0x02
    19a4:	ab 81       	ldd	r26, Y+3	; 0x03
    19a6:	ec 81       	ldd	r30, Y+4	; 0x04
    19a8:	1d 81       	ldd	r17, Y+5	; 0x05
    19aa:	6b 2f       	mov	r22, r27
    19ac:	7a 2f       	mov	r23, r26
    19ae:	8e 2f       	mov	r24, r30
    19b0:	91 2f       	mov	r25, r17
    19b2:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    19b6:	88 23       	and	r24, r24
    19b8:	0c f4       	brge	.+2      	; 0x19bc <_Z22ninety_turn_navigationv+0x15e>
    19ba:	ff c0       	rjmp	.+510    	; 0x1bba <_Z22ninety_turn_navigationv+0x35c>
			{
			 headingDegrees=getHeading();
    19bc:	0e 94 b9 06 	call	0xd72	; 0xd72 <_Z10getHeadingv>
    19c0:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    19c4:	7b 01       	movw	r14, r22
    19c6:	70 93 06 02 	sts	0x0206, r23
    19ca:	60 93 05 02 	sts	0x0205, r22
			 x+=(((float)tspeed)/(8.18))*cos(((headingDegrees-axis)*pi)/180);
    19ce:	28 e4       	ldi	r18, 0x48	; 72
    19d0:	31 ee       	ldi	r19, 0xE1	; 225
    19d2:	42 e0       	ldi	r20, 0x02	; 2
    19d4:	51 e4       	ldi	r21, 0x41	; 65
    19d6:	ba 85       	ldd	r27, Y+10	; 0x0a
    19d8:	ab 85       	ldd	r26, Y+11	; 0x0b
    19da:	ec 85       	ldd	r30, Y+12	; 0x0c
    19dc:	1d 85       	ldd	r17, Y+13	; 0x0d
    19de:	6b 2f       	mov	r22, r27
    19e0:	7a 2f       	mov	r23, r26
    19e2:	8e 2f       	mov	r24, r30
    19e4:	91 2f       	mov	r25, r17
    19e6:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
    19ea:	36 2e       	mov	r3, r22
    19ec:	27 2e       	mov	r2, r23
    19ee:	08 2f       	mov	r16, r24
    19f0:	19 2f       	mov	r17, r25
    19f2:	80 91 6a 00 	lds	r24, 0x006A
    19f6:	90 91 6b 00 	lds	r25, 0x006B
    19fa:	b7 01       	movw	r22, r14
    19fc:	68 1b       	sub	r22, r24
    19fe:	79 0b       	sbc	r23, r25
    1a00:	88 27       	eor	r24, r24
    1a02:	77 fd       	sbrc	r23, 7
    1a04:	80 95       	com	r24
    1a06:	98 2f       	mov	r25, r24
    1a08:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1a0c:	26 e5       	ldi	r18, 0x56	; 86
    1a0e:	3e e0       	ldi	r19, 0x0E	; 14
    1a10:	49 e4       	ldi	r20, 0x49	; 73
    1a12:	50 e4       	ldi	r21, 0x40	; 64
    1a14:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1a18:	20 e0       	ldi	r18, 0x00	; 0
    1a1a:	30 e0       	ldi	r19, 0x00	; 0
    1a1c:	44 e3       	ldi	r20, 0x34	; 52
    1a1e:	53 e4       	ldi	r21, 0x43	; 67
    1a20:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
    1a24:	c6 2e       	mov	r12, r22
    1a26:	d7 2e       	mov	r13, r23
    1a28:	e8 2e       	mov	r14, r24
    1a2a:	f9 2e       	mov	r15, r25
    1a2c:	0e 94 b2 1c 	call	0x3964	; 0x3964 <cos>
    1a30:	4b 01       	movw	r8, r22
    1a32:	5c 01       	movw	r10, r24
    1a34:	9b 01       	movw	r18, r22
    1a36:	ac 01       	movw	r20, r24
    1a38:	63 2d       	mov	r22, r3
    1a3a:	72 2d       	mov	r23, r2
    1a3c:	80 2f       	mov	r24, r16
    1a3e:	91 2f       	mov	r25, r17
    1a40:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1a44:	20 91 7c 00 	lds	r18, 0x007C
    1a48:	30 91 7d 00 	lds	r19, 0x007D
    1a4c:	40 91 7e 00 	lds	r20, 0x007E
    1a50:	50 91 7f 00 	lds	r21, 0x007F
    1a54:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    1a58:	46 2e       	mov	r4, r22
    1a5a:	57 2e       	mov	r5, r23
    1a5c:	68 2e       	mov	r6, r24
    1a5e:	79 2e       	mov	r7, r25
    1a60:	86 2f       	mov	r24, r22
    1a62:	95 2d       	mov	r25, r5
    1a64:	a6 2d       	mov	r26, r6
    1a66:	b7 2d       	mov	r27, r7
    1a68:	80 93 7c 00 	sts	0x007C, r24
    1a6c:	90 93 7d 00 	sts	0x007D, r25
    1a70:	a0 93 7e 00 	sts	0x007E, r26
    1a74:	b0 93 7f 00 	sts	0x007F, r27
			 y+=(((float)tspeed)/(8.18))*sin(((headingDegrees-axis)*pi)/180);
    1a78:	6c 2d       	mov	r22, r12
    1a7a:	7d 2d       	mov	r23, r13
    1a7c:	8e 2d       	mov	r24, r14
    1a7e:	9f 2d       	mov	r25, r15
    1a80:	0e 94 18 1f 	call	0x3e30	; 0x3e30 <sin>
    1a84:	6b 01       	movw	r12, r22
    1a86:	7c 01       	movw	r14, r24
    1a88:	9b 01       	movw	r18, r22
    1a8a:	ac 01       	movw	r20, r24
    1a8c:	63 2d       	mov	r22, r3
    1a8e:	72 2d       	mov	r23, r2
    1a90:	80 2f       	mov	r24, r16
    1a92:	91 2f       	mov	r25, r17
    1a94:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1a98:	20 91 a3 01 	lds	r18, 0x01A3
    1a9c:	30 91 a4 01 	lds	r19, 0x01A4
    1aa0:	40 91 a5 01 	lds	r20, 0x01A5
    1aa4:	50 91 a6 01 	lds	r21, 0x01A6
    1aa8:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    1aac:	06 2f       	mov	r16, r22
    1aae:	17 2f       	mov	r17, r23
    1ab0:	28 2e       	mov	r2, r24
    1ab2:	39 2e       	mov	r3, r25
    1ab4:	86 2f       	mov	r24, r22
    1ab6:	91 2f       	mov	r25, r17
    1ab8:	a2 2d       	mov	r26, r2
    1aba:	b3 2d       	mov	r27, r3
    1abc:	80 93 a3 01 	sts	0x01A3, r24
    1ac0:	90 93 a4 01 	sts	0x01A4, r25
    1ac4:	a0 93 a5 01 	sts	0x01A5, r26
    1ac8:	b0 93 a6 01 	sts	0x01A6, r27
			 tspeed=0;
			 y_abs = y+23.5*sin(((headingDegrees-axis)*pi)/180);
    1acc:	20 e0       	ldi	r18, 0x00	; 0
    1ace:	30 e0       	ldi	r19, 0x00	; 0
    1ad0:	4c eb       	ldi	r20, 0xBC	; 188
    1ad2:	51 e4       	ldi	r21, 0x41	; 65
    1ad4:	c7 01       	movw	r24, r14
    1ad6:	b6 01       	movw	r22, r12
    1ad8:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1adc:	9b 01       	movw	r18, r22
    1ade:	ac 01       	movw	r20, r24
    1ae0:	60 2f       	mov	r22, r16
    1ae2:	71 2f       	mov	r23, r17
    1ae4:	82 2d       	mov	r24, r2
    1ae6:	93 2d       	mov	r25, r3
    1ae8:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    1aec:	06 2f       	mov	r16, r22
    1aee:	17 2f       	mov	r17, r23
    1af0:	28 2e       	mov	r2, r24
    1af2:	39 2e       	mov	r3, r25
    1af4:	86 2f       	mov	r24, r22
    1af6:	91 2f       	mov	r25, r17
    1af8:	a2 2d       	mov	r26, r2
    1afa:	b3 2d       	mov	r27, r3
    1afc:	80 93 9f 01 	sts	0x019F, r24
    1b00:	90 93 a0 01 	sts	0x01A0, r25
    1b04:	a0 93 a1 01 	sts	0x01A1, r26
    1b08:	b0 93 a2 01 	sts	0x01A2, r27
			 x_abs = x+23.5*cos(((headingDegrees-axis)*pi)/180);
    1b0c:	20 e0       	ldi	r18, 0x00	; 0
    1b0e:	30 e0       	ldi	r19, 0x00	; 0
    1b10:	4c eb       	ldi	r20, 0xBC	; 188
    1b12:	51 e4       	ldi	r21, 0x41	; 65
    1b14:	c5 01       	movw	r24, r10
    1b16:	b4 01       	movw	r22, r8
    1b18:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1b1c:	9b 01       	movw	r18, r22
    1b1e:	ac 01       	movw	r20, r24
    1b20:	64 2d       	mov	r22, r4
    1b22:	75 2d       	mov	r23, r5
    1b24:	86 2d       	mov	r24, r6
    1b26:	97 2d       	mov	r25, r7
    1b28:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    1b2c:	60 93 9b 01 	sts	0x019B, r22
    1b30:	70 93 9c 01 	sts	0x019C, r23
    1b34:	80 93 9d 01 	sts	0x019D, r24
    1b38:	90 93 9e 01 	sts	0x019E, r25
			 tempCount=0;
			 if(ninety_y_abs_derivative_error<(y_abs-last_y_abs))
    1b3c:	20 91 62 01 	lds	r18, 0x0162
    1b40:	30 91 63 01 	lds	r19, 0x0163
    1b44:	40 91 64 01 	lds	r20, 0x0164
    1b48:	50 91 65 01 	lds	r21, 0x0165
    1b4c:	60 2f       	mov	r22, r16
    1b4e:	71 2f       	mov	r23, r17
    1b50:	82 2d       	mov	r24, r2
    1b52:	93 2d       	mov	r25, r3
    1b54:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <__subsf3>
    1b58:	c6 2e       	mov	r12, r22
    1b5a:	d7 2e       	mov	r13, r23
    1b5c:	e8 2e       	mov	r14, r24
    1b5e:	f9 2e       	mov	r15, r25
    1b60:	20 91 66 01 	lds	r18, 0x0166
    1b64:	30 91 67 01 	lds	r19, 0x0167
    1b68:	40 91 68 01 	lds	r20, 0x0168
    1b6c:	50 91 69 01 	lds	r21, 0x0169
    1b70:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    1b74:	18 16       	cp	r1, r24
    1b76:	64 f4       	brge	.+24     	; 0x1b90 <_Z22ninety_turn_navigationv+0x332>
				ninety_y_abs_derivative_error=y_abs-last_y_abs;
    1b78:	8c 2d       	mov	r24, r12
    1b7a:	9d 2d       	mov	r25, r13
    1b7c:	ae 2d       	mov	r26, r14
    1b7e:	bf 2d       	mov	r27, r15
    1b80:	80 93 66 01 	sts	0x0166, r24
    1b84:	90 93 67 01 	sts	0x0167, r25
    1b88:	a0 93 68 01 	sts	0x0168, r26
    1b8c:	b0 93 69 01 	sts	0x0169, r27
			 last_y_abs=y_abs;
    1b90:	80 2f       	mov	r24, r16
    1b92:	91 2f       	mov	r25, r17
    1b94:	a2 2d       	mov	r26, r2
    1b96:	b3 2d       	mov	r27, r3
    1b98:	80 93 62 01 	sts	0x0162, r24
    1b9c:	90 93 63 01 	sts	0x0163, r25
    1ba0:	a0 93 64 01 	sts	0x0164, r26
    1ba4:	b0 93 65 01 	sts	0x0165, r27
			 x+=(((float)tspeed)/(8.18))*cos(((headingDegrees-axis)*pi)/180);
			 y+=(((float)tspeed)/(8.18))*sin(((headingDegrees-axis)*pi)/180);
			 tspeed=0;
			 y_abs = y+23.5*sin(((headingDegrees-axis)*pi)/180);
			 x_abs = x+23.5*cos(((headingDegrees-axis)*pi)/180);
			 tempCount=0;
    1ba8:	29 81       	ldd	r18, Y+1	; 0x01
    1baa:	2a 83       	std	Y+2, r18	; 0x02
    1bac:	2b 83       	std	Y+3, r18	; 0x03
    1bae:	2c 83       	std	Y+4, r18	; 0x04
    1bb0:	2d 83       	std	Y+5, r18	; 0x05
			if(tempCount>=4)
			{
			 headingDegrees=getHeading();
			 x+=(((float)tspeed)/(8.18))*cos(((headingDegrees-axis)*pi)/180);
			 y+=(((float)tspeed)/(8.18))*sin(((headingDegrees-axis)*pi)/180);
			 tspeed=0;
    1bb2:	2a 87       	std	Y+10, r18	; 0x0a
    1bb4:	2b 87       	std	Y+11, r18	; 0x0b
    1bb6:	2c 87       	std	Y+12, r18	; 0x0c
    1bb8:	2d 87       	std	Y+13, r18	; 0x0d
			 if(ninety_y_abs_derivative_error<(y_abs-last_y_abs))
				ninety_y_abs_derivative_error=y_abs-last_y_abs;
			 last_y_abs=y_abs;
			}
			
			error1=(ninety_y_abs_setpoint-y_abs);
    1bba:	60 91 60 00 	lds	r22, 0x0060
    1bbe:	70 91 61 00 	lds	r23, 0x0061
    1bc2:	88 27       	eor	r24, r24
    1bc4:	77 fd       	sbrc	r23, 7
    1bc6:	80 95       	com	r24
    1bc8:	98 2f       	mov	r25, r24
    1bca:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1bce:	6b 01       	movw	r12, r22
    1bd0:	7c 01       	movw	r14, r24
    1bd2:	20 91 9f 01 	lds	r18, 0x019F
    1bd6:	30 91 a0 01 	lds	r19, 0x01A0
    1bda:	40 91 a1 01 	lds	r20, 0x01A1
    1bde:	50 91 a2 01 	lds	r21, 0x01A2
    1be2:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <__subsf3>
    1be6:	06 2f       	mov	r16, r22
    1be8:	17 2f       	mov	r17, r23
    1bea:	a8 2e       	mov	r10, r24
    1bec:	b9 2e       	mov	r11, r25
			if(error1 >ninety_y_abs_setpoint)
    1bee:	76 2f       	mov	r23, r22
    1bf0:	27 2f       	mov	r18, r23
    1bf2:	31 2f       	mov	r19, r17
    1bf4:	4a 2d       	mov	r20, r10
    1bf6:	5b 2d       	mov	r21, r11
    1bf8:	c7 01       	movw	r24, r14
    1bfa:	b6 01       	movw	r22, r12
    1bfc:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    1c00:	88 23       	and	r24, r24
    1c02:	6c f0       	brlt	.+26     	; 0x1c1e <_Z22ninety_turn_navigationv+0x3c0>
			 if(ninety_y_abs_derivative_error<(y_abs-last_y_abs))
				ninety_y_abs_derivative_error=y_abs-last_y_abs;
			 last_y_abs=y_abs;
			}
			
			error1=(ninety_y_abs_setpoint-y_abs);
    1c04:	80 2f       	mov	r24, r16
    1c06:	91 2f       	mov	r25, r17
    1c08:	aa 2d       	mov	r26, r10
    1c0a:	bb 2d       	mov	r27, r11
    1c0c:	80 93 e7 01 	sts	0x01E7, r24
    1c10:	90 93 e8 01 	sts	0x01E8, r25
    1c14:	a0 93 e9 01 	sts	0x01E9, r26
    1c18:	b0 93 ea 01 	sts	0x01EA, r27
    1c1c:	08 c0       	rjmp	.+16     	; 0x1c2e <_Z22ninety_turn_navigationv+0x3d0>
			if(error1 >ninety_y_abs_setpoint)
			error1=ninety_y_abs_setpoint;
    1c1e:	c0 92 e7 01 	sts	0x01E7, r12
    1c22:	d0 92 e8 01 	sts	0x01E8, r13
    1c26:	e0 92 e9 01 	sts	0x01E9, r14
    1c2a:	f0 92 ea 01 	sts	0x01EA, r15
			
			if(track==0)
    1c2e:	20 90 5e 01 	lds	r2, 0x015E
    1c32:	30 90 5f 01 	lds	r3, 0x015F
    1c36:	21 14       	cp	r2, r1
    1c38:	31 04       	cpc	r3, r1
    1c3a:	d9 f4       	brne	.+54     	; 0x1c72 <_Z22ninety_turn_navigationv+0x414>
				error2=(axis+180)-headingDegrees;
    1c3c:	60 91 6a 00 	lds	r22, 0x006A
    1c40:	70 91 6b 00 	lds	r23, 0x006B
    1c44:	6c 54       	subi	r22, 0x4C	; 76
    1c46:	7f 4f       	sbci	r23, 0xFF	; 255
    1c48:	80 91 05 02 	lds	r24, 0x0205
    1c4c:	90 91 06 02 	lds	r25, 0x0206
    1c50:	68 1b       	sub	r22, r24
    1c52:	79 0b       	sbc	r23, r25
    1c54:	88 27       	eor	r24, r24
    1c56:	77 fd       	sbrc	r23, 7
    1c58:	80 95       	com	r24
    1c5a:	98 2f       	mov	r25, r24
    1c5c:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1c60:	60 93 e3 01 	sts	0x01E3, r22
    1c64:	70 93 e4 01 	sts	0x01E4, r23
    1c68:	80 93 e5 01 	sts	0x01E5, r24
    1c6c:	90 93 e6 01 	sts	0x01E6, r25
    1c70:	1c c0       	rjmp	.+56     	; 0x1caa <_Z22ninety_turn_navigationv+0x44c>
			else if(track==1)
    1c72:	31 e0       	ldi	r19, 0x01	; 1
    1c74:	23 16       	cp	r2, r19
    1c76:	31 04       	cpc	r3, r1
    1c78:	c1 f4       	brne	.+48     	; 0x1caa <_Z22ninety_turn_navigationv+0x44c>
				error2=headingDegrees-axis;
    1c7a:	60 91 05 02 	lds	r22, 0x0205
    1c7e:	70 91 06 02 	lds	r23, 0x0206
    1c82:	80 91 6a 00 	lds	r24, 0x006A
    1c86:	90 91 6b 00 	lds	r25, 0x006B
    1c8a:	68 1b       	sub	r22, r24
    1c8c:	79 0b       	sbc	r23, r25
    1c8e:	88 27       	eor	r24, r24
    1c90:	77 fd       	sbrc	r23, 7
    1c92:	80 95       	com	r24
    1c94:	98 2f       	mov	r25, r24
    1c96:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1c9a:	60 93 e3 01 	sts	0x01E3, r22
    1c9e:	70 93 e4 01 	sts	0x01E4, r23
    1ca2:	80 93 e5 01 	sts	0x01E5, r24
    1ca6:	90 93 e6 01 	sts	0x01E6, r25
			
			
			Kp_compass = 0.55+(30-abs(error1))*(0.45)/(30);
    1caa:	80 90 e7 01 	lds	r8, 0x01E7
    1cae:	90 90 e8 01 	lds	r9, 0x01E8
    1cb2:	a0 90 e9 01 	lds	r10, 0x01E9
    1cb6:	b0 90 ea 01 	lds	r11, 0x01EA
    1cba:	c5 01       	movw	r24, r10
    1cbc:	b4 01       	movw	r22, r8
    1cbe:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    1cc2:	86 2f       	mov	r24, r22
    1cc4:	97 2f       	mov	r25, r23
    1cc6:	99 23       	and	r25, r25
    1cc8:	1c f4       	brge	.+6      	; 0x1cd0 <_Z22ninety_turn_navigationv+0x472>
    1cca:	91 95       	neg	r25
    1ccc:	81 95       	neg	r24
    1cce:	91 09       	sbc	r25, r1
    1cd0:	6e e1       	ldi	r22, 0x1E	; 30
    1cd2:	70 e0       	ldi	r23, 0x00	; 0
    1cd4:	68 1b       	sub	r22, r24
    1cd6:	79 0b       	sbc	r23, r25
    1cd8:	88 27       	eor	r24, r24
    1cda:	77 fd       	sbrc	r23, 7
    1cdc:	80 95       	com	r24
    1cde:	98 2f       	mov	r25, r24
    1ce0:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1ce4:	2b 01       	movw	r4, r22
    1ce6:	3c 01       	movw	r6, r24
    1ce8:	26 e6       	ldi	r18, 0x66	; 102
    1cea:	36 e6       	ldi	r19, 0x66	; 102
    1cec:	46 ee       	ldi	r20, 0xE6	; 230
    1cee:	5e e3       	ldi	r21, 0x3E	; 62
    1cf0:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1cf4:	20 e0       	ldi	r18, 0x00	; 0
    1cf6:	30 e0       	ldi	r19, 0x00	; 0
    1cf8:	40 ef       	ldi	r20, 0xF0	; 240
    1cfa:	51 e4       	ldi	r21, 0x41	; 65
    1cfc:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
    1d00:	2d ec       	ldi	r18, 0xCD	; 205
    1d02:	3c ec       	ldi	r19, 0xCC	; 204
    1d04:	4c e0       	ldi	r20, 0x0C	; 12
    1d06:	5f e3       	ldi	r21, 0x3F	; 63
    1d08:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    1d0c:	6e 87       	std	Y+14, r22	; 0x0e
    1d0e:	7f 87       	std	Y+15, r23	; 0x0f
    1d10:	18 2f       	mov	r17, r24
    1d12:	09 2f       	mov	r16, r25
			Kp_line = 1+(30-abs(error1))*(2.5-1)/30;
			//error2=240-headingDegrees;
			output = straight-(red_field)*error1*Kp_line+error2*(red_field)*Kp_compass+(red_field)*ninety_y_abs_derivative_error*0;
    1d14:	60 91 9c 00 	lds	r22, 0x009C
    1d18:	70 91 9d 00 	lds	r23, 0x009D
    1d1c:	88 27       	eor	r24, r24
    1d1e:	77 fd       	sbrc	r23, 7
    1d20:	80 95       	com	r24
    1d22:	98 2f       	mov	r25, r24
    1d24:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1d28:	6b 01       	movw	r12, r22
    1d2a:	7c 01       	movw	r14, r24
    1d2c:	60 91 82 00 	lds	r22, 0x0082
    1d30:	70 91 83 00 	lds	r23, 0x0083
    1d34:	88 27       	eor	r24, r24
    1d36:	77 fd       	sbrc	r23, 7
    1d38:	80 95       	com	r24
    1d3a:	98 2f       	mov	r25, r24
    1d3c:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1d40:	6e 83       	std	Y+6, r22	; 0x06
    1d42:	7f 83       	std	Y+7, r23	; 0x07
    1d44:	88 87       	std	Y+8, r24	; 0x08
    1d46:	99 87       	std	Y+9, r25	; 0x09
    1d48:	a7 01       	movw	r20, r14
    1d4a:	96 01       	movw	r18, r12
    1d4c:	c5 01       	movw	r24, r10
    1d4e:	b4 01       	movw	r22, r8
    1d50:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1d54:	4b 01       	movw	r8, r22
    1d56:	5c 01       	movw	r10, r24
			else if(track==1)
				error2=headingDegrees-axis;
			
			
			Kp_compass = 0.55+(30-abs(error1))*(0.45)/(30);
			Kp_line = 1+(30-abs(error1))*(2.5-1)/30;
    1d58:	20 e0       	ldi	r18, 0x00	; 0
    1d5a:	30 e0       	ldi	r19, 0x00	; 0
    1d5c:	40 ec       	ldi	r20, 0xC0	; 192
    1d5e:	5f e3       	ldi	r21, 0x3F	; 63
    1d60:	c3 01       	movw	r24, r6
    1d62:	b2 01       	movw	r22, r4
    1d64:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1d68:	20 e0       	ldi	r18, 0x00	; 0
    1d6a:	30 e0       	ldi	r19, 0x00	; 0
    1d6c:	40 ef       	ldi	r20, 0xF0	; 240
    1d6e:	51 e4       	ldi	r21, 0x41	; 65
    1d70:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
    1d74:	20 e0       	ldi	r18, 0x00	; 0
    1d76:	30 e0       	ldi	r19, 0x00	; 0
    1d78:	40 e8       	ldi	r20, 0x80	; 128
    1d7a:	5f e3       	ldi	r21, 0x3F	; 63
    1d7c:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    1d80:	9b 01       	movw	r18, r22
    1d82:	ac 01       	movw	r20, r24
			//error2=240-headingDegrees;
			output = straight-(red_field)*error1*Kp_line+error2*(red_field)*Kp_compass+(red_field)*ninety_y_abs_derivative_error*0;
    1d84:	c5 01       	movw	r24, r10
    1d86:	b4 01       	movw	r22, r8
    1d88:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1d8c:	9b 01       	movw	r18, r22
    1d8e:	ac 01       	movw	r20, r24
    1d90:	6e 81       	ldd	r22, Y+6	; 0x06
    1d92:	7f 81       	ldd	r23, Y+7	; 0x07
    1d94:	88 85       	ldd	r24, Y+8	; 0x08
    1d96:	99 85       	ldd	r25, Y+9	; 0x09
    1d98:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <__subsf3>
    1d9c:	4b 01       	movw	r8, r22
    1d9e:	5c 01       	movw	r10, r24
    1da0:	20 91 e3 01 	lds	r18, 0x01E3
    1da4:	30 91 e4 01 	lds	r19, 0x01E4
    1da8:	40 91 e5 01 	lds	r20, 0x01E5
    1dac:	50 91 e6 01 	lds	r21, 0x01E6
    1db0:	c7 01       	movw	r24, r14
    1db2:	b6 01       	movw	r22, r12
    1db4:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1db8:	be 85       	ldd	r27, Y+14	; 0x0e
    1dba:	af 85       	ldd	r26, Y+15	; 0x0f
    1dbc:	2b 2f       	mov	r18, r27
    1dbe:	3a 2f       	mov	r19, r26
    1dc0:	41 2f       	mov	r20, r17
    1dc2:	50 2f       	mov	r21, r16
    1dc4:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1dc8:	9b 01       	movw	r18, r22
    1dca:	ac 01       	movw	r20, r24
    1dcc:	c5 01       	movw	r24, r10
    1dce:	b4 01       	movw	r22, r8
    1dd0:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    1dd4:	4b 01       	movw	r8, r22
    1dd6:	5c 01       	movw	r10, r24
    1dd8:	20 91 66 01 	lds	r18, 0x0166
    1ddc:	30 91 67 01 	lds	r19, 0x0167
    1de0:	40 91 68 01 	lds	r20, 0x0168
    1de4:	50 91 69 01 	lds	r21, 0x0169
    1de8:	c7 01       	movw	r24, r14
    1dea:	b6 01       	movw	r22, r12
    1dec:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1df0:	20 e0       	ldi	r18, 0x00	; 0
    1df2:	30 e0       	ldi	r19, 0x00	; 0
    1df4:	a9 01       	movw	r20, r18
    1df6:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1dfa:	9b 01       	movw	r18, r22
    1dfc:	ac 01       	movw	r20, r24
    1dfe:	c5 01       	movw	r24, r10
    1e00:	b4 01       	movw	r22, r8
    1e02:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    1e06:	46 2f       	mov	r20, r22
    1e08:	57 2f       	mov	r21, r23
    1e0a:	68 2f       	mov	r22, r24
    1e0c:	79 2f       	mov	r23, r25
    1e0e:	40 93 b7 01 	sts	0x01B7, r20
    1e12:	50 93 b8 01 	sts	0x01B8, r21
    1e16:	60 93 b9 01 	sts	0x01B9, r22
    1e1a:	70 93 ba 01 	sts	0x01BA, r23
			
			if(track==0)
    1e1e:	21 14       	cp	r2, r1
    1e20:	31 04       	cpc	r3, r1
    1e22:	09 f0       	breq	.+2      	; 0x1e26 <_Z22ninety_turn_navigationv+0x5c8>
    1e24:	47 c0       	rjmp	.+142    	; 0x1eb4 <_Z22ninety_turn_navigationv+0x656>
			{
				if(output>upper_limit-65)
    1e26:	60 91 ad 01 	lds	r22, 0x01AD
    1e2a:	70 91 ae 01 	lds	r23, 0x01AE
    1e2e:	61 54       	subi	r22, 0x41	; 65
    1e30:	71 09       	sbc	r23, r1
    1e32:	88 27       	eor	r24, r24
    1e34:	77 fd       	sbrc	r23, 7
    1e36:	80 95       	com	r24
    1e38:	98 2f       	mov	r25, r24
    1e3a:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1e3e:	6b 01       	movw	r12, r22
    1e40:	7c 01       	movw	r14, r24
    1e42:	20 91 b7 01 	lds	r18, 0x01B7
    1e46:	30 91 b8 01 	lds	r19, 0x01B8
    1e4a:	40 91 b9 01 	lds	r20, 0x01B9
    1e4e:	50 91 ba 01 	lds	r21, 0x01BA
    1e52:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    1e56:	88 23       	and	r24, r24
    1e58:	4c f4       	brge	.+18     	; 0x1e6c <_Z22ninety_turn_navigationv+0x60e>
					output=upper_limit-65;
    1e5a:	c0 92 b7 01 	sts	0x01B7, r12
    1e5e:	d0 92 b8 01 	sts	0x01B8, r13
    1e62:	e0 92 b9 01 	sts	0x01B9, r14
    1e66:	f0 92 ba 01 	sts	0x01BA, r15
    1e6a:	6d c0       	rjmp	.+218    	; 0x1f46 <_Z22ninety_turn_navigationv+0x6e8>
				else if(output<lower_limit+45)
    1e6c:	60 91 ab 01 	lds	r22, 0x01AB
    1e70:	70 91 ac 01 	lds	r23, 0x01AC
    1e74:	63 5d       	subi	r22, 0xD3	; 211
    1e76:	7f 4f       	sbci	r23, 0xFF	; 255
    1e78:	88 27       	eor	r24, r24
    1e7a:	77 fd       	sbrc	r23, 7
    1e7c:	80 95       	com	r24
    1e7e:	98 2f       	mov	r25, r24
    1e80:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1e84:	6b 01       	movw	r12, r22
    1e86:	7c 01       	movw	r14, r24
    1e88:	20 91 b7 01 	lds	r18, 0x01B7
    1e8c:	30 91 b8 01 	lds	r19, 0x01B8
    1e90:	40 91 b9 01 	lds	r20, 0x01B9
    1e94:	50 91 ba 01 	lds	r21, 0x01BA
    1e98:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    1e9c:	18 16       	cp	r1, r24
    1e9e:	0c f0       	brlt	.+2      	; 0x1ea2 <_Z22ninety_turn_navigationv+0x644>
    1ea0:	52 c0       	rjmp	.+164    	; 0x1f46 <_Z22ninety_turn_navigationv+0x6e8>
					output=lower_limit+45;
    1ea2:	c0 92 b7 01 	sts	0x01B7, r12
    1ea6:	d0 92 b8 01 	sts	0x01B8, r13
    1eaa:	e0 92 b9 01 	sts	0x01B9, r14
    1eae:	f0 92 ba 01 	sts	0x01BA, r15
    1eb2:	49 c0       	rjmp	.+146    	; 0x1f46 <_Z22ninety_turn_navigationv+0x6e8>
			}
			else if(track==1)
    1eb4:	2a 94       	dec	r2
    1eb6:	23 28       	or	r2, r3
    1eb8:	09 f0       	breq	.+2      	; 0x1ebc <_Z22ninety_turn_navigationv+0x65e>
    1eba:	45 c0       	rjmp	.+138    	; 0x1f46 <_Z22ninety_turn_navigationv+0x6e8>
			{
				if(output>upper_limit-55)
    1ebc:	60 91 ad 01 	lds	r22, 0x01AD
    1ec0:	70 91 ae 01 	lds	r23, 0x01AE
    1ec4:	67 53       	subi	r22, 0x37	; 55
    1ec6:	71 09       	sbc	r23, r1
    1ec8:	88 27       	eor	r24, r24
    1eca:	77 fd       	sbrc	r23, 7
    1ecc:	80 95       	com	r24
    1ece:	98 2f       	mov	r25, r24
    1ed0:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1ed4:	6b 01       	movw	r12, r22
    1ed6:	7c 01       	movw	r14, r24
    1ed8:	20 91 b7 01 	lds	r18, 0x01B7
    1edc:	30 91 b8 01 	lds	r19, 0x01B8
    1ee0:	40 91 b9 01 	lds	r20, 0x01B9
    1ee4:	50 91 ba 01 	lds	r21, 0x01BA
    1ee8:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    1eec:	88 23       	and	r24, r24
    1eee:	4c f4       	brge	.+18     	; 0x1f02 <_Z22ninety_turn_navigationv+0x6a4>
					output=upper_limit-55;
    1ef0:	c0 92 b7 01 	sts	0x01B7, r12
    1ef4:	d0 92 b8 01 	sts	0x01B8, r13
    1ef8:	e0 92 b9 01 	sts	0x01B9, r14
    1efc:	f0 92 ba 01 	sts	0x01BA, r15
    1f00:	22 c0       	rjmp	.+68     	; 0x1f46 <_Z22ninety_turn_navigationv+0x6e8>
				else if(output<lower_limit+65)
    1f02:	60 91 ab 01 	lds	r22, 0x01AB
    1f06:	70 91 ac 01 	lds	r23, 0x01AC
    1f0a:	6f 5b       	subi	r22, 0xBF	; 191
    1f0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f0e:	88 27       	eor	r24, r24
    1f10:	77 fd       	sbrc	r23, 7
    1f12:	80 95       	com	r24
    1f14:	98 2f       	mov	r25, r24
    1f16:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    1f1a:	6b 01       	movw	r12, r22
    1f1c:	7c 01       	movw	r14, r24
    1f1e:	20 91 b7 01 	lds	r18, 0x01B7
    1f22:	30 91 b8 01 	lds	r19, 0x01B8
    1f26:	40 91 b9 01 	lds	r20, 0x01B9
    1f2a:	50 91 ba 01 	lds	r21, 0x01BA
    1f2e:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    1f32:	18 16       	cp	r1, r24
    1f34:	44 f4       	brge	.+16     	; 0x1f46 <_Z22ninety_turn_navigationv+0x6e8>
					output=lower_limit+65;
    1f36:	c0 92 b7 01 	sts	0x01B7, r12
    1f3a:	d0 92 b8 01 	sts	0x01B8, r13
    1f3e:	e0 92 b9 01 	sts	0x01B9, r14
    1f42:	f0 92 ba 01 	sts	0x01BA, r15
			}
			goal_position(output);
    1f46:	60 91 b7 01 	lds	r22, 0x01B7
    1f4a:	70 91 b8 01 	lds	r23, 0x01B8
    1f4e:	80 91 b9 01 	lds	r24, 0x01B9
    1f52:	90 91 ba 01 	lds	r25, 0x01BA
    1f56:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    1f5a:	cb 01       	movw	r24, r22
    1f5c:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
			lcd_clear();
    1f60:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
			Printf("%d %d %d",(int)x_abs,(int)y_abs,headingDegrees);
    1f64:	80 91 06 02 	lds	r24, 0x0206
    1f68:	8f 93       	push	r24
    1f6a:	80 91 05 02 	lds	r24, 0x0205
    1f6e:	8f 93       	push	r24
    1f70:	60 91 9f 01 	lds	r22, 0x019F
    1f74:	70 91 a0 01 	lds	r23, 0x01A0
    1f78:	80 91 a1 01 	lds	r24, 0x01A1
    1f7c:	90 91 a2 01 	lds	r25, 0x01A2
    1f80:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    1f84:	7f 93       	push	r23
    1f86:	6f 93       	push	r22
    1f88:	60 91 9b 01 	lds	r22, 0x019B
    1f8c:	70 91 9c 01 	lds	r23, 0x019C
    1f90:	80 91 9d 01 	lds	r24, 0x019D
    1f94:	90 91 9e 01 	lds	r25, 0x019E
    1f98:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    1f9c:	7f 93       	push	r23
    1f9e:	6f 93       	push	r22
    1fa0:	e7 ef       	ldi	r30, 0xF7	; 247
    1fa2:	f0 e0       	ldi	r31, 0x00	; 0
    1fa4:	ff 93       	push	r31
    1fa6:	ef 93       	push	r30
    1fa8:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
			lcd_gotoxy(0,1);
    1fac:	61 e0       	ldi	r22, 0x01	; 1
    1fae:	89 81       	ldd	r24, Y+1	; 0x01
    1fb0:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_Z10lcd_gotoxyhh>
			Printf("%d %d %d",(int)error1,(int)error2,(int)(Kp_compass*100));
    1fb4:	20 e0       	ldi	r18, 0x00	; 0
    1fb6:	30 e0       	ldi	r19, 0x00	; 0
    1fb8:	48 ec       	ldi	r20, 0xC8	; 200
    1fba:	52 e4       	ldi	r21, 0x42	; 66
    1fbc:	be 85       	ldd	r27, Y+14	; 0x0e
    1fbe:	af 85       	ldd	r26, Y+15	; 0x0f
    1fc0:	6b 2f       	mov	r22, r27
    1fc2:	7a 2f       	mov	r23, r26
    1fc4:	81 2f       	mov	r24, r17
    1fc6:	90 2f       	mov	r25, r16
    1fc8:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    1fcc:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    1fd0:	7f 93       	push	r23
    1fd2:	6f 93       	push	r22
    1fd4:	60 91 e3 01 	lds	r22, 0x01E3
    1fd8:	70 91 e4 01 	lds	r23, 0x01E4
    1fdc:	80 91 e5 01 	lds	r24, 0x01E5
    1fe0:	90 91 e6 01 	lds	r25, 0x01E6
    1fe4:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    1fe8:	7f 93       	push	r23
    1fea:	6f 93       	push	r22
    1fec:	60 91 e7 01 	lds	r22, 0x01E7
    1ff0:	70 91 e8 01 	lds	r23, 0x01E8
    1ff4:	80 91 e9 01 	lds	r24, 0x01E9
    1ff8:	90 91 ea 01 	lds	r25, 0x01EA
    1ffc:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    2000:	7f 93       	push	r23
    2002:	6f 93       	push	r22
    2004:	87 ef       	ldi	r24, 0xF7	; 247
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	9f 93       	push	r25
    200a:	8f 93       	push	r24
    200c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
			if(track==0)
    2010:	80 91 5e 01 	lds	r24, 0x015E
    2014:	90 91 5f 01 	lds	r25, 0x015F
    2018:	0f b6       	in	r0, 0x3f	; 63
    201a:	f8 94       	cli
    201c:	de bf       	out	0x3e, r29	; 62
    201e:	0f be       	out	0x3f, r0	; 63
    2020:	cd bf       	out	0x3d, r28	; 61
    2022:	00 97       	sbiw	r24, 0x00	; 0
    2024:	09 f0       	breq	.+2      	; 0x2028 <_Z22ninety_turn_navigationv+0x7ca>
    2026:	45 c0       	rjmp	.+138    	; 0x20b2 <_Z22ninety_turn_navigationv+0x854>
			{
				//if((headingDegrees>((axis+180)-30) && headingDegrees<((axis+180)+30)) || ((PINB>2 && PINB<64) && ninety_flag1==1))
				if(y_abs>15 && (PINB>=2 && PINB<=64))
    2028:	c0 90 9f 01 	lds	r12, 0x019F
    202c:	d0 90 a0 01 	lds	r13, 0x01A0
    2030:	e0 90 a1 01 	lds	r14, 0x01A1
    2034:	f0 90 a2 01 	lds	r15, 0x01A2
    2038:	20 e0       	ldi	r18, 0x00	; 0
    203a:	30 e0       	ldi	r19, 0x00	; 0
    203c:	40 e7       	ldi	r20, 0x70	; 112
    203e:	51 e4       	ldi	r21, 0x41	; 65
    2040:	c7 01       	movw	r24, r14
    2042:	b6 01       	movw	r22, r12
    2044:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    2048:	18 16       	cp	r1, r24
    204a:	0c f0       	brlt	.+2      	; 0x204e <_Z22ninety_turn_navigationv+0x7f0>
    204c:	7a c0       	rjmp	.+244    	; 0x2142 <_Z22ninety_turn_navigationv+0x8e4>
    204e:	86 b3       	in	r24, 0x16	; 22
    2050:	82 30       	cpi	r24, 0x02	; 2
    2052:	08 f4       	brcc	.+2      	; 0x2056 <_Z22ninety_turn_navigationv+0x7f8>
    2054:	76 c0       	rjmp	.+236    	; 0x2142 <_Z22ninety_turn_navigationv+0x8e4>
    2056:	86 b3       	in	r24, 0x16	; 22
    2058:	81 34       	cpi	r24, 0x41	; 65
    205a:	08 f4       	brcc	.+2      	; 0x205e <_Z22ninety_turn_navigationv+0x800>
    205c:	7e c0       	rjmp	.+252    	; 0x215a <_Z22ninety_turn_navigationv+0x8fc>
    205e:	71 c0       	rjmp	.+226    	; 0x2142 <_Z22ninety_turn_navigationv+0x8e4>
					setPoint=35;
					ninety_flag1==0;
					break;
					
				}
				else if(y_abs<25 && abs(x_abs)>40 && ninety_flag1==1)
    2060:	60 91 9b 01 	lds	r22, 0x019B
    2064:	70 91 9c 01 	lds	r23, 0x019C
    2068:	80 91 9d 01 	lds	r24, 0x019D
    206c:	90 91 9e 01 	lds	r25, 0x019E
    2070:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    2074:	86 2f       	mov	r24, r22
    2076:	97 2f       	mov	r25, r23
    2078:	99 23       	and	r25, r25
    207a:	1c f4       	brge	.+6      	; 0x2082 <_Z22ninety_turn_navigationv+0x824>
    207c:	91 95       	neg	r25
    207e:	81 95       	neg	r24
    2080:	91 09       	sbc	r25, r1
    2082:	89 97       	sbiw	r24, 0x29	; 41
    2084:	0c f4       	brge	.+2      	; 0x2088 <_Z22ninety_turn_navigationv+0x82a>
    2086:	53 cc       	rjmp	.-1882   	; 0x192e <_Z22ninety_turn_navigationv+0xd0>
    2088:	80 91 6a 01 	lds	r24, 0x016A
    208c:	90 91 6b 01 	lds	r25, 0x016B
    2090:	01 97       	sbiw	r24, 0x01	; 1
    2092:	09 f0       	breq	.+2      	; 0x2096 <_Z22ninety_turn_navigationv+0x838>
    2094:	4c cc       	rjmp	.-1896   	; 0x192e <_Z22ninety_turn_navigationv+0xd0>
				{
					ninety_y_abs_setpoint=ninety_y_abs_setpoint+5;
    2096:	80 91 60 00 	lds	r24, 0x0060
    209a:	90 91 61 00 	lds	r25, 0x0061
    209e:	05 96       	adiw	r24, 0x05	; 5
    20a0:	90 93 61 00 	sts	0x0061, r25
    20a4:	80 93 60 00 	sts	0x0060, r24
					ninety_flag1=0;
    20a8:	10 92 6b 01 	sts	0x016B, r1
    20ac:	10 92 6a 01 	sts	0x016A, r1
    20b0:	3e cc       	rjmp	.-1924   	; 0x192e <_Z22ninety_turn_navigationv+0xd0>
				}
			}
			else if(track==1)
    20b2:	01 97       	sbiw	r24, 0x01	; 1
    20b4:	09 f0       	breq	.+2      	; 0x20b8 <_Z22ninety_turn_navigationv+0x85a>
    20b6:	3b cc       	rjmp	.-1930   	; 0x192e <_Z22ninety_turn_navigationv+0xd0>
			{
				if(y_abs>15 && (PINB>=2 && PINB<=64))
    20b8:	c0 90 9f 01 	lds	r12, 0x019F
    20bc:	d0 90 a0 01 	lds	r13, 0x01A0
    20c0:	e0 90 a1 01 	lds	r14, 0x01A1
    20c4:	f0 90 a2 01 	lds	r15, 0x01A2
    20c8:	20 e0       	ldi	r18, 0x00	; 0
    20ca:	30 e0       	ldi	r19, 0x00	; 0
    20cc:	40 e7       	ldi	r20, 0x70	; 112
    20ce:	51 e4       	ldi	r21, 0x41	; 65
    20d0:	c7 01       	movw	r24, r14
    20d2:	b6 01       	movw	r22, r12
    20d4:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    20d8:	18 16       	cp	r1, r24
    20da:	0c f0       	brlt	.+2      	; 0x20de <_Z22ninety_turn_navigationv+0x880>
    20dc:	80 c0       	rjmp	.+256    	; 0x21de <_Z22ninety_turn_navigationv+0x980>
    20de:	86 b3       	in	r24, 0x16	; 22
    20e0:	82 30       	cpi	r24, 0x02	; 2
    20e2:	08 f4       	brcc	.+2      	; 0x20e6 <_Z22ninety_turn_navigationv+0x888>
    20e4:	7c c0       	rjmp	.+248    	; 0x21de <_Z22ninety_turn_navigationv+0x980>
    20e6:	86 b3       	in	r24, 0x16	; 22
    20e8:	81 34       	cpi	r24, 0x41	; 65
    20ea:	08 f4       	brcc	.+2      	; 0x20ee <_Z22ninety_turn_navigationv+0x890>
    20ec:	57 c0       	rjmp	.+174    	; 0x219c <_Z22ninety_turn_navigationv+0x93e>
    20ee:	77 c0       	rjmp	.+238    	; 0x21de <_Z22ninety_turn_navigationv+0x980>
					ninety_flag1==0;
					running=1;
					setPoint=55;
					break;
				}
				else if(y_abs<25 && abs(x_abs)>40 && ninety_flag1==1)
    20f0:	60 91 9b 01 	lds	r22, 0x019B
    20f4:	70 91 9c 01 	lds	r23, 0x019C
    20f8:	80 91 9d 01 	lds	r24, 0x019D
    20fc:	90 91 9e 01 	lds	r25, 0x019E
    2100:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    2104:	86 2f       	mov	r24, r22
    2106:	97 2f       	mov	r25, r23
    2108:	99 23       	and	r25, r25
    210a:	1c f4       	brge	.+6      	; 0x2112 <_Z22ninety_turn_navigationv+0x8b4>
    210c:	91 95       	neg	r25
    210e:	81 95       	neg	r24
    2110:	91 09       	sbc	r25, r1
    2112:	89 97       	sbiw	r24, 0x29	; 41
    2114:	0c f4       	brge	.+2      	; 0x2118 <_Z22ninety_turn_navigationv+0x8ba>
    2116:	0b cc       	rjmp	.-2026   	; 0x192e <_Z22ninety_turn_navigationv+0xd0>
    2118:	80 91 6a 01 	lds	r24, 0x016A
    211c:	90 91 6b 01 	lds	r25, 0x016B
    2120:	01 97       	sbiw	r24, 0x01	; 1
    2122:	09 f0       	breq	.+2      	; 0x2126 <_Z22ninety_turn_navigationv+0x8c8>
    2124:	04 cc       	rjmp	.-2040   	; 0x192e <_Z22ninety_turn_navigationv+0xd0>
				{
					ninety_y_abs_setpoint=ninety_y_abs_setpoint+5;
    2126:	80 91 60 00 	lds	r24, 0x0060
    212a:	90 91 61 00 	lds	r25, 0x0061
    212e:	05 96       	adiw	r24, 0x05	; 5
    2130:	90 93 61 00 	sts	0x0061, r25
    2134:	80 93 60 00 	sts	0x0060, r24
					ninety_flag1=0;
    2138:	10 92 6b 01 	sts	0x016B, r1
    213c:	10 92 6a 01 	sts	0x016A, r1
    2140:	f6 cb       	rjmp	.-2068   	; 0x192e <_Z22ninety_turn_navigationv+0xd0>
					setPoint=35;
					ninety_flag1==0;
					break;
					
				}
				else if(y_abs<25 && abs(x_abs)>40 && ninety_flag1==1)
    2142:	20 e0       	ldi	r18, 0x00	; 0
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	48 ec       	ldi	r20, 0xC8	; 200
    2148:	51 e4       	ldi	r21, 0x41	; 65
    214a:	c7 01       	movw	r24, r14
    214c:	b6 01       	movw	r22, r12
    214e:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    2152:	88 23       	and	r24, r24
    2154:	0c f4       	brge	.+2      	; 0x2158 <_Z22ninety_turn_navigationv+0x8fa>
    2156:	84 cf       	rjmp	.-248    	; 0x2060 <_Z22ninety_turn_navigationv+0x802>
    2158:	ea cb       	rjmp	.-2092   	; 0x192e <_Z22ninety_turn_navigationv+0xd0>
			if(track==0)
			{
				//if((headingDegrees>((axis+180)-30) && headingDegrees<((axis+180)+30)) || ((PINB>2 && PINB<64) && ninety_flag1==1))
				if(y_abs>15 && (PINB>=2 && PINB<=64))
				{
					running=1;
    215a:	81 e0       	ldi	r24, 0x01	; 1
    215c:	90 e0       	ldi	r25, 0x00	; 0
    215e:	90 93 81 00 	sts	0x0081, r25
    2162:	80 93 80 00 	sts	0x0080, r24
					ninety_counter=4;
    2166:	84 e0       	ldi	r24, 0x04	; 4
    2168:	90 e0       	ldi	r25, 0x00	; 0
    216a:	90 93 6d 01 	sts	0x016D, r25
    216e:	80 93 6c 01 	sts	0x016C, r24
					ninety_enable=0;
    2172:	10 92 63 00 	sts	0x0063, r1
    2176:	10 92 62 00 	sts	0x0062, r1
					position=45;
    217a:	8d e2       	ldi	r24, 0x2D	; 45
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	90 93 99 01 	sts	0x0199, r25
    2182:	80 93 98 01 	sts	0x0198, r24
					first_junc=0;
    2186:	10 92 65 00 	sts	0x0065, r1
    218a:	10 92 64 00 	sts	0x0064, r1
					setPoint=35;
    218e:	83 e2       	ldi	r24, 0x23	; 35
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	90 93 87 00 	sts	0x0087, r25
    2196:	80 93 86 00 	sts	0x0086, r24
					ninety_flag1==0;
					break;
    219a:	2d c0       	rjmp	.+90     	; 0x21f6 <_Z22ninety_turn_navigationv+0x998>
			}
			else if(track==1)
			{
				if(y_abs>15 && (PINB>=2 && PINB<=64))
				{
					running=1;
    219c:	81 e0       	ldi	r24, 0x01	; 1
    219e:	90 e0       	ldi	r25, 0x00	; 0
    21a0:	90 93 81 00 	sts	0x0081, r25
    21a4:	80 93 80 00 	sts	0x0080, r24
					ninety_counter=4;
    21a8:	84 e0       	ldi	r24, 0x04	; 4
    21aa:	90 e0       	ldi	r25, 0x00	; 0
    21ac:	90 93 6d 01 	sts	0x016D, r25
    21b0:	80 93 6c 01 	sts	0x016C, r24
					ninety_enable=0;
    21b4:	10 92 63 00 	sts	0x0063, r1
    21b8:	10 92 62 00 	sts	0x0062, r1
					position=45;
    21bc:	8d e2       	ldi	r24, 0x2D	; 45
    21be:	90 e0       	ldi	r25, 0x00	; 0
    21c0:	90 93 99 01 	sts	0x0199, r25
    21c4:	80 93 98 01 	sts	0x0198, r24
					first_junc=0;
    21c8:	10 92 65 00 	sts	0x0065, r1
    21cc:	10 92 64 00 	sts	0x0064, r1
					ninety_flag1==0;
					running=1;
					setPoint=55;
    21d0:	87 e3       	ldi	r24, 0x37	; 55
    21d2:	90 e0       	ldi	r25, 0x00	; 0
    21d4:	90 93 87 00 	sts	0x0087, r25
    21d8:	80 93 86 00 	sts	0x0086, r24
					break;
    21dc:	0c c0       	rjmp	.+24     	; 0x21f6 <_Z22ninety_turn_navigationv+0x998>
				}
				else if(y_abs<25 && abs(x_abs)>40 && ninety_flag1==1)
    21de:	20 e0       	ldi	r18, 0x00	; 0
    21e0:	30 e0       	ldi	r19, 0x00	; 0
    21e2:	48 ec       	ldi	r20, 0xC8	; 200
    21e4:	51 e4       	ldi	r21, 0x41	; 65
    21e6:	c7 01       	movw	r24, r14
    21e8:	b6 01       	movw	r22, r12
    21ea:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    21ee:	88 23       	and	r24, r24
    21f0:	0c f4       	brge	.+2      	; 0x21f4 <_Z22ninety_turn_navigationv+0x996>
    21f2:	7e cf       	rjmp	.-260    	; 0x20f0 <_Z22ninety_turn_navigationv+0x892>
    21f4:	9c cb       	rjmp	.-2248   	; 0x192e <_Z22ninety_turn_navigationv+0xd0>
					ninety_flag1=0;
				}
			}
		}
	}
}
    21f6:	2f 96       	adiw	r28, 0x0f	; 15
    21f8:	0f b6       	in	r0, 0x3f	; 63
    21fa:	f8 94       	cli
    21fc:	de bf       	out	0x3e, r29	; 62
    21fe:	0f be       	out	0x3f, r0	; 63
    2200:	cd bf       	out	0x3d, r28	; 61
    2202:	df 91       	pop	r29
    2204:	cf 91       	pop	r28
    2206:	1f 91       	pop	r17
    2208:	0f 91       	pop	r16
    220a:	ff 90       	pop	r15
    220c:	ef 90       	pop	r14
    220e:	df 90       	pop	r13
    2210:	cf 90       	pop	r12
    2212:	bf 90       	pop	r11
    2214:	af 90       	pop	r10
    2216:	9f 90       	pop	r9
    2218:	8f 90       	pop	r8
    221a:	7f 90       	pop	r7
    221c:	6f 90       	pop	r6
    221e:	5f 90       	pop	r5
    2220:	4f 90       	pop	r4
    2222:	3f 90       	pop	r3
    2224:	2f 90       	pop	r2
    2226:	08 95       	ret

00002228 <_Z24calculate_river_distancev>:
void calculate_river_distance()
{
	if(track==1)
    2228:	80 91 5e 01 	lds	r24, 0x015E
    222c:	90 91 5f 01 	lds	r25, 0x015F
    2230:	81 30       	cpi	r24, 0x01	; 1
    2232:	91 05       	cpc	r25, r1
    2234:	09 f0       	breq	.+2      	; 0x2238 <_Z24calculate_river_distancev+0x10>
    2236:	82 c0       	rjmp	.+260    	; 0x233c <_Z24calculate_river_distancev+0x114>
	{
		dist_check=350-(int)(speed*kv);
    2238:	60 91 13 02 	lds	r22, 0x0213
    223c:	70 91 14 02 	lds	r23, 0x0214
    2240:	88 27       	eor	r24, r24
    2242:	77 fd       	sbrc	r23, 7
    2244:	80 95       	com	r24
    2246:	98 2f       	mov	r25, r24
    2248:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    224c:	20 91 8c 00 	lds	r18, 0x008C
    2250:	30 91 8d 00 	lds	r19, 0x008D
    2254:	40 91 8e 00 	lds	r20, 0x008E
    2258:	50 91 8f 00 	lds	r21, 0x008F
    225c:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    2260:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    2264:	8e e5       	ldi	r24, 0x5E	; 94
    2266:	91 e0       	ldi	r25, 0x01	; 1
    2268:	86 1b       	sub	r24, r22
    226a:	97 0b       	sbc	r25, r23
		if(dist_check>=330)
    226c:	8a 34       	cpi	r24, 0x4A	; 74
    226e:	21 e0       	ldi	r18, 0x01	; 1
    2270:	92 07       	cpc	r25, r18
    2272:	3c f0       	brlt	.+14     	; 0x2282 <_Z24calculate_river_distancev+0x5a>
		dist_check=330;
    2274:	8a e4       	ldi	r24, 0x4A	; 74
    2276:	91 e0       	ldi	r25, 0x01	; 1
    2278:	90 93 d0 01 	sts	0x01D0, r25
    227c:	80 93 cf 01 	sts	0x01CF, r24
    2280:	08 95       	ret
		else if(dist_check<250)
    2282:	8a 3f       	cpi	r24, 0xFA	; 250
    2284:	91 05       	cpc	r25, r1
    2286:	3c f4       	brge	.+14     	; 0x2296 <_Z24calculate_river_distancev+0x6e>
		dist_check=190;
    2288:	8e eb       	ldi	r24, 0xBE	; 190
    228a:	90 e0       	ldi	r25, 0x00	; 0
    228c:	90 93 d0 01 	sts	0x01D0, r25
    2290:	80 93 cf 01 	sts	0x01CF, r24
    2294:	08 95       	ret
		else if(dist_check<260)
    2296:	84 30       	cpi	r24, 0x04	; 4
    2298:	21 e0       	ldi	r18, 0x01	; 1
    229a:	92 07       	cpc	r25, r18
    229c:	3c f4       	brge	.+14     	; 0x22ac <_Z24calculate_river_distancev+0x84>
		dist_check=205;
    229e:	8d ec       	ldi	r24, 0xCD	; 205
    22a0:	90 e0       	ldi	r25, 0x00	; 0
    22a2:	90 93 d0 01 	sts	0x01D0, r25
    22a6:	80 93 cf 01 	sts	0x01CF, r24
    22aa:	08 95       	ret
		else if(dist_check<270)
    22ac:	8e 30       	cpi	r24, 0x0E	; 14
    22ae:	21 e0       	ldi	r18, 0x01	; 1
    22b0:	92 07       	cpc	r25, r18
    22b2:	3c f4       	brge	.+14     	; 0x22c2 <_Z24calculate_river_distancev+0x9a>
		dist_check=215;
    22b4:	87 ed       	ldi	r24, 0xD7	; 215
    22b6:	90 e0       	ldi	r25, 0x00	; 0
    22b8:	90 93 d0 01 	sts	0x01D0, r25
    22bc:	80 93 cf 01 	sts	0x01CF, r24
    22c0:	08 95       	ret
		else if(dist_check<280)
    22c2:	88 31       	cpi	r24, 0x18	; 24
    22c4:	21 e0       	ldi	r18, 0x01	; 1
    22c6:	92 07       	cpc	r25, r18
    22c8:	3c f4       	brge	.+14     	; 0x22d8 <_Z24calculate_river_distancev+0xb0>
		dist_check=230;
    22ca:	86 ee       	ldi	r24, 0xE6	; 230
    22cc:	90 e0       	ldi	r25, 0x00	; 0
    22ce:	90 93 d0 01 	sts	0x01D0, r25
    22d2:	80 93 cf 01 	sts	0x01CF, r24
    22d6:	08 95       	ret
		else if(dist_check<290)
    22d8:	82 32       	cpi	r24, 0x22	; 34
    22da:	21 e0       	ldi	r18, 0x01	; 1
    22dc:	92 07       	cpc	r25, r18
    22de:	3c f4       	brge	.+14     	; 0x22ee <_Z24calculate_river_distancev+0xc6>
		dist_check=275;
    22e0:	83 e1       	ldi	r24, 0x13	; 19
    22e2:	91 e0       	ldi	r25, 0x01	; 1
    22e4:	90 93 d0 01 	sts	0x01D0, r25
    22e8:	80 93 cf 01 	sts	0x01CF, r24
    22ec:	08 95       	ret
		else if (dist_check<300)
    22ee:	8c 32       	cpi	r24, 0x2C	; 44
    22f0:	21 e0       	ldi	r18, 0x01	; 1
    22f2:	92 07       	cpc	r25, r18
    22f4:	3c f4       	brge	.+14     	; 0x2304 <_Z24calculate_river_distancev+0xdc>
		dist_check=285;
    22f6:	8d e1       	ldi	r24, 0x1D	; 29
    22f8:	91 e0       	ldi	r25, 0x01	; 1
    22fa:	90 93 d0 01 	sts	0x01D0, r25
    22fe:	80 93 cf 01 	sts	0x01CF, r24
    2302:	08 95       	ret
		else if(dist_check<310)
    2304:	86 33       	cpi	r24, 0x36	; 54
    2306:	21 e0       	ldi	r18, 0x01	; 1
    2308:	92 07       	cpc	r25, r18
    230a:	3c f4       	brge	.+14     	; 0x231a <_Z24calculate_river_distancev+0xf2>
		dist_check=300;
    230c:	8c e2       	ldi	r24, 0x2C	; 44
    230e:	91 e0       	ldi	r25, 0x01	; 1
    2310:	90 93 d0 01 	sts	0x01D0, r25
    2314:	80 93 cf 01 	sts	0x01CF, r24
    2318:	08 95       	ret
		else if(dist_check<320)
    231a:	80 34       	cpi	r24, 0x40	; 64
    231c:	91 40       	sbci	r25, 0x01	; 1
    231e:	3c f4       	brge	.+14     	; 0x232e <_Z24calculate_river_distancev+0x106>
		dist_check=310;
    2320:	86 e3       	ldi	r24, 0x36	; 54
    2322:	91 e0       	ldi	r25, 0x01	; 1
    2324:	90 93 d0 01 	sts	0x01D0, r25
    2328:	80 93 cf 01 	sts	0x01CF, r24
    232c:	08 95       	ret
		else if(dist_check<330)
		dist_check=320;
    232e:	80 e4       	ldi	r24, 0x40	; 64
    2330:	91 e0       	ldi	r25, 0x01	; 1
    2332:	90 93 d0 01 	sts	0x01D0, r25
    2336:	80 93 cf 01 	sts	0x01CF, r24
    233a:	08 95       	ret
	}
	else if(track==0)
    233c:	89 2b       	or	r24, r25
    233e:	09 f0       	breq	.+2      	; 0x2342 <_Z24calculate_river_distancev+0x11a>
    2340:	80 c0       	rjmp	.+256    	; 0x2442 <_Z24calculate_river_distancev+0x21a>
		dist_check=300;
		else if(dist_check<320)
		dist_check=310;
		else if(dist_check<330)
		dist_check=320;*/
		dist_check=330-(int)(speed*kv);
    2342:	60 91 13 02 	lds	r22, 0x0213
    2346:	70 91 14 02 	lds	r23, 0x0214
    234a:	88 27       	eor	r24, r24
    234c:	77 fd       	sbrc	r23, 7
    234e:	80 95       	com	r24
    2350:	98 2f       	mov	r25, r24
    2352:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2356:	20 91 8c 00 	lds	r18, 0x008C
    235a:	30 91 8d 00 	lds	r19, 0x008D
    235e:	40 91 8e 00 	lds	r20, 0x008E
    2362:	50 91 8f 00 	lds	r21, 0x008F
    2366:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    236a:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    236e:	8a e4       	ldi	r24, 0x4A	; 74
    2370:	91 e0       	ldi	r25, 0x01	; 1
    2372:	86 1b       	sub	r24, r22
    2374:	97 0b       	sbc	r25, r23
		if(dist_check>=320)
    2376:	80 34       	cpi	r24, 0x40	; 64
    2378:	21 e0       	ldi	r18, 0x01	; 1
    237a:	92 07       	cpc	r25, r18
    237c:	3c f0       	brlt	.+14     	; 0x238c <_Z24calculate_river_distancev+0x164>
		dist_check=320;
    237e:	80 e4       	ldi	r24, 0x40	; 64
    2380:	91 e0       	ldi	r25, 0x01	; 1
    2382:	90 93 d0 01 	sts	0x01D0, r25
    2386:	80 93 cf 01 	sts	0x01CF, r24
    238a:	08 95       	ret
		else if(dist_check<240)
    238c:	80 3f       	cpi	r24, 0xF0	; 240
    238e:	91 05       	cpc	r25, r1
    2390:	3c f4       	brge	.+14     	; 0x23a0 <_Z24calculate_river_distancev+0x178>
		dist_check=180;
    2392:	84 eb       	ldi	r24, 0xB4	; 180
    2394:	90 e0       	ldi	r25, 0x00	; 0
    2396:	90 93 d0 01 	sts	0x01D0, r25
    239a:	80 93 cf 01 	sts	0x01CF, r24
    239e:	08 95       	ret
		else if(dist_check<250)
    23a0:	8a 3f       	cpi	r24, 0xFA	; 250
    23a2:	91 05       	cpc	r25, r1
    23a4:	3c f4       	brge	.+14     	; 0x23b4 <_Z24calculate_river_distancev+0x18c>
		dist_check=195;
    23a6:	83 ec       	ldi	r24, 0xC3	; 195
    23a8:	90 e0       	ldi	r25, 0x00	; 0
    23aa:	90 93 d0 01 	sts	0x01D0, r25
    23ae:	80 93 cf 01 	sts	0x01CF, r24
    23b2:	08 95       	ret
		else if(dist_check<260)
    23b4:	84 30       	cpi	r24, 0x04	; 4
    23b6:	21 e0       	ldi	r18, 0x01	; 1
    23b8:	92 07       	cpc	r25, r18
    23ba:	3c f4       	brge	.+14     	; 0x23ca <_Z24calculate_river_distancev+0x1a2>
		dist_check=205;
    23bc:	8d ec       	ldi	r24, 0xCD	; 205
    23be:	90 e0       	ldi	r25, 0x00	; 0
    23c0:	90 93 d0 01 	sts	0x01D0, r25
    23c4:	80 93 cf 01 	sts	0x01CF, r24
    23c8:	08 95       	ret
		else if(dist_check<270)
    23ca:	8e 30       	cpi	r24, 0x0E	; 14
    23cc:	21 e0       	ldi	r18, 0x01	; 1
    23ce:	92 07       	cpc	r25, r18
    23d0:	3c f4       	brge	.+14     	; 0x23e0 <_Z24calculate_river_distancev+0x1b8>
		dist_check=220;
    23d2:	8c ed       	ldi	r24, 0xDC	; 220
    23d4:	90 e0       	ldi	r25, 0x00	; 0
    23d6:	90 93 d0 01 	sts	0x01D0, r25
    23da:	80 93 cf 01 	sts	0x01CF, r24
    23de:	08 95       	ret
		else if(dist_check<280)
    23e0:	88 31       	cpi	r24, 0x18	; 24
    23e2:	21 e0       	ldi	r18, 0x01	; 1
    23e4:	92 07       	cpc	r25, r18
    23e6:	3c f4       	brge	.+14     	; 0x23f6 <_Z24calculate_river_distancev+0x1ce>
		dist_check=255;
    23e8:	8f ef       	ldi	r24, 0xFF	; 255
    23ea:	90 e0       	ldi	r25, 0x00	; 0
    23ec:	90 93 d0 01 	sts	0x01D0, r25
    23f0:	80 93 cf 01 	sts	0x01CF, r24
    23f4:	08 95       	ret
		else if (dist_check<290)
    23f6:	82 32       	cpi	r24, 0x22	; 34
    23f8:	21 e0       	ldi	r18, 0x01	; 1
    23fa:	92 07       	cpc	r25, r18
    23fc:	3c f4       	brge	.+14     	; 0x240c <_Z24calculate_river_distancev+0x1e4>
		dist_check=275;
    23fe:	83 e1       	ldi	r24, 0x13	; 19
    2400:	91 e0       	ldi	r25, 0x01	; 1
    2402:	90 93 d0 01 	sts	0x01D0, r25
    2406:	80 93 cf 01 	sts	0x01CF, r24
    240a:	08 95       	ret
		else if(dist_check<300)
    240c:	8c 32       	cpi	r24, 0x2C	; 44
    240e:	21 e0       	ldi	r18, 0x01	; 1
    2410:	92 07       	cpc	r25, r18
    2412:	3c f4       	brge	.+14     	; 0x2422 <_Z24calculate_river_distancev+0x1fa>
		dist_check=290;
    2414:	82 e2       	ldi	r24, 0x22	; 34
    2416:	91 e0       	ldi	r25, 0x01	; 1
    2418:	90 93 d0 01 	sts	0x01D0, r25
    241c:	80 93 cf 01 	sts	0x01CF, r24
    2420:	08 95       	ret
		else if(dist_check<310)
    2422:	86 33       	cpi	r24, 0x36	; 54
    2424:	91 40       	sbci	r25, 0x01	; 1
    2426:	3c f4       	brge	.+14     	; 0x2436 <_Z24calculate_river_distancev+0x20e>
		dist_check=300;
    2428:	8c e2       	ldi	r24, 0x2C	; 44
    242a:	91 e0       	ldi	r25, 0x01	; 1
    242c:	90 93 d0 01 	sts	0x01D0, r25
    2430:	80 93 cf 01 	sts	0x01CF, r24
    2434:	08 95       	ret
		else if(dist_check<320)
		dist_check=310;
    2436:	86 e3       	ldi	r24, 0x36	; 54
    2438:	91 e0       	ldi	r25, 0x01	; 1
    243a:	90 93 d0 01 	sts	0x01D0, r25
    243e:	80 93 cf 01 	sts	0x01CF, r24
    2442:	08 95       	ret

00002444 <_Z17ninety_optional_1v>:
	
	
}
void ninety_optional_1()
{
	if(first_junc==1)
    2444:	80 91 64 00 	lds	r24, 0x0064
    2448:	90 91 65 00 	lds	r25, 0x0065
    244c:	01 97       	sbiw	r24, 0x01	; 1
    244e:	09 f0       	breq	.+2      	; 0x2452 <_Z17ninety_optional_1v+0xe>
    2450:	c7 c0       	rjmp	.+398    	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
	{
		switch(linestate)
    2452:	80 91 9a 01 	lds	r24, 0x019A
    2456:	80 33       	cpi	r24, 0x30	; 48
    2458:	09 f4       	brne	.+2      	; 0x245c <_Z17ninety_optional_1v+0x18>
    245a:	a8 c0       	rjmp	.+336    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    245c:	08 f5       	brcc	.+66     	; 0x24a0 <_Z17ninety_optional_1v+0x5c>
    245e:	8e 30       	cpi	r24, 0x0E	; 14
    2460:	09 f4       	brne	.+2      	; 0x2464 <_Z17ninety_optional_1v+0x20>
    2462:	a4 c0       	rjmp	.+328    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    2464:	78 f4       	brcc	.+30     	; 0x2484 <_Z17ninety_optional_1v+0x40>
    2466:	86 30       	cpi	r24, 0x06	; 6
    2468:	09 f4       	brne	.+2      	; 0x246c <_Z17ninety_optional_1v+0x28>
    246a:	a0 c0       	rjmp	.+320    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    246c:	20 f4       	brcc	.+8      	; 0x2476 <_Z17ninety_optional_1v+0x32>
    246e:	82 30       	cpi	r24, 0x02	; 2
    2470:	09 f0       	breq	.+2      	; 0x2474 <_Z17ninety_optional_1v+0x30>
    2472:	b6 c0       	rjmp	.+364    	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
    2474:	9b c0       	rjmp	.+310    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    2476:	88 30       	cpi	r24, 0x08	; 8
    2478:	09 f4       	brne	.+2      	; 0x247c <_Z17ninety_optional_1v+0x38>
    247a:	98 c0       	rjmp	.+304    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    247c:	8c 30       	cpi	r24, 0x0C	; 12
    247e:	09 f0       	breq	.+2      	; 0x2482 <_Z17ninety_optional_1v+0x3e>
    2480:	af c0       	rjmp	.+350    	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
    2482:	94 c0       	rjmp	.+296    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    2484:	88 31       	cpi	r24, 0x18	; 24
    2486:	09 f4       	brne	.+2      	; 0x248a <_Z17ninety_optional_1v+0x46>
    2488:	91 c0       	rjmp	.+290    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    248a:	20 f4       	brcc	.+8      	; 0x2494 <_Z17ninety_optional_1v+0x50>
    248c:	80 31       	cpi	r24, 0x10	; 16
    248e:	09 f0       	breq	.+2      	; 0x2492 <_Z17ninety_optional_1v+0x4e>
    2490:	a7 c0       	rjmp	.+334    	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
    2492:	8c c0       	rjmp	.+280    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    2494:	8f 31       	cpi	r24, 0x1F	; 31
    2496:	11 f1       	breq	.+68     	; 0x24dc <_Z17ninety_optional_1v+0x98>
    2498:	80 32       	cpi	r24, 0x20	; 32
    249a:	09 f0       	breq	.+2      	; 0x249e <_Z17ninety_optional_1v+0x5a>
    249c:	a1 c0       	rjmp	.+322    	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
    249e:	86 c0       	rjmp	.+268    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    24a0:	80 37       	cpi	r24, 0x70	; 112
    24a2:	09 f4       	brne	.+2      	; 0x24a6 <_Z17ninety_optional_1v+0x62>
    24a4:	83 c0       	rjmp	.+262    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    24a6:	70 f4       	brcc	.+28     	; 0x24c4 <_Z17ninety_optional_1v+0x80>
    24a8:	8c 33       	cpi	r24, 0x3C	; 60
    24aa:	09 f4       	brne	.+2      	; 0x24ae <_Z17ninety_optional_1v+0x6a>
    24ac:	7f c0       	rjmp	.+254    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    24ae:	20 f4       	brcc	.+8      	; 0x24b8 <_Z17ninety_optional_1v+0x74>
    24b0:	88 33       	cpi	r24, 0x38	; 56
    24b2:	09 f0       	breq	.+2      	; 0x24b6 <_Z17ninety_optional_1v+0x72>
    24b4:	95 c0       	rjmp	.+298    	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
    24b6:	7a c0       	rjmp	.+244    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    24b8:	8f 33       	cpi	r24, 0x3F	; 63
    24ba:	81 f0       	breq	.+32     	; 0x24dc <_Z17ninety_optional_1v+0x98>
    24bc:	80 36       	cpi	r24, 0x60	; 96
    24be:	09 f0       	breq	.+2      	; 0x24c2 <_Z17ninety_optional_1v+0x7e>
    24c0:	8f c0       	rjmp	.+286    	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
    24c2:	74 c0       	rjmp	.+232    	; 0x25ac <_Z17ninety_optional_1v+0x168>
    24c4:	8c 3f       	cpi	r24, 0xFC	; 252
    24c6:	51 f0       	breq	.+20     	; 0x24dc <_Z17ninety_optional_1v+0x98>
    24c8:	30 f4       	brcc	.+12     	; 0x24d6 <_Z17ninety_optional_1v+0x92>
    24ca:	8f 37       	cpi	r24, 0x7F	; 127
    24cc:	39 f0       	breq	.+14     	; 0x24dc <_Z17ninety_optional_1v+0x98>
    24ce:	88 3f       	cpi	r24, 0xF8	; 248
    24d0:	09 f0       	breq	.+2      	; 0x24d4 <_Z17ninety_optional_1v+0x90>
    24d2:	86 c0       	rjmp	.+268    	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
    24d4:	03 c0       	rjmp	.+6      	; 0x24dc <_Z17ninety_optional_1v+0x98>
    24d6:	8e 3f       	cpi	r24, 0xFE	; 254
    24d8:	08 f4       	brcc	.+2      	; 0x24dc <_Z17ninety_optional_1v+0x98>
    24da:	82 c0       	rjmp	.+260    	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
			case 0b00111111:
			case 0b00011111:
			case 0b11111110:
			case 0b11111100:
			case 0b11111000:
			if(run1==0 && color==1 && ninety_enable==1)
    24dc:	80 91 a9 01 	lds	r24, 0x01A9
    24e0:	90 91 aa 01 	lds	r25, 0x01AA
    24e4:	89 2b       	or	r24, r25
    24e6:	09 f0       	breq	.+2      	; 0x24ea <_Z17ninety_optional_1v+0xa6>
    24e8:	5a c0       	rjmp	.+180    	; 0x259e <_Z17ninety_optional_1v+0x15a>
    24ea:	80 91 bf 01 	lds	r24, 0x01BF
    24ee:	90 91 c0 01 	lds	r25, 0x01C0
    24f2:	01 97       	sbiw	r24, 0x01	; 1
    24f4:	09 f0       	breq	.+2      	; 0x24f8 <_Z17ninety_optional_1v+0xb4>
    24f6:	53 c0       	rjmp	.+166    	; 0x259e <_Z17ninety_optional_1v+0x15a>
    24f8:	80 91 62 00 	lds	r24, 0x0062
    24fc:	90 91 63 00 	lds	r25, 0x0063
    2500:	01 97       	sbiw	r24, 0x01	; 1
    2502:	09 f0       	breq	.+2      	; 0x2506 <_Z17ninety_optional_1v+0xc2>
    2504:	4c c0       	rjmp	.+152    	; 0x259e <_Z17ninety_optional_1v+0x15a>
			{
				run1=1;
    2506:	81 e0       	ldi	r24, 0x01	; 1
    2508:	90 e0       	ldi	r25, 0x00	; 0
    250a:	90 93 aa 01 	sts	0x01AA, r25
    250e:	80 93 a9 01 	sts	0x01A9, r24
				running=0;
    2512:	10 92 81 00 	sts	0x0081, r1
    2516:	10 92 80 00 	sts	0x0080, r1
				if(track==0)
    251a:	80 91 5e 01 	lds	r24, 0x015E
    251e:	90 91 5f 01 	lds	r25, 0x015F
    2522:	00 97       	sbiw	r24, 0x00	; 0
    2524:	a9 f4       	brne	.+42     	; 0x2550 <_Z17ninety_optional_1v+0x10c>
				output=lower_limit+40;
    2526:	60 91 ab 01 	lds	r22, 0x01AB
    252a:	70 91 ac 01 	lds	r23, 0x01AC
    252e:	68 5d       	subi	r22, 0xD8	; 216
    2530:	7f 4f       	sbci	r23, 0xFF	; 255
    2532:	88 27       	eor	r24, r24
    2534:	77 fd       	sbrc	r23, 7
    2536:	80 95       	com	r24
    2538:	98 2f       	mov	r25, r24
    253a:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    253e:	60 93 b7 01 	sts	0x01B7, r22
    2542:	70 93 b8 01 	sts	0x01B8, r23
    2546:	80 93 b9 01 	sts	0x01B9, r24
    254a:	90 93 ba 01 	sts	0x01BA, r25
    254e:	16 c0       	rjmp	.+44     	; 0x257c <_Z17ninety_optional_1v+0x138>
				else if(track==1)
    2550:	01 97       	sbiw	r24, 0x01	; 1
    2552:	a1 f4       	brne	.+40     	; 0x257c <_Z17ninety_optional_1v+0x138>
				output=upper_limit-40;
    2554:	60 91 ad 01 	lds	r22, 0x01AD
    2558:	70 91 ae 01 	lds	r23, 0x01AE
    255c:	68 52       	subi	r22, 0x28	; 40
    255e:	71 09       	sbc	r23, r1
    2560:	88 27       	eor	r24, r24
    2562:	77 fd       	sbrc	r23, 7
    2564:	80 95       	com	r24
    2566:	98 2f       	mov	r25, r24
    2568:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    256c:	60 93 b7 01 	sts	0x01B7, r22
    2570:	70 93 b8 01 	sts	0x01B8, r23
    2574:	80 93 b9 01 	sts	0x01B9, r24
    2578:	90 93 ba 01 	sts	0x01BA, r25
				goal_position(output);
    257c:	60 91 b7 01 	lds	r22, 0x01B7
    2580:	70 91 b8 01 	lds	r23, 0x01B8
    2584:	80 91 b9 01 	lds	r24, 0x01B9
    2588:	90 91 ba 01 	lds	r25, 0x01BA
    258c:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    2590:	cb 01       	movw	r24, r22
    2592:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
				ninety_enable=0;
    2596:	10 92 63 00 	sts	0x0063, r1
    259a:	10 92 62 00 	sts	0x0062, r1
				
			}
			downhill_flag=1;
    259e:	81 e0       	ldi	r24, 0x01	; 1
    25a0:	90 e0       	ldi	r25, 0x00	; 0
    25a2:	90 93 5d 01 	sts	0x015D, r25
    25a6:	80 93 5c 01 	sts	0x015C, r24
			break;
    25aa:	08 95       	ret
			case 0b00111000:
			case 0b00000110:
			case 0b01100000:
			case 0b01110000:
			case 0b00000010:
			if(run1==1 && color==1)
    25ac:	80 91 a9 01 	lds	r24, 0x01A9
    25b0:	90 91 aa 01 	lds	r25, 0x01AA
    25b4:	01 97       	sbiw	r24, 0x01	; 1
    25b6:	a1 f4       	brne	.+40     	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
    25b8:	80 91 bf 01 	lds	r24, 0x01BF
    25bc:	90 91 c0 01 	lds	r25, 0x01C0
    25c0:	01 97       	sbiw	r24, 0x01	; 1
    25c2:	71 f4       	brne	.+28     	; 0x25e0 <_Z17ninety_optional_1v+0x19c>
			{
				running=3;
    25c4:	83 e0       	ldi	r24, 0x03	; 3
    25c6:	90 e0       	ldi	r25, 0x00	; 0
    25c8:	90 93 81 00 	sts	0x0081, r25
    25cc:	80 93 80 00 	sts	0x0080, r24
				run1=0;
    25d0:	10 92 aa 01 	sts	0x01AA, r1
    25d4:	10 92 a9 01 	sts	0x01A9, r1
				first_junc=0;
    25d8:	10 92 65 00 	sts	0x0065, r1
    25dc:	10 92 64 00 	sts	0x0064, r1
    25e0:	08 95       	ret

000025e2 <_Z8calc_PIDv>:
	position=45;
	first_junc=0;
	ninety_enable=0;
}
float calc_PID()
{
    25e2:	8f 92       	push	r8
    25e4:	9f 92       	push	r9
    25e6:	af 92       	push	r10
    25e8:	bf 92       	push	r11
    25ea:	cf 92       	push	r12
    25ec:	df 92       	push	r13
    25ee:	ef 92       	push	r14
    25f0:	ff 92       	push	r15
    25f2:	cf 93       	push	r28
    25f4:	df 93       	push	r29
	
	ITerm+=ki*error;
    25f6:	c0 91 d5 01 	lds	r28, 0x01D5
    25fa:	d0 91 d6 01 	lds	r29, 0x01D6
    25fe:	be 01       	movw	r22, r28
    2600:	88 27       	eor	r24, r24
    2602:	77 fd       	sbrc	r23, 7
    2604:	80 95       	com	r24
    2606:	98 2f       	mov	r25, r24
    2608:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    260c:	6b 01       	movw	r12, r22
    260e:	7c 01       	movw	r14, r24
    2610:	60 91 d1 01 	lds	r22, 0x01D1
    2614:	70 91 d2 01 	lds	r23, 0x01D2
    2618:	88 27       	eor	r24, r24
    261a:	77 fd       	sbrc	r23, 7
    261c:	80 95       	com	r24
    261e:	98 2f       	mov	r25, r24
    2620:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2624:	4b 01       	movw	r8, r22
    2626:	5c 01       	movw	r10, r24
    2628:	20 91 94 00 	lds	r18, 0x0094
    262c:	30 91 95 00 	lds	r19, 0x0095
    2630:	40 91 96 00 	lds	r20, 0x0096
    2634:	50 91 97 00 	lds	r21, 0x0097
    2638:	c7 01       	movw	r24, r14
    263a:	b6 01       	movw	r22, r12
    263c:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    2640:	9b 01       	movw	r18, r22
    2642:	ac 01       	movw	r20, r24
    2644:	c5 01       	movw	r24, r10
    2646:	b4 01       	movw	r22, r8
    2648:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    264c:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
	if(ITerm>30)
    2650:	6f 31       	cpi	r22, 0x1F	; 31
    2652:	71 05       	cpc	r23, r1
    2654:	3c f0       	brlt	.+14     	; 0x2664 <_Z8calc_PIDv+0x82>
	ITerm=30;
    2656:	8e e1       	ldi	r24, 0x1E	; 30
    2658:	90 e0       	ldi	r25, 0x00	; 0
    265a:	90 93 d2 01 	sts	0x01D2, r25
    265e:	80 93 d1 01 	sts	0x01D1, r24
    2662:	0f c0       	rjmp	.+30     	; 0x2682 <_Z8calc_PIDv+0xa0>
	else if(ITerm<-30)
    2664:	62 3e       	cpi	r22, 0xE2	; 226
    2666:	8f ef       	ldi	r24, 0xFF	; 255
    2668:	78 07       	cpc	r23, r24
    266a:	2c f0       	brlt	.+10     	; 0x2676 <_Z8calc_PIDv+0x94>
	ninety_enable=0;
}
float calc_PID()
{
	
	ITerm+=ki*error;
    266c:	70 93 d2 01 	sts	0x01D2, r23
    2670:	60 93 d1 01 	sts	0x01D1, r22
    2674:	06 c0       	rjmp	.+12     	; 0x2682 <_Z8calc_PIDv+0xa0>
	if(ITerm>30)
	ITerm=30;
	else if(ITerm<-30)
	ITerm=-30;
    2676:	82 ee       	ldi	r24, 0xE2	; 226
    2678:	9f ef       	ldi	r25, 0xFF	; 255
    267a:	90 93 d2 01 	sts	0x01D2, r25
    267e:	80 93 d1 01 	sts	0x01D1, r24
	float dErr = (error - lasterror);
    2682:	80 91 d3 01 	lds	r24, 0x01D3
    2686:	90 91 d4 01 	lds	r25, 0x01D4
    268a:	be 01       	movw	r22, r28
    268c:	68 1b       	sub	r22, r24
    268e:	79 0b       	sbc	r23, r25
    2690:	88 27       	eor	r24, r24
    2692:	77 fd       	sbrc	r23, 7
    2694:	80 95       	com	r24
    2696:	98 2f       	mov	r25, r24
    2698:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    269c:	86 2e       	mov	r8, r22
    269e:	97 2e       	mov	r9, r23
    26a0:	a8 2e       	mov	r10, r24
    26a2:	b9 2e       	mov	r11, r25
	//Compute PID Output
	if(error<0)
    26a4:	dd 23       	and	r29, r29
    26a6:	0c f0       	brlt	.+2      	; 0x26aa <_Z8calc_PIDv+0xc8>
    26a8:	5b c0       	rjmp	.+182    	; 0x2760 <_Z8calc_PIDv+0x17e>
	{
		pidout = -kp * (pow(-error,Prop_power)) + ITerm + kd * dErr;
    26aa:	c0 90 88 00 	lds	r12, 0x0088
    26ae:	d0 90 89 00 	lds	r13, 0x0089
    26b2:	e0 90 8a 00 	lds	r14, 0x008A
    26b6:	f0 90 8b 00 	lds	r15, 0x008B
    26ba:	66 27       	eor	r22, r22
    26bc:	77 27       	eor	r23, r23
    26be:	6c 1b       	sub	r22, r28
    26c0:	7d 0b       	sbc	r23, r29
    26c2:	88 27       	eor	r24, r24
    26c4:	77 fd       	sbrc	r23, 7
    26c6:	80 95       	com	r24
    26c8:	98 2f       	mov	r25, r24
    26ca:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    26ce:	a7 01       	movw	r20, r14
    26d0:	96 01       	movw	r18, r12
    26d2:	0e 94 cc 1e 	call	0x3d98	; 0x3d98 <pow>
    26d6:	c0 90 98 00 	lds	r12, 0x0098
    26da:	d0 90 99 00 	lds	r13, 0x0099
    26de:	e0 90 9a 00 	lds	r14, 0x009A
    26e2:	f0 90 9b 00 	lds	r15, 0x009B
    26e6:	f7 fa       	bst	r15, 7
    26e8:	f0 94       	com	r15
    26ea:	f7 f8       	bld	r15, 7
    26ec:	f0 94       	com	r15
    26ee:	26 2f       	mov	r18, r22
    26f0:	37 2f       	mov	r19, r23
    26f2:	48 2f       	mov	r20, r24
    26f4:	59 2f       	mov	r21, r25
    26f6:	c7 01       	movw	r24, r14
    26f8:	b6 01       	movw	r22, r12
    26fa:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    26fe:	6b 01       	movw	r12, r22
    2700:	7c 01       	movw	r14, r24
    2702:	60 91 d1 01 	lds	r22, 0x01D1
    2706:	70 91 d2 01 	lds	r23, 0x01D2
    270a:	88 27       	eor	r24, r24
    270c:	77 fd       	sbrc	r23, 7
    270e:	80 95       	com	r24
    2710:	98 2f       	mov	r25, r24
    2712:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2716:	9b 01       	movw	r18, r22
    2718:	ac 01       	movw	r20, r24
    271a:	c7 01       	movw	r24, r14
    271c:	b6 01       	movw	r22, r12
    271e:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    2722:	6b 01       	movw	r12, r22
    2724:	7c 01       	movw	r14, r24
    2726:	20 91 90 00 	lds	r18, 0x0090
    272a:	30 91 91 00 	lds	r19, 0x0091
    272e:	40 91 92 00 	lds	r20, 0x0092
    2732:	50 91 93 00 	lds	r21, 0x0093
    2736:	68 2d       	mov	r22, r8
    2738:	79 2d       	mov	r23, r9
    273a:	8a 2d       	mov	r24, r10
    273c:	9b 2d       	mov	r25, r11
    273e:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    2742:	9b 01       	movw	r18, r22
    2744:	ac 01       	movw	r20, r24
    2746:	c7 01       	movw	r24, r14
    2748:	b6 01       	movw	r22, r12
    274a:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    274e:	60 93 c1 01 	sts	0x01C1, r22
    2752:	70 93 c2 01 	sts	0x01C2, r23
    2756:	80 93 c3 01 	sts	0x01C3, r24
    275a:	90 93 c4 01 	sts	0x01C4, r25
    275e:	46 c0       	rjmp	.+140    	; 0x27ec <_Z8calc_PIDv+0x20a>
	}
	else
	{
		pidout = kp * pow(error,Prop_power) + ITerm + kd * dErr;
    2760:	20 91 88 00 	lds	r18, 0x0088
    2764:	30 91 89 00 	lds	r19, 0x0089
    2768:	40 91 8a 00 	lds	r20, 0x008A
    276c:	50 91 8b 00 	lds	r21, 0x008B
    2770:	c7 01       	movw	r24, r14
    2772:	b6 01       	movw	r22, r12
    2774:	0e 94 cc 1e 	call	0x3d98	; 0x3d98 <pow>
    2778:	20 91 98 00 	lds	r18, 0x0098
    277c:	30 91 99 00 	lds	r19, 0x0099
    2780:	40 91 9a 00 	lds	r20, 0x009A
    2784:	50 91 9b 00 	lds	r21, 0x009B
    2788:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    278c:	6b 01       	movw	r12, r22
    278e:	7c 01       	movw	r14, r24
    2790:	60 91 d1 01 	lds	r22, 0x01D1
    2794:	70 91 d2 01 	lds	r23, 0x01D2
    2798:	88 27       	eor	r24, r24
    279a:	77 fd       	sbrc	r23, 7
    279c:	80 95       	com	r24
    279e:	98 2f       	mov	r25, r24
    27a0:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    27a4:	9b 01       	movw	r18, r22
    27a6:	ac 01       	movw	r20, r24
    27a8:	c7 01       	movw	r24, r14
    27aa:	b6 01       	movw	r22, r12
    27ac:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    27b0:	6b 01       	movw	r12, r22
    27b2:	7c 01       	movw	r14, r24
    27b4:	20 91 90 00 	lds	r18, 0x0090
    27b8:	30 91 91 00 	lds	r19, 0x0091
    27bc:	40 91 92 00 	lds	r20, 0x0092
    27c0:	50 91 93 00 	lds	r21, 0x0093
    27c4:	68 2d       	mov	r22, r8
    27c6:	79 2d       	mov	r23, r9
    27c8:	8a 2d       	mov	r24, r10
    27ca:	9b 2d       	mov	r25, r11
    27cc:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    27d0:	9b 01       	movw	r18, r22
    27d2:	ac 01       	movw	r20, r24
    27d4:	c7 01       	movw	r24, r14
    27d6:	b6 01       	movw	r22, r12
    27d8:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    27dc:	60 93 c1 01 	sts	0x01C1, r22
    27e0:	70 93 c2 01 	sts	0x01C2, r23
    27e4:	80 93 c3 01 	sts	0x01C3, r24
    27e8:	90 93 c4 01 	sts	0x01C4, r25
	}
	lasterror = error;
    27ec:	d0 93 d4 01 	sts	0x01D4, r29
    27f0:	c0 93 d3 01 	sts	0x01D3, r28
	return pidout;
}
    27f4:	50 91 c1 01 	lds	r21, 0x01C1
    27f8:	40 91 c2 01 	lds	r20, 0x01C2
    27fc:	30 91 c3 01 	lds	r19, 0x01C3
    2800:	20 91 c4 01 	lds	r18, 0x01C4
    2804:	65 2f       	mov	r22, r21
    2806:	74 2f       	mov	r23, r20
    2808:	83 2f       	mov	r24, r19
    280a:	92 2f       	mov	r25, r18
    280c:	df 91       	pop	r29
    280e:	cf 91       	pop	r28
    2810:	ff 90       	pop	r15
    2812:	ef 90       	pop	r14
    2814:	df 90       	pop	r13
    2816:	cf 90       	pop	r12
    2818:	bf 90       	pop	r11
    281a:	af 90       	pop	r10
    281c:	9f 90       	pop	r9
    281e:	8f 90       	pop	r8
    2820:	08 95       	ret

00002822 <_Z23check_and_calculate_pidv>:
void check_and_calculate_pid()
{
    2822:	cf 92       	push	r12
    2824:	df 92       	push	r13
    2826:	ef 92       	push	r14
    2828:	ff 92       	push	r15
    282a:	cf 93       	push	r28
    282c:	df 93       	push	r29
	if(running==1)
    282e:	80 91 80 00 	lds	r24, 0x0080
    2832:	90 91 81 00 	lds	r25, 0x0081
    2836:	81 30       	cpi	r24, 0x01	; 1
    2838:	91 05       	cpc	r25, r1
    283a:	09 f0       	breq	.+2      	; 0x283e <_Z23check_and_calculate_pidv+0x1c>
    283c:	ab c0       	rjmp	.+342    	; 0x2994 <_Z23check_and_calculate_pidv+0x172>
	{
		if(position>=10 && position<=80)
    283e:	80 91 98 01 	lds	r24, 0x0198
    2842:	90 91 99 01 	lds	r25, 0x0199
    2846:	9c 01       	movw	r18, r24
    2848:	2a 50       	subi	r18, 0x0A	; 10
    284a:	31 09       	sbc	r19, r1
    284c:	27 34       	cpi	r18, 0x47	; 71
    284e:	31 05       	cpc	r19, r1
    2850:	08 f0       	brcs	.+2      	; 0x2854 <_Z23check_and_calculate_pidv+0x32>
    2852:	82 c0       	rjmp	.+260    	; 0x2958 <_Z23check_and_calculate_pidv+0x136>
		{
			error=setPoint-position;
    2854:	20 91 86 00 	lds	r18, 0x0086
    2858:	30 91 87 00 	lds	r19, 0x0087
    285c:	a9 01       	movw	r20, r18
    285e:	48 1b       	sub	r20, r24
    2860:	59 0b       	sbc	r21, r25
    2862:	50 93 d6 01 	sts	0x01D6, r21
    2866:	40 93 d5 01 	sts	0x01D5, r20
			pid=calc_PID();
    286a:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <_Z8calc_PIDv>
    286e:	6b 01       	movw	r12, r22
    2870:	7c 01       	movw	r14, r24
    2872:	60 93 d7 01 	sts	0x01D7, r22
    2876:	70 93 d8 01 	sts	0x01D8, r23
    287a:	80 93 d9 01 	sts	0x01D9, r24
    287e:	90 93 da 01 	sts	0x01DA, r25
			output=straight+pid;
    2882:	60 91 82 00 	lds	r22, 0x0082
    2886:	70 91 83 00 	lds	r23, 0x0083
    288a:	88 27       	eor	r24, r24
    288c:	77 fd       	sbrc	r23, 7
    288e:	80 95       	com	r24
    2890:	98 2f       	mov	r25, r24
    2892:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2896:	9b 01       	movw	r18, r22
    2898:	ac 01       	movw	r20, r24
    289a:	c7 01       	movw	r24, r14
    289c:	b6 01       	movw	r22, r12
    289e:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    28a2:	46 2f       	mov	r20, r22
    28a4:	57 2f       	mov	r21, r23
    28a6:	68 2f       	mov	r22, r24
    28a8:	79 2f       	mov	r23, r25
    28aa:	40 93 b7 01 	sts	0x01B7, r20
    28ae:	50 93 b8 01 	sts	0x01B8, r21
    28b2:	60 93 b9 01 	sts	0x01B9, r22
    28b6:	70 93 ba 01 	sts	0x01BA, r23
			if(output<lower_limit)
    28ba:	60 91 ab 01 	lds	r22, 0x01AB
    28be:	70 91 ac 01 	lds	r23, 0x01AC
    28c2:	88 27       	eor	r24, r24
    28c4:	77 fd       	sbrc	r23, 7
    28c6:	80 95       	com	r24
    28c8:	98 2f       	mov	r25, r24
    28ca:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    28ce:	6b 01       	movw	r12, r22
    28d0:	7c 01       	movw	r14, r24
    28d2:	20 91 b7 01 	lds	r18, 0x01B7
    28d6:	30 91 b8 01 	lds	r19, 0x01B8
    28da:	40 91 b9 01 	lds	r20, 0x01B9
    28de:	50 91 ba 01 	lds	r21, 0x01BA
    28e2:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    28e6:	18 16       	cp	r1, r24
    28e8:	4c f4       	brge	.+18     	; 0x28fc <_Z23check_and_calculate_pidv+0xda>
			output=lower_limit;
    28ea:	c0 92 b7 01 	sts	0x01B7, r12
    28ee:	d0 92 b8 01 	sts	0x01B8, r13
    28f2:	e0 92 b9 01 	sts	0x01B9, r14
    28f6:	f0 92 ba 01 	sts	0x01BA, r15
    28fa:	20 c0       	rjmp	.+64     	; 0x293c <_Z23check_and_calculate_pidv+0x11a>
			else if(output>upper_limit)
    28fc:	60 91 ad 01 	lds	r22, 0x01AD
    2900:	70 91 ae 01 	lds	r23, 0x01AE
    2904:	88 27       	eor	r24, r24
    2906:	77 fd       	sbrc	r23, 7
    2908:	80 95       	com	r24
    290a:	98 2f       	mov	r25, r24
    290c:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2910:	6b 01       	movw	r12, r22
    2912:	7c 01       	movw	r14, r24
    2914:	20 91 b7 01 	lds	r18, 0x01B7
    2918:	30 91 b8 01 	lds	r19, 0x01B8
    291c:	40 91 b9 01 	lds	r20, 0x01B9
    2920:	50 91 ba 01 	lds	r21, 0x01BA
    2924:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    2928:	88 23       	and	r24, r24
    292a:	44 f4       	brge	.+16     	; 0x293c <_Z23check_and_calculate_pidv+0x11a>
			output=upper_limit;
    292c:	c0 92 b7 01 	sts	0x01B7, r12
    2930:	d0 92 b8 01 	sts	0x01B8, r13
    2934:	e0 92 b9 01 	sts	0x01B9, r14
    2938:	f0 92 ba 01 	sts	0x01BA, r15
			goal_position(output);
    293c:	60 91 b7 01 	lds	r22, 0x01B7
    2940:	70 91 b8 01 	lds	r23, 0x01B8
    2944:	80 91 b9 01 	lds	r24, 0x01B9
    2948:	90 91 ba 01 	lds	r25, 0x01BA
    294c:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    2950:	cb 01       	movw	r24, r22
    2952:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
    2956:	20 c2       	rjmp	.+1088   	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
			
		}
		else
		{
			output=last_output;
    2958:	80 91 b3 01 	lds	r24, 0x01B3
    295c:	90 91 b4 01 	lds	r25, 0x01B4
    2960:	a0 91 b5 01 	lds	r26, 0x01B5
    2964:	b0 91 b6 01 	lds	r27, 0x01B6
    2968:	80 93 b7 01 	sts	0x01B7, r24
    296c:	90 93 b8 01 	sts	0x01B8, r25
    2970:	a0 93 b9 01 	sts	0x01B9, r26
    2974:	b0 93 ba 01 	sts	0x01BA, r27
			goal_position(output);
    2978:	60 91 b7 01 	lds	r22, 0x01B7
    297c:	70 91 b8 01 	lds	r23, 0x01B8
    2980:	80 91 b9 01 	lds	r24, 0x01B9
    2984:	90 91 ba 01 	lds	r25, 0x01BA
    2988:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    298c:	cb 01       	movw	r24, r22
    298e:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
    2992:	02 c2       	rjmp	.+1028   	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
		}
	}
		else if(running==4)
    2994:	84 30       	cpi	r24, 0x04	; 4
    2996:	91 05       	cpc	r25, r1
    2998:	09 f0       	breq	.+2      	; 0x299c <_Z23check_and_calculate_pidv+0x17a>
    299a:	ae c0       	rjmp	.+348    	; 0x2af8 <_Z23check_and_calculate_pidv+0x2d6>
		{
			if(position>=10 && position<=80)
    299c:	80 91 98 01 	lds	r24, 0x0198
    29a0:	90 91 99 01 	lds	r25, 0x0199
    29a4:	0a 97       	sbiw	r24, 0x0a	; 10
    29a6:	87 34       	cpi	r24, 0x47	; 71
    29a8:	91 05       	cpc	r25, r1
    29aa:	08 f0       	brcs	.+2      	; 0x29ae <_Z23check_and_calculate_pidv+0x18c>
    29ac:	87 c0       	rjmp	.+270    	; 0x2abc <_Z23check_and_calculate_pidv+0x29a>
			{
				receive_servo_angle();
    29ae:	0e 94 68 09 	call	0x12d0	; 0x12d0 <_Z19receive_servo_anglev>
				error=setPoint-position;
    29b2:	80 91 86 00 	lds	r24, 0x0086
    29b6:	90 91 87 00 	lds	r25, 0x0087
    29ba:	20 91 98 01 	lds	r18, 0x0198
    29be:	30 91 99 01 	lds	r19, 0x0199
    29c2:	82 1b       	sub	r24, r18
    29c4:	93 0b       	sbc	r25, r19
    29c6:	90 93 d6 01 	sts	0x01D6, r25
    29ca:	80 93 d5 01 	sts	0x01D5, r24
				pid=calc_PID();
    29ce:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <_Z8calc_PIDv>
    29d2:	6b 01       	movw	r12, r22
    29d4:	7c 01       	movw	r14, r24
    29d6:	60 93 d7 01 	sts	0x01D7, r22
    29da:	70 93 d8 01 	sts	0x01D8, r23
    29de:	80 93 d9 01 	sts	0x01D9, r24
    29e2:	90 93 da 01 	sts	0x01DA, r25
				output=angle+pid;
    29e6:	60 91 5b 02 	lds	r22, 0x025B
    29ea:	70 91 5c 02 	lds	r23, 0x025C
    29ee:	88 27       	eor	r24, r24
    29f0:	77 fd       	sbrc	r23, 7
    29f2:	80 95       	com	r24
    29f4:	98 2f       	mov	r25, r24
    29f6:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    29fa:	9b 01       	movw	r18, r22
    29fc:	ac 01       	movw	r20, r24
    29fe:	c7 01       	movw	r24, r14
    2a00:	b6 01       	movw	r22, r12
    2a02:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    2a06:	46 2f       	mov	r20, r22
    2a08:	57 2f       	mov	r21, r23
    2a0a:	68 2f       	mov	r22, r24
    2a0c:	79 2f       	mov	r23, r25
    2a0e:	40 93 b7 01 	sts	0x01B7, r20
    2a12:	50 93 b8 01 	sts	0x01B8, r21
    2a16:	60 93 b9 01 	sts	0x01B9, r22
    2a1a:	70 93 ba 01 	sts	0x01BA, r23
				if(output<lower_limit)
    2a1e:	60 91 ab 01 	lds	r22, 0x01AB
    2a22:	70 91 ac 01 	lds	r23, 0x01AC
    2a26:	88 27       	eor	r24, r24
    2a28:	77 fd       	sbrc	r23, 7
    2a2a:	80 95       	com	r24
    2a2c:	98 2f       	mov	r25, r24
    2a2e:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2a32:	6b 01       	movw	r12, r22
    2a34:	7c 01       	movw	r14, r24
    2a36:	20 91 b7 01 	lds	r18, 0x01B7
    2a3a:	30 91 b8 01 	lds	r19, 0x01B8
    2a3e:	40 91 b9 01 	lds	r20, 0x01B9
    2a42:	50 91 ba 01 	lds	r21, 0x01BA
    2a46:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    2a4a:	18 16       	cp	r1, r24
    2a4c:	4c f4       	brge	.+18     	; 0x2a60 <_Z23check_and_calculate_pidv+0x23e>
				output=lower_limit;
    2a4e:	c0 92 b7 01 	sts	0x01B7, r12
    2a52:	d0 92 b8 01 	sts	0x01B8, r13
    2a56:	e0 92 b9 01 	sts	0x01B9, r14
    2a5a:	f0 92 ba 01 	sts	0x01BA, r15
    2a5e:	20 c0       	rjmp	.+64     	; 0x2aa0 <_Z23check_and_calculate_pidv+0x27e>
				else if(output>upper_limit)
    2a60:	60 91 ad 01 	lds	r22, 0x01AD
    2a64:	70 91 ae 01 	lds	r23, 0x01AE
    2a68:	88 27       	eor	r24, r24
    2a6a:	77 fd       	sbrc	r23, 7
    2a6c:	80 95       	com	r24
    2a6e:	98 2f       	mov	r25, r24
    2a70:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2a74:	6b 01       	movw	r12, r22
    2a76:	7c 01       	movw	r14, r24
    2a78:	20 91 b7 01 	lds	r18, 0x01B7
    2a7c:	30 91 b8 01 	lds	r19, 0x01B8
    2a80:	40 91 b9 01 	lds	r20, 0x01B9
    2a84:	50 91 ba 01 	lds	r21, 0x01BA
    2a88:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    2a8c:	88 23       	and	r24, r24
    2a8e:	44 f4       	brge	.+16     	; 0x2aa0 <_Z23check_and_calculate_pidv+0x27e>
				output=upper_limit;
    2a90:	c0 92 b7 01 	sts	0x01B7, r12
    2a94:	d0 92 b8 01 	sts	0x01B8, r13
    2a98:	e0 92 b9 01 	sts	0x01B9, r14
    2a9c:	f0 92 ba 01 	sts	0x01BA, r15
				goal_position(output);
    2aa0:	60 91 b7 01 	lds	r22, 0x01B7
    2aa4:	70 91 b8 01 	lds	r23, 0x01B8
    2aa8:	80 91 b9 01 	lds	r24, 0x01B9
    2aac:	90 91 ba 01 	lds	r25, 0x01BA
    2ab0:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    2ab4:	cb 01       	movw	r24, r22
    2ab6:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
    2aba:	6e c1       	rjmp	.+732    	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
				
			}
			else
			{
				output=last_output;
    2abc:	80 91 b3 01 	lds	r24, 0x01B3
    2ac0:	90 91 b4 01 	lds	r25, 0x01B4
    2ac4:	a0 91 b5 01 	lds	r26, 0x01B5
    2ac8:	b0 91 b6 01 	lds	r27, 0x01B6
    2acc:	80 93 b7 01 	sts	0x01B7, r24
    2ad0:	90 93 b8 01 	sts	0x01B8, r25
    2ad4:	a0 93 b9 01 	sts	0x01B9, r26
    2ad8:	b0 93 ba 01 	sts	0x01BA, r27
				goal_position(output);
    2adc:	60 91 b7 01 	lds	r22, 0x01B7
    2ae0:	70 91 b8 01 	lds	r23, 0x01B8
    2ae4:	80 91 b9 01 	lds	r24, 0x01B9
    2ae8:	90 91 ba 01 	lds	r25, 0x01BA
    2aec:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    2af0:	cb 01       	movw	r24, r22
    2af2:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
    2af6:	50 c1       	rjmp	.+672    	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
			}
		}

	else if(running==3)
    2af8:	03 97       	sbiw	r24, 0x03	; 3
    2afa:	09 f0       	breq	.+2      	; 0x2afe <_Z23check_and_calculate_pidv+0x2dc>
    2afc:	4d c1       	rjmp	.+666    	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
	{
		if(position>=10 && position<=80)
    2afe:	80 91 98 01 	lds	r24, 0x0198
    2b02:	90 91 99 01 	lds	r25, 0x0199
    2b06:	9c 01       	movw	r18, r24
    2b08:	2a 50       	subi	r18, 0x0A	; 10
    2b0a:	31 09       	sbc	r19, r1
    2b0c:	27 34       	cpi	r18, 0x47	; 71
    2b0e:	31 05       	cpc	r19, r1
    2b10:	08 f0       	brcs	.+2      	; 0x2b14 <_Z23check_and_calculate_pidv+0x2f2>
    2b12:	ab c0       	rjmp	.+342    	; 0x2c6a <_Z23check_and_calculate_pidv+0x448>
		{
			error=setPoint-position;
    2b14:	20 91 86 00 	lds	r18, 0x0086
    2b18:	30 91 87 00 	lds	r19, 0x0087
    2b1c:	a9 01       	movw	r20, r18
    2b1e:	48 1b       	sub	r20, r24
    2b20:	59 0b       	sbc	r21, r25
    2b22:	50 93 d6 01 	sts	0x01D6, r21
    2b26:	40 93 d5 01 	sts	0x01D5, r20
			pid=calc_PID();
    2b2a:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <_Z8calc_PIDv>
    2b2e:	6b 01       	movw	r12, r22
    2b30:	7c 01       	movw	r14, r24
    2b32:	60 93 d7 01 	sts	0x01D7, r22
    2b36:	70 93 d8 01 	sts	0x01D8, r23
    2b3a:	80 93 d9 01 	sts	0x01D9, r24
    2b3e:	90 93 da 01 	sts	0x01DA, r25
			if(track==0)
    2b42:	80 91 5e 01 	lds	r24, 0x015E
    2b46:	90 91 5f 01 	lds	r25, 0x015F
    2b4a:	00 97       	sbiw	r24, 0x00	; 0
    2b4c:	f9 f4       	brne	.+62     	; 0x2b8c <_Z23check_and_calculate_pidv+0x36a>
				output=straight-25+pid;
    2b4e:	60 91 82 00 	lds	r22, 0x0082
    2b52:	70 91 83 00 	lds	r23, 0x0083
    2b56:	69 51       	subi	r22, 0x19	; 25
    2b58:	71 09       	sbc	r23, r1
    2b5a:	88 27       	eor	r24, r24
    2b5c:	77 fd       	sbrc	r23, 7
    2b5e:	80 95       	com	r24
    2b60:	98 2f       	mov	r25, r24
    2b62:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2b66:	9b 01       	movw	r18, r22
    2b68:	ac 01       	movw	r20, r24
    2b6a:	c7 01       	movw	r24, r14
    2b6c:	b6 01       	movw	r22, r12
    2b6e:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    2b72:	46 2f       	mov	r20, r22
    2b74:	57 2f       	mov	r21, r23
    2b76:	68 2f       	mov	r22, r24
    2b78:	79 2f       	mov	r23, r25
    2b7a:	40 93 b7 01 	sts	0x01B7, r20
    2b7e:	50 93 b8 01 	sts	0x01B8, r21
    2b82:	60 93 b9 01 	sts	0x01B9, r22
    2b86:	70 93 ba 01 	sts	0x01BA, r23
    2b8a:	20 c0       	rjmp	.+64     	; 0x2bcc <_Z23check_and_calculate_pidv+0x3aa>
			else if (track==1)
    2b8c:	01 97       	sbiw	r24, 0x01	; 1
    2b8e:	f1 f4       	brne	.+60     	; 0x2bcc <_Z23check_and_calculate_pidv+0x3aa>
				output=straight+25+pid;
    2b90:	60 91 82 00 	lds	r22, 0x0082
    2b94:	70 91 83 00 	lds	r23, 0x0083
    2b98:	67 5e       	subi	r22, 0xE7	; 231
    2b9a:	7f 4f       	sbci	r23, 0xFF	; 255
    2b9c:	88 27       	eor	r24, r24
    2b9e:	77 fd       	sbrc	r23, 7
    2ba0:	80 95       	com	r24
    2ba2:	98 2f       	mov	r25, r24
    2ba4:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2ba8:	9b 01       	movw	r18, r22
    2baa:	ac 01       	movw	r20, r24
    2bac:	c7 01       	movw	r24, r14
    2bae:	b6 01       	movw	r22, r12
    2bb0:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    2bb4:	46 2f       	mov	r20, r22
    2bb6:	57 2f       	mov	r21, r23
    2bb8:	68 2f       	mov	r22, r24
    2bba:	79 2f       	mov	r23, r25
    2bbc:	40 93 b7 01 	sts	0x01B7, r20
    2bc0:	50 93 b8 01 	sts	0x01B8, r21
    2bc4:	60 93 b9 01 	sts	0x01B9, r22
    2bc8:	70 93 ba 01 	sts	0x01BA, r23
			if(output<lower_limit)
    2bcc:	60 91 ab 01 	lds	r22, 0x01AB
    2bd0:	70 91 ac 01 	lds	r23, 0x01AC
    2bd4:	88 27       	eor	r24, r24
    2bd6:	77 fd       	sbrc	r23, 7
    2bd8:	80 95       	com	r24
    2bda:	98 2f       	mov	r25, r24
    2bdc:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2be0:	6b 01       	movw	r12, r22
    2be2:	7c 01       	movw	r14, r24
    2be4:	20 91 b7 01 	lds	r18, 0x01B7
    2be8:	30 91 b8 01 	lds	r19, 0x01B8
    2bec:	40 91 b9 01 	lds	r20, 0x01B9
    2bf0:	50 91 ba 01 	lds	r21, 0x01BA
    2bf4:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    2bf8:	18 16       	cp	r1, r24
    2bfa:	4c f4       	brge	.+18     	; 0x2c0e <_Z23check_and_calculate_pidv+0x3ec>
				output=lower_limit;
    2bfc:	c0 92 b7 01 	sts	0x01B7, r12
    2c00:	d0 92 b8 01 	sts	0x01B8, r13
    2c04:	e0 92 b9 01 	sts	0x01B9, r14
    2c08:	f0 92 ba 01 	sts	0x01BA, r15
    2c0c:	20 c0       	rjmp	.+64     	; 0x2c4e <_Z23check_and_calculate_pidv+0x42c>
			else if(output>upper_limit)
    2c0e:	60 91 ad 01 	lds	r22, 0x01AD
    2c12:	70 91 ae 01 	lds	r23, 0x01AE
    2c16:	88 27       	eor	r24, r24
    2c18:	77 fd       	sbrc	r23, 7
    2c1a:	80 95       	com	r24
    2c1c:	98 2f       	mov	r25, r24
    2c1e:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2c22:	6b 01       	movw	r12, r22
    2c24:	7c 01       	movw	r14, r24
    2c26:	20 91 b7 01 	lds	r18, 0x01B7
    2c2a:	30 91 b8 01 	lds	r19, 0x01B8
    2c2e:	40 91 b9 01 	lds	r20, 0x01B9
    2c32:	50 91 ba 01 	lds	r21, 0x01BA
    2c36:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    2c3a:	88 23       	and	r24, r24
    2c3c:	44 f4       	brge	.+16     	; 0x2c4e <_Z23check_and_calculate_pidv+0x42c>
				output=upper_limit;
    2c3e:	c0 92 b7 01 	sts	0x01B7, r12
    2c42:	d0 92 b8 01 	sts	0x01B8, r13
    2c46:	e0 92 b9 01 	sts	0x01B9, r14
    2c4a:	f0 92 ba 01 	sts	0x01BA, r15
			goal_position(output);
    2c4e:	60 91 b7 01 	lds	r22, 0x01B7
    2c52:	70 91 b8 01 	lds	r23, 0x01B8
    2c56:	80 91 b9 01 	lds	r24, 0x01B9
    2c5a:	90 91 ba 01 	lds	r25, 0x01BA
    2c5e:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    2c62:	cb 01       	movw	r24, r22
    2c64:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
    2c68:	1d c0       	rjmp	.+58     	; 0x2ca4 <_Z23check_and_calculate_pidv+0x482>
			
		}
		else
		{
			output=last_output;
    2c6a:	80 91 b3 01 	lds	r24, 0x01B3
    2c6e:	90 91 b4 01 	lds	r25, 0x01B4
    2c72:	a0 91 b5 01 	lds	r26, 0x01B5
    2c76:	b0 91 b6 01 	lds	r27, 0x01B6
    2c7a:	80 93 b7 01 	sts	0x01B7, r24
    2c7e:	90 93 b8 01 	sts	0x01B8, r25
    2c82:	a0 93 b9 01 	sts	0x01B9, r26
    2c86:	b0 93 ba 01 	sts	0x01BA, r27
			goal_position(output);
    2c8a:	60 91 b7 01 	lds	r22, 0x01B7
    2c8e:	70 91 b8 01 	lds	r23, 0x01B8
    2c92:	80 91 b9 01 	lds	r24, 0x01B9
    2c96:	90 91 ba 01 	lds	r25, 0x01BA
    2c9a:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    2c9e:	cb 01       	movw	r24, r22
    2ca0:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
		}
		if(track==1)
    2ca4:	80 91 5e 01 	lds	r24, 0x015E
    2ca8:	90 91 5f 01 	lds	r25, 0x015F
    2cac:	81 30       	cpi	r24, 0x01	; 1
    2cae:	91 05       	cpc	r25, r1
    2cb0:	91 f5       	brne	.+100    	; 0x2d16 <_Z23check_and_calculate_pidv+0x4f4>
		{
			if(output>=straight && output<=straight+25)
    2cb2:	c0 91 82 00 	lds	r28, 0x0082
    2cb6:	d0 91 83 00 	lds	r29, 0x0083
    2cba:	c0 90 b7 01 	lds	r12, 0x01B7
    2cbe:	d0 90 b8 01 	lds	r13, 0x01B8
    2cc2:	e0 90 b9 01 	lds	r14, 0x01B9
    2cc6:	f0 90 ba 01 	lds	r15, 0x01BA
    2cca:	be 01       	movw	r22, r28
    2ccc:	88 27       	eor	r24, r24
    2cce:	77 fd       	sbrc	r23, 7
    2cd0:	80 95       	com	r24
    2cd2:	98 2f       	mov	r25, r24
    2cd4:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2cd8:	a7 01       	movw	r20, r14
    2cda:	96 01       	movw	r18, r12
    2cdc:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    2ce0:	18 16       	cp	r1, r24
    2ce2:	0c f4       	brge	.+2      	; 0x2ce6 <_Z23check_and_calculate_pidv+0x4c4>
    2ce4:	59 c0       	rjmp	.+178    	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
    2ce6:	c0 90 b7 01 	lds	r12, 0x01B7
    2cea:	d0 90 b8 01 	lds	r13, 0x01B8
    2cee:	e0 90 b9 01 	lds	r14, 0x01B9
    2cf2:	f0 90 ba 01 	lds	r15, 0x01BA
    2cf6:	be 01       	movw	r22, r28
    2cf8:	67 5e       	subi	r22, 0xE7	; 231
    2cfa:	7f 4f       	sbci	r23, 0xFF	; 255
    2cfc:	88 27       	eor	r24, r24
    2cfe:	77 fd       	sbrc	r23, 7
    2d00:	80 95       	com	r24
    2d02:	98 2f       	mov	r25, r24
    2d04:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2d08:	a7 01       	movw	r20, r14
    2d0a:	96 01       	movw	r18, r12
    2d0c:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    2d10:	88 23       	and	r24, r24
    2d12:	ac f5       	brge	.+106    	; 0x2d7e <_Z23check_and_calculate_pidv+0x55c>
    2d14:	41 c0       	rjmp	.+130    	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
			{
				running=1;
			}
		}
		else if (track==0)
    2d16:	89 2b       	or	r24, r25
    2d18:	09 f0       	breq	.+2      	; 0x2d1c <_Z23check_and_calculate_pidv+0x4fa>
    2d1a:	3e c0       	rjmp	.+124    	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
		{
			if(output>=(straight-25) && output<=straight)
    2d1c:	c0 91 82 00 	lds	r28, 0x0082
    2d20:	d0 91 83 00 	lds	r29, 0x0083
    2d24:	c0 90 b7 01 	lds	r12, 0x01B7
    2d28:	d0 90 b8 01 	lds	r13, 0x01B8
    2d2c:	e0 90 b9 01 	lds	r14, 0x01B9
    2d30:	f0 90 ba 01 	lds	r15, 0x01BA
    2d34:	be 01       	movw	r22, r28
    2d36:	69 51       	subi	r22, 0x19	; 25
    2d38:	71 09       	sbc	r23, r1
    2d3a:	88 27       	eor	r24, r24
    2d3c:	77 fd       	sbrc	r23, 7
    2d3e:	80 95       	com	r24
    2d40:	98 2f       	mov	r25, r24
    2d42:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2d46:	a7 01       	movw	r20, r14
    2d48:	96 01       	movw	r18, r12
    2d4a:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    2d4e:	18 16       	cp	r1, r24
    2d50:	1c f1       	brlt	.+70     	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
    2d52:	c0 90 b7 01 	lds	r12, 0x01B7
    2d56:	d0 90 b8 01 	lds	r13, 0x01B8
    2d5a:	e0 90 b9 01 	lds	r14, 0x01B9
    2d5e:	f0 90 ba 01 	lds	r15, 0x01BA
    2d62:	be 01       	movw	r22, r28
    2d64:	88 27       	eor	r24, r24
    2d66:	77 fd       	sbrc	r23, 7
    2d68:	80 95       	com	r24
    2d6a:	98 2f       	mov	r25, r24
    2d6c:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2d70:	a7 01       	movw	r20, r14
    2d72:	96 01       	movw	r18, r12
    2d74:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    2d78:	88 23       	and	r24, r24
    2d7a:	44 f4       	brge	.+16     	; 0x2d8c <_Z23check_and_calculate_pidv+0x56a>
    2d7c:	0d c0       	rjmp	.+26     	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
		}
		if(track==1)
		{
			if(output>=straight && output<=straight+25)
			{
				running=1;
    2d7e:	81 e0       	ldi	r24, 0x01	; 1
    2d80:	90 e0       	ldi	r25, 0x00	; 0
    2d82:	90 93 81 00 	sts	0x0081, r25
    2d86:	80 93 80 00 	sts	0x0080, r24
    2d8a:	06 c0       	rjmp	.+12     	; 0x2d98 <_Z23check_and_calculate_pidv+0x576>
		}
		else if (track==0)
		{
			if(output>=(straight-25) && output<=straight)
			{
				running=1;
    2d8c:	81 e0       	ldi	r24, 0x01	; 1
    2d8e:	90 e0       	ldi	r25, 0x00	; 0
    2d90:	90 93 81 00 	sts	0x0081, r25
    2d94:	80 93 80 00 	sts	0x0080, r24
			}
		}
	}
}
    2d98:	df 91       	pop	r29
    2d9a:	cf 91       	pop	r28
    2d9c:	ff 90       	pop	r15
    2d9e:	ef 90       	pop	r14
    2da0:	df 90       	pop	r13
    2da2:	cf 90       	pop	r12
    2da4:	08 95       	ret

00002da6 <_Z25river_navigation_optionalv>:
			}
		}
}

void river_navigation_optional()
{
    2da6:	2f 92       	push	r2
    2da8:	3f 92       	push	r3
    2daa:	4f 92       	push	r4
    2dac:	5f 92       	push	r5
    2dae:	6f 92       	push	r6
    2db0:	7f 92       	push	r7
    2db2:	8f 92       	push	r8
    2db4:	9f 92       	push	r9
    2db6:	af 92       	push	r10
    2db8:	bf 92       	push	r11
    2dba:	cf 92       	push	r12
    2dbc:	df 92       	push	r13
    2dbe:	ef 92       	push	r14
    2dc0:	ff 92       	push	r15
    2dc2:	0f 93       	push	r16
    2dc4:	1f 93       	push	r17
    2dc6:	cf 93       	push	r28
    2dc8:	df 93       	push	r29
	if (river_entry==1 && counter >=dist_check && encoder_flag==0)
    2dca:	80 91 72 01 	lds	r24, 0x0172
    2dce:	90 91 73 01 	lds	r25, 0x0173
    2dd2:	01 97       	sbiw	r24, 0x01	; 1
    2dd4:	09 f0       	breq	.+2      	; 0x2dd8 <_Z25river_navigation_optionalv+0x32>
    2dd6:	75 c1       	rjmp	.+746    	; 0x30c2 <_Z25river_navigation_optionalv+0x31c>
    2dd8:	20 91 1d 02 	lds	r18, 0x021D
    2ddc:	30 91 1e 02 	lds	r19, 0x021E
    2de0:	80 91 cf 01 	lds	r24, 0x01CF
    2de4:	90 91 d0 01 	lds	r25, 0x01D0
    2de8:	28 17       	cp	r18, r24
    2dea:	39 07       	cpc	r19, r25
    2dec:	0c f4       	brge	.+2      	; 0x2df0 <_Z25river_navigation_optionalv+0x4a>
    2dee:	69 c1       	rjmp	.+722    	; 0x30c2 <_Z25river_navigation_optionalv+0x31c>
    2df0:	80 91 a7 01 	lds	r24, 0x01A7
    2df4:	90 91 a8 01 	lds	r25, 0x01A8
    2df8:	89 2b       	or	r24, r25
    2dfa:	09 f4       	brne	.+2      	; 0x2dfe <_Z25river_navigation_optionalv+0x58>
    2dfc:	83 c1       	rjmp	.+774    	; 0x3104 <_Z25river_navigation_optionalv+0x35e>
    2dfe:	61 c1       	rjmp	.+706    	; 0x30c2 <_Z25river_navigation_optionalv+0x31c>
		 }
		 while(river_loop)
		 {
			 //if(compass_flag>=1)
			 //{
				 headingDegrees=getHeading();
    2e00:	0e 94 b9 06 	call	0xd72	; 0xd72 <_Z10getHeadingv>
    2e04:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    2e08:	9b 01       	movw	r18, r22
    2e0a:	70 93 06 02 	sts	0x0206, r23
    2e0e:	60 93 05 02 	sts	0x0205, r22
 				 //compass_flag=0;
			 //}
			encoder_flag=2;
    2e12:	d0 93 a8 01 	sts	0x01A8, r29
    2e16:	c0 93 a7 01 	sts	0x01A7, r28
			if(track==0)
    2e1a:	80 91 5e 01 	lds	r24, 0x015E
    2e1e:	90 91 5f 01 	lds	r25, 0x015F
    2e22:	00 97       	sbiw	r24, 0x00	; 0
    2e24:	59 f4       	brne	.+22     	; 0x2e3c <_Z25river_navigation_optionalv+0x96>
				compass_head_diff=headingDegrees-river_compass_angle;
    2e26:	80 91 7c 01 	lds	r24, 0x017C
    2e2a:	90 91 7d 01 	lds	r25, 0x017D
    2e2e:	28 1b       	sub	r18, r24
    2e30:	39 0b       	sbc	r19, r25
    2e32:	30 93 7f 01 	sts	0x017F, r19
    2e36:	20 93 7e 01 	sts	0x017E, r18
    2e3a:	0c c0       	rjmp	.+24     	; 0x2e54 <_Z25river_navigation_optionalv+0xae>
				//compass_head_diff=headingDegrees-(axis+180);
			else if(track==1)
    2e3c:	01 97       	sbiw	r24, 0x01	; 1
    2e3e:	51 f4       	brne	.+20     	; 0x2e54 <_Z25river_navigation_optionalv+0xae>
				compass_head_diff=headingDegrees-river_compass_angle;
    2e40:	80 91 7c 01 	lds	r24, 0x017C
    2e44:	90 91 7d 01 	lds	r25, 0x017D
    2e48:	28 1b       	sub	r18, r24
    2e4a:	39 0b       	sbc	r19, r25
    2e4c:	30 93 7f 01 	sts	0x017F, r19
    2e50:	20 93 7e 01 	sts	0x017E, r18
				//compass_head_diff=headingDegrees-(axis);
			output=(int)(straight+(compass_head_diff)*0.8);
    2e54:	80 90 82 00 	lds	r8, 0x0082
    2e58:	90 90 83 00 	lds	r9, 0x0083
    2e5c:	b4 01       	movw	r22, r8
    2e5e:	88 27       	eor	r24, r24
    2e60:	77 fd       	sbrc	r23, 7
    2e62:	80 95       	com	r24
    2e64:	98 2f       	mov	r25, r24
    2e66:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2e6a:	2b 01       	movw	r4, r22
    2e6c:	3c 01       	movw	r6, r24
    2e6e:	60 91 7e 01 	lds	r22, 0x017E
    2e72:	70 91 7f 01 	lds	r23, 0x017F
    2e76:	88 27       	eor	r24, r24
    2e78:	77 fd       	sbrc	r23, 7
    2e7a:	80 95       	com	r24
    2e7c:	98 2f       	mov	r25, r24
    2e7e:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2e82:	2d ec       	ldi	r18, 0xCD	; 205
    2e84:	3c ec       	ldi	r19, 0xCC	; 204
    2e86:	4c e4       	ldi	r20, 0x4C	; 76
    2e88:	5f e3       	ldi	r21, 0x3F	; 63
    2e8a:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    2e8e:	9b 01       	movw	r18, r22
    2e90:	ac 01       	movw	r20, r24
    2e92:	c3 01       	movw	r24, r6
    2e94:	b2 01       	movw	r22, r4
    2e96:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    2e9a:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    2e9e:	88 27       	eor	r24, r24
    2ea0:	77 fd       	sbrc	r23, 7
    2ea2:	80 95       	com	r24
    2ea4:	98 2f       	mov	r25, r24
    2ea6:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2eaa:	60 93 b7 01 	sts	0x01B7, r22
    2eae:	70 93 b8 01 	sts	0x01B8, r23
    2eb2:	80 93 b9 01 	sts	0x01B9, r24
    2eb6:	90 93 ba 01 	sts	0x01BA, r25
			 if(output>(straight+60))
    2eba:	b4 01       	movw	r22, r8
    2ebc:	64 5c       	subi	r22, 0xC4	; 196
    2ebe:	7f 4f       	sbci	r23, 0xFF	; 255
    2ec0:	88 27       	eor	r24, r24
    2ec2:	77 fd       	sbrc	r23, 7
    2ec4:	80 95       	com	r24
    2ec6:	98 2f       	mov	r25, r24
    2ec8:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2ecc:	2b 01       	movw	r4, r22
    2ece:	3c 01       	movw	r6, r24
    2ed0:	20 91 b7 01 	lds	r18, 0x01B7
    2ed4:	30 91 b8 01 	lds	r19, 0x01B8
    2ed8:	40 91 b9 01 	lds	r20, 0x01B9
    2edc:	50 91 ba 01 	lds	r21, 0x01BA
    2ee0:	0e 94 ae 1c 	call	0x395c	; 0x395c <__cmpsf2>
    2ee4:	88 23       	and	r24, r24
    2ee6:	4c f4       	brge	.+18     	; 0x2efa <_Z25river_navigation_optionalv+0x154>
				output=(straight+60);
    2ee8:	40 92 b7 01 	sts	0x01B7, r4
    2eec:	50 92 b8 01 	sts	0x01B8, r5
    2ef0:	60 92 b9 01 	sts	0x01B9, r6
    2ef4:	70 92 ba 01 	sts	0x01BA, r7
    2ef8:	1f c0       	rjmp	.+62     	; 0x2f38 <_Z25river_navigation_optionalv+0x192>
			else if (output<(straight-60))
    2efa:	b4 01       	movw	r22, r8
    2efc:	6c 53       	subi	r22, 0x3C	; 60
    2efe:	71 09       	sbc	r23, r1
    2f00:	88 27       	eor	r24, r24
    2f02:	77 fd       	sbrc	r23, 7
    2f04:	80 95       	com	r24
    2f06:	98 2f       	mov	r25, r24
    2f08:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    2f0c:	2b 01       	movw	r4, r22
    2f0e:	3c 01       	movw	r6, r24
    2f10:	20 91 b7 01 	lds	r18, 0x01B7
    2f14:	30 91 b8 01 	lds	r19, 0x01B8
    2f18:	40 91 b9 01 	lds	r20, 0x01B9
    2f1c:	50 91 ba 01 	lds	r21, 0x01BA
    2f20:	0e 94 5e 1e 	call	0x3cbc	; 0x3cbc <__gesf2>
    2f24:	18 16       	cp	r1, r24
    2f26:	44 f4       	brge	.+16     	; 0x2f38 <_Z25river_navigation_optionalv+0x192>
				output=(straight-60);
    2f28:	40 92 b7 01 	sts	0x01B7, r4
    2f2c:	50 92 b8 01 	sts	0x01B8, r5
    2f30:	60 92 b9 01 	sts	0x01B9, r6
    2f34:	70 92 ba 01 	sts	0x01BA, r7
			 goal_position(output);
    2f38:	60 91 b7 01 	lds	r22, 0x01B7
    2f3c:	70 91 b8 01 	lds	r23, 0x01B8
    2f40:	80 91 b9 01 	lds	r24, 0x01B9
    2f44:	90 91 ba 01 	lds	r25, 0x01BA
    2f48:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <__fixunssfsi>
    2f4c:	cb 01       	movw	r24, r22
    2f4e:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
			 if(counter>=(1150) && encoder_flag==2)//700
    2f52:	80 91 1d 02 	lds	r24, 0x021D
    2f56:	90 91 1e 02 	lds	r25, 0x021E
    2f5a:	8e 37       	cpi	r24, 0x7E	; 126
    2f5c:	94 40       	sbci	r25, 0x04	; 4
    2f5e:	0c f4       	brge	.+2      	; 0x2f62 <_Z25river_navigation_optionalv+0x1bc>
    2f60:	66 c0       	rjmp	.+204    	; 0x302e <_Z25river_navigation_optionalv+0x288>
    2f62:	80 91 a7 01 	lds	r24, 0x01A7
    2f66:	90 91 a8 01 	lds	r25, 0x01A8
    2f6a:	02 97       	sbiw	r24, 0x02	; 2
    2f6c:	09 f0       	breq	.+2      	; 0x2f70 <_Z25river_navigation_optionalv+0x1ca>
    2f6e:	5f c0       	rjmp	.+190    	; 0x302e <_Z25river_navigation_optionalv+0x288>
    2f70:	05 c1       	rjmp	.+522    	; 0x317c <_Z25river_navigation_optionalv+0x3d6>
				river_flag=1;
				Printf("outside loop");
				encoder_flag=3;
				while(1)
				{
					if(track==1)
    2f72:	81 30       	cpi	r24, 0x01	; 1
    2f74:	91 05       	cpc	r25, r1
    2f76:	71 f5       	brne	.+92     	; 0x2fd4 <_Z25river_navigation_optionalv+0x22e>
					{
						setPoint=65;
    2f78:	81 e4       	ldi	r24, 0x41	; 65
    2f7a:	90 e0       	ldi	r25, 0x00	; 0
    2f7c:	90 93 87 00 	sts	0x0087, r25
    2f80:	80 93 86 00 	sts	0x0086, r24
						check4=counter;
    2f84:	80 91 1d 02 	lds	r24, 0x021D
    2f88:	90 91 1e 02 	lds	r25, 0x021E
    2f8c:	90 93 dc 01 	sts	0x01DC, r25
    2f90:	80 93 db 01 	sts	0x01DB, r24
						upper_limit=true_straight;
    2f94:	80 91 bb 01 	lds	r24, 0x01BB
    2f98:	90 91 bc 01 	lds	r25, 0x01BC
    2f9c:	90 93 ae 01 	sts	0x01AE, r25
    2fa0:	80 93 ad 01 	sts	0x01AD, r24
						lower_limit=true_straight-90;
    2fa4:	9c 01       	movw	r18, r24
    2fa6:	2a 55       	subi	r18, 0x5A	; 90
    2fa8:	31 09       	sbc	r19, r1
    2faa:	30 93 ac 01 	sts	0x01AC, r19
    2fae:	20 93 ab 01 	sts	0x01AB, r18
						straight=true_straight;
    2fb2:	90 93 83 00 	sts	0x0083, r25
    2fb6:	80 93 82 00 	sts	0x0082, r24
						counter=0;
    2fba:	10 92 1e 02 	sts	0x021E, r1
    2fbe:	10 92 1d 02 	sts	0x021D, r1
						last_counter=0;
    2fc2:	10 92 1c 02 	sts	0x021C, r1
    2fc6:	10 92 1b 02 	sts	0x021B, r1
						color_flag=1;
    2fca:	10 93 85 00 	sts	0x0085, r17
    2fce:	00 93 84 00 	sts	0x0084, r16
						break;
    2fd2:	2d c0       	rjmp	.+90     	; 0x302e <_Z25river_navigation_optionalv+0x288>
					}
					if(track==0)
    2fd4:	00 97       	sbiw	r24, 0x00	; 0
    2fd6:	69 f6       	brne	.-102    	; 0x2f72 <_Z25river_navigation_optionalv+0x1cc>
					{
						setPoint=25;
    2fd8:	d0 92 87 00 	sts	0x0087, r13
    2fdc:	c0 92 86 00 	sts	0x0086, r12
						upper_limit=true_straight+90;
    2fe0:	80 91 bb 01 	lds	r24, 0x01BB
    2fe4:	90 91 bc 01 	lds	r25, 0x01BC
    2fe8:	9c 01       	movw	r18, r24
    2fea:	26 5a       	subi	r18, 0xA6	; 166
    2fec:	3f 4f       	sbci	r19, 0xFF	; 255
    2fee:	30 93 ae 01 	sts	0x01AE, r19
    2ff2:	20 93 ad 01 	sts	0x01AD, r18
						lower_limit=true_straight;
    2ff6:	90 93 ac 01 	sts	0x01AC, r25
    2ffa:	80 93 ab 01 	sts	0x01AB, r24
						straight=true_straight;
    2ffe:	90 93 83 00 	sts	0x0083, r25
    3002:	80 93 82 00 	sts	0x0082, r24
						//if(PINB>4)
						//{
							check4=counter;
    3006:	80 91 1d 02 	lds	r24, 0x021D
    300a:	90 91 1e 02 	lds	r25, 0x021E
    300e:	90 93 dc 01 	sts	0x01DC, r25
    3012:	80 93 db 01 	sts	0x01DB, r24
							counter=0;
    3016:	10 92 1e 02 	sts	0x021E, r1
    301a:	10 92 1d 02 	sts	0x021D, r1
							last_counter=0;
    301e:	10 92 1c 02 	sts	0x021C, r1
    3022:	10 92 1b 02 	sts	0x021B, r1
							color_flag=1;
    3026:	10 93 85 00 	sts	0x0085, r17
    302a:	00 93 84 00 	sts	0x0084, r16
					}
					
				}
				 
			 }
			 if(displayflag>=2)
    302e:	80 91 11 02 	lds	r24, 0x0211
    3032:	90 91 12 02 	lds	r25, 0x0212
    3036:	02 97       	sbiw	r24, 0x02	; 2
    3038:	0c f4       	brge	.+2      	; 0x303c <_Z25river_navigation_optionalv+0x296>
    303a:	5c c0       	rjmp	.+184    	; 0x30f4 <_Z25river_navigation_optionalv+0x34e>
			 {
				 lcd_clear();
    303c:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
				 Printf("E=%d C%d D%d",counter,(int)headingDegrees,compass_head_diff);
    3040:	80 91 1d 02 	lds	r24, 0x021D
    3044:	90 91 1e 02 	lds	r25, 0x021E
    3048:	20 91 7f 01 	lds	r18, 0x017F
    304c:	2f 93       	push	r18
    304e:	20 91 7e 01 	lds	r18, 0x017E
    3052:	2f 93       	push	r18
    3054:	20 91 06 02 	lds	r18, 0x0206
    3058:	2f 93       	push	r18
    305a:	20 91 05 02 	lds	r18, 0x0205
    305e:	2f 93       	push	r18
    3060:	9f 93       	push	r25
    3062:	8f 93       	push	r24
    3064:	83 e2       	ldi	r24, 0x23	; 35
    3066:	91 e0       	ldi	r25, 0x01	; 1
    3068:	9f 93       	push	r25
    306a:	8f 93       	push	r24
    306c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
				 lcd_gotoxy(0,1);
    3070:	61 e0       	ldi	r22, 0x01	; 1
    3072:	80 e0       	ldi	r24, 0x00	; 0
    3074:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_Z10lcd_gotoxyhh>
				 Printf("%d %d %d",check1,check2,check3);
    3078:	80 91 de 01 	lds	r24, 0x01DE
    307c:	8f 93       	push	r24
    307e:	80 91 dd 01 	lds	r24, 0x01DD
    3082:	8f 93       	push	r24
    3084:	80 91 e0 01 	lds	r24, 0x01E0
    3088:	8f 93       	push	r24
    308a:	80 91 df 01 	lds	r24, 0x01DF
    308e:	8f 93       	push	r24
    3090:	80 91 e2 01 	lds	r24, 0x01E2
    3094:	8f 93       	push	r24
    3096:	80 91 e1 01 	lds	r24, 0x01E1
    309a:	8f 93       	push	r24
    309c:	87 ef       	ldi	r24, 0xF7	; 247
    309e:	90 e0       	ldi	r25, 0x00	; 0
    30a0:	9f 93       	push	r25
    30a2:	8f 93       	push	r24
    30a4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
				 displayflag=0;
    30a8:	10 92 12 02 	sts	0x0212, r1
    30ac:	10 92 11 02 	sts	0x0211, r1
    30b0:	8d b7       	in	r24, 0x3d	; 61
    30b2:	9e b7       	in	r25, 0x3e	; 62
    30b4:	40 96       	adiw	r24, 0x10	; 16
    30b6:	0f b6       	in	r0, 0x3f	; 63
    30b8:	f8 94       	cli
    30ba:	9e bf       	out	0x3e, r25	; 62
    30bc:	0f be       	out	0x3f, r0	; 63
    30be:	8d bf       	out	0x3d, r24	; 61
    30c0:	19 c0       	rjmp	.+50     	; 0x30f4 <_Z25river_navigation_optionalv+0x34e>
			 //if(compass_flag>=1)
			 //{
				 headingDegrees=getHeading();
 				 //compass_flag=0;
			 //}
			encoder_flag=2;
    30c2:	c2 e0       	ldi	r28, 0x02	; 2
    30c4:	d0 e0       	ldi	r29, 0x00	; 0
			else if (output<(straight-60))
				output=(straight-60);
			 goal_position(output);
			 if(counter>=(1150) && encoder_flag==2)//700
			 {
				running=1;
    30c6:	01 e0       	ldi	r16, 0x01	; 1
    30c8:	10 e0       	ldi	r17, 0x00	; 0
				lcd_clear();
				position=45;
    30ca:	0f 2e       	mov	r0, r31
    30cc:	fd e2       	ldi	r31, 0x2D	; 45
    30ce:	af 2e       	mov	r10, r31
    30d0:	b1 2c       	mov	r11, r1
    30d2:	f0 2d       	mov	r31, r0
				river_loop=0;
				first_junc=0;
				output=straight;
				last_output=straight;
				river_flag=1;
				Printf("outside loop");
    30d4:	0f 2e       	mov	r0, r31
    30d6:	f6 e1       	ldi	r31, 0x16	; 22
    30d8:	ef 2e       	mov	r14, r31
    30da:	f1 e0       	ldi	r31, 0x01	; 1
    30dc:	ff 2e       	mov	r15, r31
    30de:	f0 2d       	mov	r31, r0
				encoder_flag=3;
    30e0:	0f 2e       	mov	r0, r31
    30e2:	f3 e0       	ldi	r31, 0x03	; 3
    30e4:	2f 2e       	mov	r2, r31
    30e6:	31 2c       	mov	r3, r1
    30e8:	f0 2d       	mov	r31, r0
						color_flag=1;
						break;
					}
					if(track==0)
					{
						setPoint=25;
    30ea:	0f 2e       	mov	r0, r31
    30ec:	f9 e1       	ldi	r31, 0x19	; 25
    30ee:	cf 2e       	mov	r12, r31
    30f0:	d1 2c       	mov	r13, r1
    30f2:	f0 2d       	mov	r31, r0
			 river_entry=0;
			 headingDegrees=getHeading();
			 check2=counter;
			 compass_flag=0;
		 }
		 while(river_loop)
    30f4:	80 91 70 01 	lds	r24, 0x0170
    30f8:	90 91 71 01 	lds	r25, 0x0171
    30fc:	89 2b       	or	r24, r25
    30fe:	09 f0       	breq	.+2      	; 0x3102 <_Z25river_navigation_optionalv+0x35c>
    3100:	7f ce       	rjmp	.-770    	; 0x2e00 <_Z25river_navigation_optionalv+0x5a>
    3102:	83 c0       	rjmp	.+262    	; 0x320a <_Z25river_navigation_optionalv+0x464>

void river_navigation_optional()
{
	if (river_entry==1 && counter >=dist_check && encoder_flag==0)
		 {
			 check3=speed;
    3104:	80 91 13 02 	lds	r24, 0x0213
    3108:	90 91 14 02 	lds	r25, 0x0214
    310c:	90 93 de 01 	sts	0x01DE, r25
    3110:	80 93 dd 01 	sts	0x01DD, r24
			 check1=dist_check;
    3114:	80 91 cf 01 	lds	r24, 0x01CF
    3118:	90 91 d0 01 	lds	r25, 0x01D0
    311c:	90 93 e2 01 	sts	0x01E2, r25
    3120:	80 93 e1 01 	sts	0x01E1, r24
			 running=0;
    3124:	10 92 81 00 	sts	0x0081, r1
    3128:	10 92 80 00 	sts	0x0080, r1
			 encoder_flag++;
    312c:	80 91 a7 01 	lds	r24, 0x01A7
    3130:	90 91 a8 01 	lds	r25, 0x01A8
    3134:	01 96       	adiw	r24, 0x01	; 1
    3136:	90 93 a8 01 	sts	0x01A8, r25
    313a:	80 93 a7 01 	sts	0x01A7, r24
			 river_loop=1;
    313e:	81 e0       	ldi	r24, 0x01	; 1
    3140:	90 e0       	ldi	r25, 0x00	; 0
    3142:	90 93 71 01 	sts	0x0171, r25
    3146:	80 93 70 01 	sts	0x0170, r24
			 river_entry=0;
    314a:	10 92 73 01 	sts	0x0173, r1
    314e:	10 92 72 01 	sts	0x0172, r1
			 headingDegrees=getHeading();
    3152:	0e 94 b9 06 	call	0xd72	; 0xd72 <_Z10getHeadingv>
    3156:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    315a:	70 93 06 02 	sts	0x0206, r23
    315e:	60 93 05 02 	sts	0x0205, r22
			 check2=counter;
    3162:	80 91 1d 02 	lds	r24, 0x021D
    3166:	90 91 1e 02 	lds	r25, 0x021E
    316a:	90 93 e0 01 	sts	0x01E0, r25
    316e:	80 93 df 01 	sts	0x01DF, r24
			 compass_flag=0;
    3172:	10 92 10 02 	sts	0x0210, r1
    3176:	10 92 0f 02 	sts	0x020F, r1
    317a:	a3 cf       	rjmp	.-186    	; 0x30c2 <_Z25river_navigation_optionalv+0x31c>
			else if (output<(straight-60))
				output=(straight-60);
			 goal_position(output);
			 if(counter>=(1150) && encoder_flag==2)//700
			 {
				running=1;
    317c:	10 93 81 00 	sts	0x0081, r17
    3180:	00 93 80 00 	sts	0x0080, r16
				lcd_clear();
    3184:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
				position=45;
    3188:	b0 92 99 01 	sts	0x0199, r11
    318c:	a0 92 98 01 	sts	0x0198, r10
				river_enable=0;
    3190:	10 92 67 00 	sts	0x0067, r1
    3194:	10 92 66 00 	sts	0x0066, r1
				river_entry=0;
    3198:	10 92 73 01 	sts	0x0173, r1
    319c:	10 92 72 01 	sts	0x0172, r1
				river_loop=0;
    31a0:	10 92 71 01 	sts	0x0171, r1
    31a4:	10 92 70 01 	sts	0x0170, r1
				first_junc=0;
    31a8:	10 92 65 00 	sts	0x0065, r1
    31ac:	10 92 64 00 	sts	0x0064, r1
				output=straight;
    31b0:	60 91 82 00 	lds	r22, 0x0082
    31b4:	70 91 83 00 	lds	r23, 0x0083
    31b8:	88 27       	eor	r24, r24
    31ba:	77 fd       	sbrc	r23, 7
    31bc:	80 95       	com	r24
    31be:	98 2f       	mov	r25, r24
    31c0:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    31c4:	60 93 b7 01 	sts	0x01B7, r22
    31c8:	70 93 b8 01 	sts	0x01B8, r23
    31cc:	80 93 b9 01 	sts	0x01B9, r24
    31d0:	90 93 ba 01 	sts	0x01BA, r25
				last_output=straight;
    31d4:	60 93 b3 01 	sts	0x01B3, r22
    31d8:	70 93 b4 01 	sts	0x01B4, r23
    31dc:	80 93 b5 01 	sts	0x01B5, r24
    31e0:	90 93 b6 01 	sts	0x01B6, r25
				river_flag=1;
    31e4:	10 93 6f 01 	sts	0x016F, r17
    31e8:	00 93 6e 01 	sts	0x016E, r16
				Printf("outside loop");
    31ec:	ff 92       	push	r15
    31ee:	ef 92       	push	r14
    31f0:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
				encoder_flag=3;
    31f4:	30 92 a8 01 	sts	0x01A8, r3
    31f8:	20 92 a7 01 	sts	0x01A7, r2
				while(1)
				{
					if(track==1)
    31fc:	80 91 5e 01 	lds	r24, 0x015E
    3200:	90 91 5f 01 	lds	r25, 0x015F
    3204:	0f 90       	pop	r0
    3206:	0f 90       	pop	r0
    3208:	b4 ce       	rjmp	.-664    	; 0x2f72 <_Z25river_navigation_optionalv+0x1cc>
				 lcd_gotoxy(0,1);
				 Printf("%d %d %d",check1,check2,check3);
				 displayflag=0;
			 }
		}
}
    320a:	df 91       	pop	r29
    320c:	cf 91       	pop	r28
    320e:	1f 91       	pop	r17
    3210:	0f 91       	pop	r16
    3212:	ff 90       	pop	r15
    3214:	ef 90       	pop	r14
    3216:	df 90       	pop	r13
    3218:	cf 90       	pop	r12
    321a:	bf 90       	pop	r11
    321c:	af 90       	pop	r10
    321e:	9f 90       	pop	r9
    3220:	8f 90       	pop	r8
    3222:	7f 90       	pop	r7
    3224:	6f 90       	pop	r6
    3226:	5f 90       	pop	r5
    3228:	4f 90       	pop	r4
    322a:	3f 90       	pop	r3
    322c:	2f 90       	pop	r2
    322e:	08 95       	ret

00003230 <main>:


int main(void)
{
	init_all();
    3230:	0e 94 9f 07 	call	0xf3e	; 0xf3e <_Z8init_allv>
	check_for_field_and_check_point();
    3234:	0e 94 b3 07 	call	0xf66	; 0xf66 <_Z31check_for_field_and_check_pointv>
	goal_position(straight);
    3238:	80 91 82 00 	lds	r24, 0x0082
    323c:	90 91 83 00 	lds	r25, 0x0083
    3240:	0e 94 97 01 	call	0x32e	; 0x32e <_Z13goal_positionj>
	lcd_clear();
    3244:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
	Printf("STARTING...");
    3248:	80 e3       	ldi	r24, 0x30	; 48
    324a:	91 e0       	ldi	r25, 0x01	; 1
    324c:	9f 93       	push	r25
    324e:	8f 93       	push	r24
    3250:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
	lcd_gotoxy(0,1);
    3254:	61 e0       	ldi	r22, 0x01	; 1
    3256:	80 e0       	ldi	r24, 0x00	; 0
    3258:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_Z10lcd_gotoxyhh>
	Printf("TRACK=%d %d %d %d",track,headingDegrees,axis,ninety_counter);
    325c:	80 91 6d 01 	lds	r24, 0x016D
    3260:	8f 93       	push	r24
    3262:	80 91 6c 01 	lds	r24, 0x016C
    3266:	8f 93       	push	r24
    3268:	80 91 6b 00 	lds	r24, 0x006B
    326c:	8f 93       	push	r24
    326e:	80 91 6a 00 	lds	r24, 0x006A
    3272:	8f 93       	push	r24
    3274:	80 91 06 02 	lds	r24, 0x0206
    3278:	8f 93       	push	r24
    327a:	80 91 05 02 	lds	r24, 0x0205
    327e:	8f 93       	push	r24
    3280:	80 91 5f 01 	lds	r24, 0x015F
    3284:	8f 93       	push	r24
    3286:	80 91 5e 01 	lds	r24, 0x015E
    328a:	8f 93       	push	r24
    328c:	8c e3       	ldi	r24, 0x3C	; 60
    328e:	91 e0       	ldi	r25, 0x01	; 1
    3290:	9f 93       	push	r25
    3292:	8f 93       	push	r24
    3294:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
	while(counter==last_counter);
    3298:	8d b7       	in	r24, 0x3d	; 61
    329a:	9e b7       	in	r25, 0x3e	; 62
    329c:	0c 96       	adiw	r24, 0x0c	; 12
    329e:	0f b6       	in	r0, 0x3f	; 63
    32a0:	f8 94       	cli
    32a2:	9e bf       	out	0x3e, r25	; 62
    32a4:	0f be       	out	0x3f, r0	; 63
    32a6:	8d bf       	out	0x3d, r24	; 61
    32a8:	20 91 1d 02 	lds	r18, 0x021D
    32ac:	30 91 1e 02 	lds	r19, 0x021E
    32b0:	80 91 1b 02 	lds	r24, 0x021B
    32b4:	90 91 1c 02 	lds	r25, 0x021C
    32b8:	28 17       	cp	r18, r24
    32ba:	39 07       	cpc	r19, r25
    32bc:	a9 f3       	breq	.-22     	; 0x32a8 <main+0x78>
    32be:	0f 2e       	mov	r0, r31
    32c0:	fc e6       	ldi	r31, 0x6C	; 108
    32c2:	8f 2e       	mov	r8, r31
    32c4:	f0 e0       	ldi	r31, 0x00	; 0
    32c6:	9f 2e       	mov	r9, r31
    32c8:	f0 2d       	mov	r31, r0
    32ca:	0f 2e       	mov	r0, r31
    32cc:	f0 e8       	ldi	r31, 0x80	; 128
    32ce:	2f 2e       	mov	r2, r31
    32d0:	f1 e0       	ldi	r31, 0x01	; 1
    32d2:	3f 2e       	mov	r3, r31
    32d4:	f0 2d       	mov	r31, r0
		linestate=0;
		for(int i=0;i<=7;i++)
		{
			if(bit_is_set(PINB,i))
			{
				b[i]=1;
    32d6:	aa 24       	eor	r10, r10
    32d8:	a3 94       	inc	r10
    32da:	b1 2c       	mov	r11, r1
	Printf("TRACK=%d %d %d %d",track,headingDegrees,axis,ninety_counter);
	while(counter==last_counter);
	//navigation_check();
    while(1)
    {	
		check_for_color_conditions();	
    32dc:	0e 94 98 09 	call	0x1330	; 0x1330 <_Z26check_for_color_conditionsv>
		check_for_downhill_conditions();
    32e0:	0e 94 25 0a 	call	0x144a	; 0x144a <_Z29check_for_downhill_conditionsv>
		ninety_turn_navigation();
    32e4:	0e 94 2f 0c 	call	0x185e	; 0x185e <_Z22ninety_turn_navigationv>
		if(river_flag==1 && counter>350)
    32e8:	80 91 6e 01 	lds	r24, 0x016E
    32ec:	90 91 6f 01 	lds	r25, 0x016F
    32f0:	01 97       	sbiw	r24, 0x01	; 1
    32f2:	81 f4       	brne	.+32     	; 0x3314 <main+0xe4>
    32f4:	80 91 1d 02 	lds	r24, 0x021D
    32f8:	90 91 1e 02 	lds	r25, 0x021E
    32fc:	8f 35       	cpi	r24, 0x5F	; 95
    32fe:	91 40       	sbci	r25, 0x01	; 1
    3300:	0c f0       	brlt	.+2      	; 0x3304 <main+0xd4>
    3302:	a2 c1       	rjmp	.+836    	; 0x3648 <main+0x418>
			setPoint=45;
			straight=true_straight;;
			lower_limit=straight-90;
			upper_limit=straight+90;
		}
		else if(river_flag==1 && counter<300)
    3304:	80 91 1d 02 	lds	r24, 0x021D
    3308:	90 91 1e 02 	lds	r25, 0x021E
    330c:	8c 32       	cpi	r24, 0x2C	; 44
    330e:	91 40       	sbci	r25, 0x01	; 1
    3310:	0c f4       	brge	.+2      	; 0x3314 <main+0xe4>
    3312:	ba c1       	rjmp	.+884    	; 0x3688 <main+0x458>
		{
			setPoint = 45 + (300-counter)*20/300;
		}
		if(ninety_counter==4 && counter>=500)
    3314:	80 91 6c 01 	lds	r24, 0x016C
    3318:	90 91 6d 01 	lds	r25, 0x016D
    331c:	04 97       	sbiw	r24, 0x04	; 4
    331e:	41 f4       	brne	.+16     	; 0x3330 <main+0x100>
    3320:	80 91 1d 02 	lds	r24, 0x021D
    3324:	90 91 1e 02 	lds	r25, 0x021E
    3328:	84 3f       	cpi	r24, 0xF4	; 244
    332a:	91 40       	sbci	r25, 0x01	; 1
    332c:	0c f0       	brlt	.+2      	; 0x3330 <main+0x100>
    332e:	c3 c1       	rjmp	.+902    	; 0x36b6 <main+0x486>
		{
			setPoint=45;
			ninety_counter=5;
		}
		//ninety_turn_optional_2();		
		calculate_river_distance();
    3330:	0e 94 14 11 	call	0x2228	; 0x2228 <_Z24calculate_river_distancev>
		river_navigation_optional();
    3334:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <_Z25river_navigation_optionalv>
		//river_navigation();
		sum=0;
    3338:	10 92 94 01 	sts	0x0194, r1
    333c:	10 92 95 01 	sts	0x0195, r1
    3340:	10 92 96 01 	sts	0x0196, r1
    3344:	10 92 97 01 	sts	0x0197, r1
		sumvalue=0;
    3348:	10 92 90 01 	sts	0x0190, r1
    334c:	10 92 91 01 	sts	0x0191, r1
    3350:	10 92 92 01 	sts	0x0192, r1
    3354:	10 92 93 01 	sts	0x0193, r1
		linestate=0;
    3358:	10 92 9a 01 	sts	0x019A, r1
    335c:	74 01       	movw	r14, r8
    335e:	81 01       	movw	r16, r2
		for(int i=0;i<=7;i++)
    3360:	c0 e0       	ldi	r28, 0x00	; 0
    3362:	d0 e0       	ldi	r29, 0x00	; 0
		{
			if(bit_is_set(PINB,i))
    3364:	86 b3       	in	r24, 0x16	; 22
    3366:	90 e0       	ldi	r25, 0x00	; 0
    3368:	0c 2e       	mov	r0, r28
    336a:	02 c0       	rjmp	.+4      	; 0x3370 <main+0x140>
    336c:	95 95       	asr	r25
    336e:	87 95       	ror	r24
    3370:	0a 94       	dec	r0
    3372:	e2 f7       	brpl	.-8      	; 0x336c <main+0x13c>
    3374:	80 ff       	sbrs	r24, 0
    3376:	10 c0       	rjmp	.+32     	; 0x3398 <main+0x168>
			{
				b[i]=1;
    3378:	f8 01       	movw	r30, r16
    337a:	b1 82       	std	Z+1, r11	; 0x01
    337c:	a0 82       	st	Z, r10
				linestate|=(1<<i); 
    337e:	c5 01       	movw	r24, r10
    3380:	0c 2e       	mov	r0, r28
    3382:	02 c0       	rjmp	.+4      	; 0x3388 <main+0x158>
    3384:	88 0f       	add	r24, r24
    3386:	99 1f       	adc	r25, r25
    3388:	0a 94       	dec	r0
    338a:	e2 f7       	brpl	.-8      	; 0x3384 <main+0x154>
    338c:	90 91 9a 01 	lds	r25, 0x019A
    3390:	89 2b       	or	r24, r25
    3392:	80 93 9a 01 	sts	0x019A, r24
    3396:	03 c0       	rjmp	.+6      	; 0x339e <main+0x16e>
			}
			else
				b[i]=0;
    3398:	f8 01       	movw	r30, r16
    339a:	11 82       	std	Z+1, r1	; 0x01
    339c:	10 82       	st	Z, r1
			sum+=(weight[i]*b[i]);
    339e:	f7 01       	movw	r30, r14
    33a0:	81 91       	ld	r24, Z+
    33a2:	91 91       	ld	r25, Z+
    33a4:	7f 01       	movw	r14, r30
    33a6:	f8 01       	movw	r30, r16
    33a8:	c1 90       	ld	r12, Z+
    33aa:	d1 90       	ld	r13, Z+
    33ac:	8f 01       	movw	r16, r30
    33ae:	8c 9d       	mul	r24, r12
    33b0:	b0 01       	movw	r22, r0
    33b2:	8d 9d       	mul	r24, r13
    33b4:	70 0d       	add	r23, r0
    33b6:	9c 9d       	mul	r25, r12
    33b8:	70 0d       	add	r23, r0
    33ba:	11 24       	eor	r1, r1
    33bc:	88 27       	eor	r24, r24
    33be:	77 fd       	sbrc	r23, 7
    33c0:	80 95       	com	r24
    33c2:	98 2f       	mov	r25, r24
    33c4:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    33c8:	9b 01       	movw	r18, r22
    33ca:	ac 01       	movw	r20, r24
    33cc:	60 91 94 01 	lds	r22, 0x0194
    33d0:	70 91 95 01 	lds	r23, 0x0195
    33d4:	80 91 96 01 	lds	r24, 0x0196
    33d8:	90 91 97 01 	lds	r25, 0x0197
    33dc:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    33e0:	60 93 94 01 	sts	0x0194, r22
    33e4:	70 93 95 01 	sts	0x0195, r23
    33e8:	80 93 96 01 	sts	0x0196, r24
    33ec:	90 93 97 01 	sts	0x0197, r25
			sumvalue+=b[i];
    33f0:	40 90 90 01 	lds	r4, 0x0190
    33f4:	50 90 91 01 	lds	r5, 0x0191
    33f8:	60 90 92 01 	lds	r6, 0x0192
    33fc:	70 90 93 01 	lds	r7, 0x0193
    3400:	b6 01       	movw	r22, r12
    3402:	88 27       	eor	r24, r24
    3404:	77 fd       	sbrc	r23, 7
    3406:	80 95       	com	r24
    3408:	98 2f       	mov	r25, r24
    340a:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    340e:	a3 01       	movw	r20, r6
    3410:	92 01       	movw	r18, r4
    3412:	0e 94 e8 1b 	call	0x37d0	; 0x37d0 <__addsf3>
    3416:	d7 2e       	mov	r13, r23
    3418:	f8 2f       	mov	r31, r24
    341a:	e9 2f       	mov	r30, r25
    341c:	56 2f       	mov	r21, r22
    341e:	47 2f       	mov	r20, r23
    3420:	86 2f       	mov	r24, r22
    3422:	9d 2d       	mov	r25, r13
    3424:	af 2f       	mov	r26, r31
    3426:	be 2f       	mov	r27, r30
    3428:	80 93 90 01 	sts	0x0190, r24
    342c:	90 93 91 01 	sts	0x0191, r25
    3430:	a0 93 92 01 	sts	0x0192, r26
    3434:	b0 93 93 01 	sts	0x0193, r27
		river_navigation_optional();
		//river_navigation();
		sum=0;
		sumvalue=0;
		linestate=0;
		for(int i=0;i<=7;i++)
    3438:	21 96       	adiw	r28, 0x01	; 1
    343a:	c8 30       	cpi	r28, 0x08	; 8
    343c:	d1 05       	cpc	r29, r1
    343e:	09 f0       	breq	.+2      	; 0x3442 <main+0x212>
    3440:	91 cf       	rjmp	.-222    	; 0x3364 <main+0x134>
			else
				b[i]=0;
			sum+=(weight[i]*b[i]);
			sumvalue+=b[i];
		}
		position=sum/sumvalue;
    3442:	25 2f       	mov	r18, r21
    3444:	34 2f       	mov	r19, r20
    3446:	4f 2f       	mov	r20, r31
    3448:	5e 2f       	mov	r21, r30
    344a:	60 91 94 01 	lds	r22, 0x0194
    344e:	70 91 95 01 	lds	r23, 0x0195
    3452:	80 91 96 01 	lds	r24, 0x0196
    3456:	90 91 97 01 	lds	r25, 0x0197
    345a:	0e 94 b5 1c 	call	0x396a	; 0x396a <__divsf3>
    345e:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    3462:	70 93 99 01 	sts	0x0199, r23
    3466:	60 93 98 01 	sts	0x0198, r22
		ninety_optional_1();
    346a:	0e 94 22 12 	call	0x2444	; 0x2444 <_Z17ninety_optional_1v>
		check_and_calculate_pid();
    346e:	0e 94 11 14 	call	0x2822	; 0x2822 <_Z23check_and_calculate_pidv>
		kpp=kp*10000;
    3472:	20 e0       	ldi	r18, 0x00	; 0
    3474:	30 e4       	ldi	r19, 0x40	; 64
    3476:	4c e1       	ldi	r20, 0x1C	; 28
    3478:	56 e4       	ldi	r21, 0x46	; 70
    347a:	60 91 98 00 	lds	r22, 0x0098
    347e:	70 91 99 00 	lds	r23, 0x0099
    3482:	80 91 9a 00 	lds	r24, 0x009A
    3486:	90 91 9b 00 	lds	r25, 0x009B
    348a:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    348e:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    3492:	70 93 cc 01 	sts	0x01CC, r23
    3496:	60 93 cb 01 	sts	0x01CB, r22
		kii=ki*10000;
    349a:	20 e0       	ldi	r18, 0x00	; 0
    349c:	30 e4       	ldi	r19, 0x40	; 64
    349e:	4c e1       	ldi	r20, 0x1C	; 28
    34a0:	56 e4       	ldi	r21, 0x46	; 70
    34a2:	60 91 94 00 	lds	r22, 0x0094
    34a6:	70 91 95 00 	lds	r23, 0x0095
    34aa:	80 91 96 00 	lds	r24, 0x0096
    34ae:	90 91 97 00 	lds	r25, 0x0097
    34b2:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    34b6:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    34ba:	70 93 ca 01 	sts	0x01CA, r23
    34be:	60 93 c9 01 	sts	0x01C9, r22
		kdd=kd;
    34c2:	60 91 90 00 	lds	r22, 0x0090
    34c6:	70 91 91 00 	lds	r23, 0x0091
    34ca:	80 91 92 00 	lds	r24, 0x0092
    34ce:	90 91 93 00 	lds	r25, 0x0093
    34d2:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    34d6:	70 93 c8 01 	sts	0x01C8, r23
    34da:	60 93 c7 01 	sts	0x01C7, r22
		kvv=kv*10;
    34de:	20 e0       	ldi	r18, 0x00	; 0
    34e0:	30 e0       	ldi	r19, 0x00	; 0
    34e2:	40 e2       	ldi	r20, 0x20	; 32
    34e4:	51 e4       	ldi	r21, 0x41	; 65
    34e6:	60 91 8c 00 	lds	r22, 0x008C
    34ea:	70 91 8d 00 	lds	r23, 0x008D
    34ee:	80 91 8e 00 	lds	r24, 0x008E
    34f2:	90 91 8f 00 	lds	r25, 0x008F
    34f6:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    34fa:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    34fe:	70 93 c6 01 	sts	0x01C6, r23
    3502:	60 93 c5 01 	sts	0x01C5, r22
		power=Prop_power*100;
    3506:	20 e0       	ldi	r18, 0x00	; 0
    3508:	30 e0       	ldi	r19, 0x00	; 0
    350a:	48 ec       	ldi	r20, 0xC8	; 200
    350c:	52 e4       	ldi	r21, 0x42	; 66
    350e:	60 91 88 00 	lds	r22, 0x0088
    3512:	70 91 89 00 	lds	r23, 0x0089
    3516:	80 91 8a 00 	lds	r24, 0x008A
    351a:	90 91 8b 00 	lds	r25, 0x008B
    351e:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    3522:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    3526:	70 93 ce 01 	sts	0x01CE, r23
    352a:	60 93 cd 01 	sts	0x01CD, r22
		if(displayflag>=1)
    352e:	80 91 11 02 	lds	r24, 0x0211
    3532:	90 91 12 02 	lds	r25, 0x0212
    3536:	18 16       	cp	r1, r24
    3538:	19 06       	cpc	r1, r25
    353a:	0c f0       	brlt	.+2      	; 0x353e <main+0x30e>
    353c:	6c c0       	rjmp	.+216    	; 0x3616 <main+0x3e6>
		{	
			lcd_clear();
    353e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z9lcd_clearv>
			Printf("T=%d %d %d %d",track,color,heading_proxy,river_compass_angle);
    3542:	80 91 7d 01 	lds	r24, 0x017D
    3546:	8f 93       	push	r24
    3548:	80 91 7c 01 	lds	r24, 0x017C
    354c:	8f 93       	push	r24
    354e:	80 91 04 02 	lds	r24, 0x0204
    3552:	8f 93       	push	r24
    3554:	80 91 03 02 	lds	r24, 0x0203
    3558:	8f 93       	push	r24
    355a:	80 91 c0 01 	lds	r24, 0x01C0
    355e:	8f 93       	push	r24
    3560:	80 91 bf 01 	lds	r24, 0x01BF
    3564:	8f 93       	push	r24
    3566:	80 91 5f 01 	lds	r24, 0x015F
    356a:	8f 93       	push	r24
    356c:	80 91 5e 01 	lds	r24, 0x015E
    3570:	8f 93       	push	r24
    3572:	8e e4       	ldi	r24, 0x4E	; 78
    3574:	91 e0       	ldi	r25, 0x01	; 1
    3576:	9f 93       	push	r25
    3578:	8f 93       	push	r24
    357a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
			lcd_gotoxy(0,1);
    357e:	61 e0       	ldi	r22, 0x01	; 1
    3580:	80 e0       	ldi	r24, 0x00	; 0
    3582:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_Z10lcd_gotoxyhh>
			//Printf("%d %d %d %d %d %d %d",ninety_counter,first_junc,river_entry,down_auto,down_normal_pid,down_turn,river_flag);
			Printf("%d %d %d %d %d",(int)(ninety_y_abs_derivative_error*100),check1,check2,check3,check4);
    3586:	80 91 dc 01 	lds	r24, 0x01DC
    358a:	8f 93       	push	r24
    358c:	80 91 db 01 	lds	r24, 0x01DB
    3590:	8f 93       	push	r24
    3592:	80 91 de 01 	lds	r24, 0x01DE
    3596:	8f 93       	push	r24
    3598:	80 91 dd 01 	lds	r24, 0x01DD
    359c:	8f 93       	push	r24
    359e:	80 91 e0 01 	lds	r24, 0x01E0
    35a2:	8f 93       	push	r24
    35a4:	80 91 df 01 	lds	r24, 0x01DF
    35a8:	8f 93       	push	r24
    35aa:	80 91 e2 01 	lds	r24, 0x01E2
    35ae:	8f 93       	push	r24
    35b0:	80 91 e1 01 	lds	r24, 0x01E1
    35b4:	8f 93       	push	r24
    35b6:	20 e0       	ldi	r18, 0x00	; 0
    35b8:	30 e0       	ldi	r19, 0x00	; 0
    35ba:	48 ec       	ldi	r20, 0xC8	; 200
    35bc:	52 e4       	ldi	r21, 0x42	; 66
    35be:	60 91 66 01 	lds	r22, 0x0166
    35c2:	70 91 67 01 	lds	r23, 0x0167
    35c6:	80 91 68 01 	lds	r24, 0x0168
    35ca:	90 91 69 01 	lds	r25, 0x0169
    35ce:	0e 94 69 1e 	call	0x3cd2	; 0x3cd2 <__mulsf3>
    35d2:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__fixsfsi>
    35d6:	7f 93       	push	r23
    35d8:	6f 93       	push	r22
    35da:	81 ef       	ldi	r24, 0xF1	; 241
    35dc:	90 e0       	ldi	r25, 0x00	; 0
    35de:	9f 93       	push	r25
    35e0:	8f 93       	push	r24
    35e2:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
			Printf("%d",counter);
    35e6:	80 91 1d 02 	lds	r24, 0x021D
    35ea:	90 91 1e 02 	lds	r25, 0x021E
    35ee:	9f 93       	push	r25
    35f0:	8f 93       	push	r24
    35f2:	8e ee       	ldi	r24, 0xEE	; 238
    35f4:	90 e0       	ldi	r25, 0x00	; 0
    35f6:	9f 93       	push	r25
    35f8:	8f 93       	push	r24
    35fa:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_Z6PrintfPcz>
			displayflag=0;
    35fe:	10 92 12 02 	sts	0x0212, r1
    3602:	10 92 11 02 	sts	0x0211, r1
    3606:	8d b7       	in	r24, 0x3d	; 61
    3608:	9e b7       	in	r25, 0x3e	; 62
    360a:	4a 96       	adiw	r24, 0x1a	; 26
    360c:	0f b6       	in	r0, 0x3f	; 63
    360e:	f8 94       	cli
    3610:	9e bf       	out	0x3e, r25	; 62
    3612:	0f be       	out	0x3f, r0	; 63
    3614:	8d bf       	out	0x3d, r24	; 61
		}
		last_output=output;
    3616:	80 91 b7 01 	lds	r24, 0x01B7
    361a:	90 91 b8 01 	lds	r25, 0x01B8
    361e:	a0 91 b9 01 	lds	r26, 0x01B9
    3622:	b0 91 ba 01 	lds	r27, 0x01BA
    3626:	80 93 b3 01 	sts	0x01B3, r24
    362a:	90 93 b4 01 	sts	0x01B4, r25
    362e:	a0 93 b5 01 	sts	0x01B5, r26
    3632:	b0 93 b6 01 	sts	0x01B6, r27
		lastcolor=color;
    3636:	80 91 bf 01 	lds	r24, 0x01BF
    363a:	90 91 c0 01 	lds	r25, 0x01C0
    363e:	90 93 be 01 	sts	0x01BE, r25
    3642:	80 93 bd 01 	sts	0x01BD, r24
	Printf("STARTING...");
	lcd_gotoxy(0,1);
	Printf("TRACK=%d %d %d %d",track,headingDegrees,axis,ninety_counter);
	while(counter==last_counter);
	//navigation_check();
    while(1)
    3646:	4a ce       	rjmp	.-876    	; 0x32dc <main+0xac>
		check_for_color_conditions();	
		check_for_downhill_conditions();
		ninety_turn_navigation();
		if(river_flag==1 && counter>350)
		{
			river_flag=0;
    3648:	10 92 6f 01 	sts	0x016F, r1
    364c:	10 92 6e 01 	sts	0x016E, r1
			setPoint=45;
    3650:	ed e2       	ldi	r30, 0x2D	; 45
    3652:	f0 e0       	ldi	r31, 0x00	; 0
    3654:	f0 93 87 00 	sts	0x0087, r31
    3658:	e0 93 86 00 	sts	0x0086, r30
			straight=true_straight;;
    365c:	80 91 bb 01 	lds	r24, 0x01BB
    3660:	90 91 bc 01 	lds	r25, 0x01BC
    3664:	90 93 83 00 	sts	0x0083, r25
    3668:	80 93 82 00 	sts	0x0082, r24
			lower_limit=straight-90;
    366c:	9c 01       	movw	r18, r24
    366e:	2a 55       	subi	r18, 0x5A	; 90
    3670:	31 09       	sbc	r19, r1
    3672:	30 93 ac 01 	sts	0x01AC, r19
    3676:	20 93 ab 01 	sts	0x01AB, r18
			upper_limit=straight+90;
    367a:	86 5a       	subi	r24, 0xA6	; 166
    367c:	9f 4f       	sbci	r25, 0xFF	; 255
    367e:	90 93 ae 01 	sts	0x01AE, r25
    3682:	80 93 ad 01 	sts	0x01AD, r24
    3686:	46 ce       	rjmp	.-884    	; 0x3314 <main+0xe4>
		}
		else if(river_flag==1 && counter<300)
		{
			setPoint = 45 + (300-counter)*20/300;
    3688:	20 91 1d 02 	lds	r18, 0x021D
    368c:	30 91 1e 02 	lds	r19, 0x021E
    3690:	4c ee       	ldi	r20, 0xEC	; 236
    3692:	42 03       	mulsu	r20, r18
    3694:	c0 01       	movw	r24, r0
    3696:	43 9f       	mul	r20, r19
    3698:	90 0d       	add	r25, r0
    369a:	11 24       	eor	r1, r1
    369c:	80 59       	subi	r24, 0x90	; 144
    369e:	98 4e       	sbci	r25, 0xE8	; 232
    36a0:	6c e2       	ldi	r22, 0x2C	; 44
    36a2:	71 e0       	ldi	r23, 0x01	; 1
    36a4:	0e 94 68 20 	call	0x40d0	; 0x40d0 <__divmodhi4>
    36a8:	63 5d       	subi	r22, 0xD3	; 211
    36aa:	7f 4f       	sbci	r23, 0xFF	; 255
    36ac:	70 93 87 00 	sts	0x0087, r23
    36b0:	60 93 86 00 	sts	0x0086, r22
    36b4:	2f ce       	rjmp	.-930    	; 0x3314 <main+0xe4>
		}
		if(ninety_counter==4 && counter>=500)
		{
			setPoint=45;
    36b6:	8d e2       	ldi	r24, 0x2D	; 45
    36b8:	90 e0       	ldi	r25, 0x00	; 0
    36ba:	90 93 87 00 	sts	0x0087, r25
    36be:	80 93 86 00 	sts	0x0086, r24
			ninety_counter=5;
    36c2:	e5 e0       	ldi	r30, 0x05	; 5
    36c4:	f0 e0       	ldi	r31, 0x00	; 0
    36c6:	f0 93 6d 01 	sts	0x016D, r31
    36ca:	e0 93 6c 01 	sts	0x016C, r30
    36ce:	30 ce       	rjmp	.-928    	; 0x3330 <main+0x100>

000036d0 <_GLOBAL__sub_I_rei>:
			displayflag=0;
		}
		last_output=output;
		lastcolor=color;
	}
}
    36d0:	cf 93       	push	r28
    36d2:	df 93       	push	r29
int transition_count=-1;
int color_flag=1;

//FOR SERVO
int straight=122;
int true_straight=straight;
    36d4:	c0 91 82 00 	lds	r28, 0x0082
    36d8:	d0 91 83 00 	lds	r29, 0x0083
    36dc:	d0 93 bc 01 	sts	0x01BC, r29
    36e0:	c0 93 bb 01 	sts	0x01BB, r28
volatile float output=straight;
    36e4:	be 01       	movw	r22, r28
    36e6:	88 27       	eor	r24, r24
    36e8:	77 fd       	sbrc	r23, 7
    36ea:	80 95       	com	r24
    36ec:	98 2f       	mov	r25, r24
    36ee:	0e 94 50 1d 	call	0x3aa0	; 0x3aa0 <__floatsisf>
    36f2:	60 93 b7 01 	sts	0x01B7, r22
    36f6:	70 93 b8 01 	sts	0x01B8, r23
    36fa:	80 93 b9 01 	sts	0x01B9, r24
    36fe:	90 93 ba 01 	sts	0x01BA, r25
int output1=0;
float last_output=straight;
    3702:	60 93 b3 01 	sts	0x01B3, r22
    3706:	70 93 b4 01 	sts	0x01B4, r23
    370a:	80 93 b5 01 	sts	0x01B5, r24
    370e:	90 93 b6 01 	sts	0x01B6, r25
float lastoutput=straight;
    3712:	60 93 af 01 	sts	0x01AF, r22
    3716:	70 93 b0 01 	sts	0x01B0, r23
    371a:	80 93 b1 01 	sts	0x01B1, r24
    371e:	90 93 b2 01 	sts	0x01B2, r25
int left_turn=0;
int right_turn=0;
int upper_limit=straight+90;
    3722:	ce 01       	movw	r24, r28
    3724:	86 5a       	subi	r24, 0xA6	; 166
    3726:	9f 4f       	sbci	r25, 0xFF	; 255
    3728:	90 93 ae 01 	sts	0x01AE, r25
    372c:	80 93 ad 01 	sts	0x01AD, r24
int lower_limit=straight-90;
    3730:	ca 55       	subi	r28, 0x5A	; 90
    3732:	d1 09       	sbc	r29, r1
    3734:	d0 93 ac 01 	sts	0x01AC, r29
    3738:	c0 93 ab 01 	sts	0x01AB, r28
			displayflag=0;
		}
		last_output=output;
		lastcolor=color;
	}
}
    373c:	df 91       	pop	r29
    373e:	cf 91       	pop	r28
    3740:	08 95       	ret

00003742 <_Z8i2c_initv>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
    3742:	11 b8       	out	0x01, r1	; 1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
    3744:	88 e4       	ldi	r24, 0x48	; 72
    3746:	80 b9       	out	0x00, r24	; 0
    3748:	08 95       	ret

0000374a <_Z9i2c_starth>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    374a:	94 ea       	ldi	r25, 0xA4	; 164
    374c:	96 bf       	out	0x36, r25	; 54

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
    374e:	06 b6       	in	r0, 0x36	; 54
    3750:	07 fe       	sbrs	r0, 7
    3752:	fd cf       	rjmp	.-6      	; 0x374e <_Z9i2c_starth+0x4>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
    3754:	91 b1       	in	r25, 0x01	; 1
    3756:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
    3758:	98 30       	cpi	r25, 0x08	; 8
    375a:	11 f0       	breq	.+4      	; 0x3760 <_Z9i2c_starth+0x16>
    375c:	90 31       	cpi	r25, 0x10	; 16
    375e:	79 f4       	brne	.+30     	; 0x377e <_Z9i2c_starth+0x34>

	// send device address
	TWDR = address;
    3760:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWINT) | (1<<TWEN);
    3762:	84 e8       	ldi	r24, 0x84	; 132
    3764:	86 bf       	out	0x36, r24	; 54

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
    3766:	06 b6       	in	r0, 0x36	; 54
    3768:	07 fe       	sbrs	r0, 7
    376a:	fd cf       	rjmp	.-6      	; 0x3766 <_Z9i2c_starth+0x1c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
    376c:	91 b1       	in	r25, 0x01	; 1
    376e:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
    3770:	98 31       	cpi	r25, 0x18	; 24
    3772:	39 f0       	breq	.+14     	; 0x3782 <_Z9i2c_starth+0x38>
    3774:	81 e0       	ldi	r24, 0x01	; 1
    3776:	90 34       	cpi	r25, 0x40	; 64
    3778:	29 f4       	brne	.+10     	; 0x3784 <_Z9i2c_starth+0x3a>
    377a:	80 e0       	ldi	r24, 0x00	; 0
    377c:	08 95       	ret
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
    377e:	81 e0       	ldi	r24, 0x01	; 1
    3780:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
    3782:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
    3784:	08 95       	ret

00003786 <_Z13i2c_rep_starth>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
    3786:	0e 94 a5 1b 	call	0x374a	; 0x374a <_Z9i2c_starth>

}/* i2c_rep_start */
    378a:	08 95       	ret

0000378c <_Z8i2c_stopv>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    378c:	84 e9       	ldi	r24, 0x94	; 148
    378e:	86 bf       	out	0x36, r24	; 54
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
    3790:	06 b6       	in	r0, 0x36	; 54
    3792:	04 fc       	sbrc	r0, 4
    3794:	fd cf       	rjmp	.-6      	; 0x3790 <_Z8i2c_stopv+0x4>

}/* i2c_stop */
    3796:	08 95       	ret

00003798 <_Z9i2c_writeh>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    3798:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWINT) | (1<<TWEN);
    379a:	84 e8       	ldi	r24, 0x84	; 132
    379c:	86 bf       	out	0x36, r24	; 54

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
    379e:	06 b6       	in	r0, 0x36	; 54
    37a0:	07 fe       	sbrs	r0, 7
    37a2:	fd cf       	rjmp	.-6      	; 0x379e <_Z9i2c_writeh+0x6>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    37a4:	91 b1       	in	r25, 0x01	; 1
    37a6:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
    37a8:	81 e0       	ldi	r24, 0x01	; 1
    37aa:	98 32       	cpi	r25, 0x28	; 40
    37ac:	09 f4       	brne	.+2      	; 0x37b0 <_Z9i2c_writeh+0x18>
    37ae:	80 e0       	ldi	r24, 0x00	; 0
	return 0;

}/* i2c_write */
    37b0:	08 95       	ret

000037b2 <_Z11i2c_readAckv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    37b2:	84 ec       	ldi	r24, 0xC4	; 196
    37b4:	86 bf       	out	0x36, r24	; 54
	while(!(TWCR & (1<<TWINT)));    
    37b6:	06 b6       	in	r0, 0x36	; 54
    37b8:	07 fe       	sbrs	r0, 7
    37ba:	fd cf       	rjmp	.-6      	; 0x37b6 <_Z11i2c_readAckv+0x4>

    return TWDR;
    37bc:	83 b1       	in	r24, 0x03	; 3

}/* i2c_readAck */
    37be:	08 95       	ret

000037c0 <_Z11i2c_readNakv>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
    37c0:	84 e8       	ldi	r24, 0x84	; 132
    37c2:	86 bf       	out	0x36, r24	; 54
	while(!(TWCR & (1<<TWINT)));
    37c4:	06 b6       	in	r0, 0x36	; 54
    37c6:	07 fe       	sbrs	r0, 7
    37c8:	fd cf       	rjmp	.-6      	; 0x37c4 <_Z11i2c_readNakv+0x4>
	
    return TWDR;
    37ca:	83 b1       	in	r24, 0x03	; 3

    37cc:	08 95       	ret

000037ce <__subsf3>:
    37ce:	50 58       	subi	r21, 0x80	; 128

000037d0 <__addsf3>:
    37d0:	bb 27       	eor	r27, r27
    37d2:	aa 27       	eor	r26, r26
    37d4:	0e d0       	rcall	.+28     	; 0x37f2 <__addsf3x>
    37d6:	27 c2       	rjmp	.+1102   	; 0x3c26 <__fp_round>
    37d8:	f0 d1       	rcall	.+992    	; 0x3bba <__fp_pscA>
    37da:	30 f0       	brcs	.+12     	; 0x37e8 <__addsf3+0x18>
    37dc:	f5 d1       	rcall	.+1002   	; 0x3bc8 <__fp_pscB>
    37de:	20 f0       	brcs	.+8      	; 0x37e8 <__addsf3+0x18>
    37e0:	31 f4       	brne	.+12     	; 0x37ee <__addsf3+0x1e>
    37e2:	9f 3f       	cpi	r25, 0xFF	; 255
    37e4:	11 f4       	brne	.+4      	; 0x37ea <__addsf3+0x1a>
    37e6:	1e f4       	brtc	.+6      	; 0x37ee <__addsf3+0x1e>
    37e8:	c0 c1       	rjmp	.+896    	; 0x3b6a <__fp_nan>
    37ea:	0e f4       	brtc	.+2      	; 0x37ee <__addsf3+0x1e>
    37ec:	e0 95       	com	r30
    37ee:	e7 fb       	bst	r30, 7
    37f0:	b6 c1       	rjmp	.+876    	; 0x3b5e <__fp_inf>

000037f2 <__addsf3x>:
    37f2:	e9 2f       	mov	r30, r25
    37f4:	3a d2       	rcall	.+1140   	; 0x3c6a <__fp_split3>
    37f6:	80 f3       	brcs	.-32     	; 0x37d8 <__addsf3+0x8>
    37f8:	ba 17       	cp	r27, r26
    37fa:	62 07       	cpc	r22, r18
    37fc:	73 07       	cpc	r23, r19
    37fe:	84 07       	cpc	r24, r20
    3800:	95 07       	cpc	r25, r21
    3802:	18 f0       	brcs	.+6      	; 0x380a <__addsf3x+0x18>
    3804:	71 f4       	brne	.+28     	; 0x3822 <__addsf3x+0x30>
    3806:	9e f5       	brtc	.+102    	; 0x386e <__addsf3x+0x7c>
    3808:	52 c2       	rjmp	.+1188   	; 0x3cae <__fp_zero>
    380a:	0e f4       	brtc	.+2      	; 0x380e <__addsf3x+0x1c>
    380c:	e0 95       	com	r30
    380e:	0b 2e       	mov	r0, r27
    3810:	ba 2f       	mov	r27, r26
    3812:	a0 2d       	mov	r26, r0
    3814:	0b 01       	movw	r0, r22
    3816:	b9 01       	movw	r22, r18
    3818:	90 01       	movw	r18, r0
    381a:	0c 01       	movw	r0, r24
    381c:	ca 01       	movw	r24, r20
    381e:	a0 01       	movw	r20, r0
    3820:	11 24       	eor	r1, r1
    3822:	ff 27       	eor	r31, r31
    3824:	59 1b       	sub	r21, r25
    3826:	99 f0       	breq	.+38     	; 0x384e <__addsf3x+0x5c>
    3828:	59 3f       	cpi	r21, 0xF9	; 249
    382a:	50 f4       	brcc	.+20     	; 0x3840 <__addsf3x+0x4e>
    382c:	50 3e       	cpi	r21, 0xE0	; 224
    382e:	68 f1       	brcs	.+90     	; 0x388a <__addsf3x+0x98>
    3830:	1a 16       	cp	r1, r26
    3832:	f0 40       	sbci	r31, 0x00	; 0
    3834:	a2 2f       	mov	r26, r18
    3836:	23 2f       	mov	r18, r19
    3838:	34 2f       	mov	r19, r20
    383a:	44 27       	eor	r20, r20
    383c:	58 5f       	subi	r21, 0xF8	; 248
    383e:	f3 cf       	rjmp	.-26     	; 0x3826 <__addsf3x+0x34>
    3840:	46 95       	lsr	r20
    3842:	37 95       	ror	r19
    3844:	27 95       	ror	r18
    3846:	a7 95       	ror	r26
    3848:	f0 40       	sbci	r31, 0x00	; 0
    384a:	53 95       	inc	r21
    384c:	c9 f7       	brne	.-14     	; 0x3840 <__addsf3x+0x4e>
    384e:	7e f4       	brtc	.+30     	; 0x386e <__addsf3x+0x7c>
    3850:	1f 16       	cp	r1, r31
    3852:	ba 0b       	sbc	r27, r26
    3854:	62 0b       	sbc	r22, r18
    3856:	73 0b       	sbc	r23, r19
    3858:	84 0b       	sbc	r24, r20
    385a:	ba f0       	brmi	.+46     	; 0x388a <__addsf3x+0x98>
    385c:	91 50       	subi	r25, 0x01	; 1
    385e:	a1 f0       	breq	.+40     	; 0x3888 <__addsf3x+0x96>
    3860:	ff 0f       	add	r31, r31
    3862:	bb 1f       	adc	r27, r27
    3864:	66 1f       	adc	r22, r22
    3866:	77 1f       	adc	r23, r23
    3868:	88 1f       	adc	r24, r24
    386a:	c2 f7       	brpl	.-16     	; 0x385c <__addsf3x+0x6a>
    386c:	0e c0       	rjmp	.+28     	; 0x388a <__addsf3x+0x98>
    386e:	ba 0f       	add	r27, r26
    3870:	62 1f       	adc	r22, r18
    3872:	73 1f       	adc	r23, r19
    3874:	84 1f       	adc	r24, r20
    3876:	48 f4       	brcc	.+18     	; 0x388a <__addsf3x+0x98>
    3878:	87 95       	ror	r24
    387a:	77 95       	ror	r23
    387c:	67 95       	ror	r22
    387e:	b7 95       	ror	r27
    3880:	f7 95       	ror	r31
    3882:	9e 3f       	cpi	r25, 0xFE	; 254
    3884:	08 f0       	brcs	.+2      	; 0x3888 <__addsf3x+0x96>
    3886:	b3 cf       	rjmp	.-154    	; 0x37ee <__addsf3+0x1e>
    3888:	93 95       	inc	r25
    388a:	88 0f       	add	r24, r24
    388c:	08 f0       	brcs	.+2      	; 0x3890 <__addsf3x+0x9e>
    388e:	99 27       	eor	r25, r25
    3890:	ee 0f       	add	r30, r30
    3892:	97 95       	ror	r25
    3894:	87 95       	ror	r24
    3896:	08 95       	ret
    3898:	90 d1       	rcall	.+800    	; 0x3bba <__fp_pscA>
    389a:	58 f0       	brcs	.+22     	; 0x38b2 <__addsf3x+0xc0>
    389c:	80 e8       	ldi	r24, 0x80	; 128
    389e:	91 e0       	ldi	r25, 0x01	; 1
    38a0:	09 f4       	brne	.+2      	; 0x38a4 <__addsf3x+0xb2>
    38a2:	9e ef       	ldi	r25, 0xFE	; 254
    38a4:	91 d1       	rcall	.+802    	; 0x3bc8 <__fp_pscB>
    38a6:	28 f0       	brcs	.+10     	; 0x38b2 <__addsf3x+0xc0>
    38a8:	40 e8       	ldi	r20, 0x80	; 128
    38aa:	51 e0       	ldi	r21, 0x01	; 1
    38ac:	59 f4       	brne	.+22     	; 0x38c4 <atan2+0xe>
    38ae:	5e ef       	ldi	r21, 0xFE	; 254
    38b0:	09 c0       	rjmp	.+18     	; 0x38c4 <atan2+0xe>
    38b2:	5b c1       	rjmp	.+694    	; 0x3b6a <__fp_nan>
    38b4:	fc c1       	rjmp	.+1016   	; 0x3cae <__fp_zero>

000038b6 <atan2>:
    38b6:	e9 2f       	mov	r30, r25
    38b8:	e0 78       	andi	r30, 0x80	; 128
    38ba:	d7 d1       	rcall	.+942    	; 0x3c6a <__fp_split3>
    38bc:	68 f3       	brcs	.-38     	; 0x3898 <__addsf3x+0xa6>
    38be:	09 2e       	mov	r0, r25
    38c0:	05 2a       	or	r0, r21
    38c2:	c1 f3       	breq	.-16     	; 0x38b4 <__addsf3x+0xc2>
    38c4:	26 17       	cp	r18, r22
    38c6:	37 07       	cpc	r19, r23
    38c8:	48 07       	cpc	r20, r24
    38ca:	59 07       	cpc	r21, r25
    38cc:	38 f0       	brcs	.+14     	; 0x38dc <atan2+0x26>
    38ce:	0e 2e       	mov	r0, r30
    38d0:	07 f8       	bld	r0, 7
    38d2:	e0 25       	eor	r30, r0
    38d4:	69 f0       	breq	.+26     	; 0x38f0 <atan2+0x3a>
    38d6:	e0 25       	eor	r30, r0
    38d8:	e0 64       	ori	r30, 0x40	; 64
    38da:	0a c0       	rjmp	.+20     	; 0x38f0 <atan2+0x3a>
    38dc:	ef 63       	ori	r30, 0x3F	; 63
    38de:	07 f8       	bld	r0, 7
    38e0:	00 94       	com	r0
    38e2:	07 fa       	bst	r0, 7
    38e4:	db 01       	movw	r26, r22
    38e6:	b9 01       	movw	r22, r18
    38e8:	9d 01       	movw	r18, r26
    38ea:	dc 01       	movw	r26, r24
    38ec:	ca 01       	movw	r24, r20
    38ee:	ad 01       	movw	r20, r26
    38f0:	ef 93       	push	r30
    38f2:	4a d0       	rcall	.+148    	; 0x3988 <__divsf3_pse>
    38f4:	98 d1       	rcall	.+816    	; 0x3c26 <__fp_round>
    38f6:	0a d0       	rcall	.+20     	; 0x390c <atan>
    38f8:	5f 91       	pop	r21
    38fa:	55 23       	and	r21, r21
    38fc:	31 f0       	breq	.+12     	; 0x390a <atan2+0x54>
    38fe:	2b ed       	ldi	r18, 0xDB	; 219
    3900:	3f e0       	ldi	r19, 0x0F	; 15
    3902:	49 e4       	ldi	r20, 0x49	; 73
    3904:	50 fd       	sbrc	r21, 0
    3906:	49 ec       	ldi	r20, 0xC9	; 201
    3908:	63 cf       	rjmp	.-314    	; 0x37d0 <__addsf3>
    390a:	08 95       	ret

0000390c <atan>:
    390c:	df 93       	push	r29
    390e:	dd 27       	eor	r29, r29
    3910:	b9 2f       	mov	r27, r25
    3912:	bf 77       	andi	r27, 0x7F	; 127
    3914:	40 e8       	ldi	r20, 0x80	; 128
    3916:	5f e3       	ldi	r21, 0x3F	; 63
    3918:	16 16       	cp	r1, r22
    391a:	17 06       	cpc	r1, r23
    391c:	48 07       	cpc	r20, r24
    391e:	5b 07       	cpc	r21, r27
    3920:	10 f4       	brcc	.+4      	; 0x3926 <atan+0x1a>
    3922:	d9 2f       	mov	r29, r25
    3924:	cf d1       	rcall	.+926    	; 0x3cc4 <inverse>
    3926:	9f 93       	push	r25
    3928:	8f 93       	push	r24
    392a:	7f 93       	push	r23
    392c:	6f 93       	push	r22
    392e:	c8 d2       	rcall	.+1424   	; 0x3ec0 <square>
    3930:	e4 e5       	ldi	r30, 0x54	; 84
    3932:	f0 e0       	ldi	r31, 0x00	; 0
    3934:	1d d1       	rcall	.+570    	; 0x3b70 <__fp_powser>
    3936:	77 d1       	rcall	.+750    	; 0x3c26 <__fp_round>
    3938:	2f 91       	pop	r18
    393a:	3f 91       	pop	r19
    393c:	4f 91       	pop	r20
    393e:	5f 91       	pop	r21
    3940:	d4 d1       	rcall	.+936    	; 0x3cea <__mulsf3x>
    3942:	dd 23       	and	r29, r29
    3944:	49 f0       	breq	.+18     	; 0x3958 <atan+0x4c>
    3946:	90 58       	subi	r25, 0x80	; 128
    3948:	a2 ea       	ldi	r26, 0xA2	; 162
    394a:	2a ed       	ldi	r18, 0xDA	; 218
    394c:	3f e0       	ldi	r19, 0x0F	; 15
    394e:	49 ec       	ldi	r20, 0xC9	; 201
    3950:	5f e3       	ldi	r21, 0x3F	; 63
    3952:	d0 78       	andi	r29, 0x80	; 128
    3954:	5d 27       	eor	r21, r29
    3956:	4d df       	rcall	.-358    	; 0x37f2 <__addsf3x>
    3958:	df 91       	pop	r29
    395a:	65 c1       	rjmp	.+714    	; 0x3c26 <__fp_round>

0000395c <__cmpsf2>:
    395c:	dc d0       	rcall	.+440    	; 0x3b16 <__fp_cmp>
    395e:	08 f4       	brcc	.+2      	; 0x3962 <__cmpsf2+0x6>
    3960:	81 e0       	ldi	r24, 0x01	; 1
    3962:	08 95       	ret

00003964 <cos>:
    3964:	39 d1       	rcall	.+626    	; 0x3bd8 <__fp_rempio2>
    3966:	e3 95       	inc	r30
    3968:	6f c1       	rjmp	.+734    	; 0x3c48 <__fp_sinus>

0000396a <__divsf3>:
    396a:	0c d0       	rcall	.+24     	; 0x3984 <__divsf3x>
    396c:	5c c1       	rjmp	.+696    	; 0x3c26 <__fp_round>
    396e:	2c d1       	rcall	.+600    	; 0x3bc8 <__fp_pscB>
    3970:	40 f0       	brcs	.+16     	; 0x3982 <__divsf3+0x18>
    3972:	23 d1       	rcall	.+582    	; 0x3bba <__fp_pscA>
    3974:	30 f0       	brcs	.+12     	; 0x3982 <__divsf3+0x18>
    3976:	21 f4       	brne	.+8      	; 0x3980 <__divsf3+0x16>
    3978:	5f 3f       	cpi	r21, 0xFF	; 255
    397a:	19 f0       	breq	.+6      	; 0x3982 <__divsf3+0x18>
    397c:	f0 c0       	rjmp	.+480    	; 0x3b5e <__fp_inf>
    397e:	51 11       	cpse	r21, r1
    3980:	97 c1       	rjmp	.+814    	; 0x3cb0 <__fp_szero>
    3982:	f3 c0       	rjmp	.+486    	; 0x3b6a <__fp_nan>

00003984 <__divsf3x>:
    3984:	72 d1       	rcall	.+740    	; 0x3c6a <__fp_split3>
    3986:	98 f3       	brcs	.-26     	; 0x396e <__divsf3+0x4>

00003988 <__divsf3_pse>:
    3988:	99 23       	and	r25, r25
    398a:	c9 f3       	breq	.-14     	; 0x397e <__divsf3+0x14>
    398c:	55 23       	and	r21, r21
    398e:	b1 f3       	breq	.-20     	; 0x397c <__divsf3+0x12>
    3990:	95 1b       	sub	r25, r21
    3992:	55 0b       	sbc	r21, r21
    3994:	bb 27       	eor	r27, r27
    3996:	aa 27       	eor	r26, r26
    3998:	62 17       	cp	r22, r18
    399a:	73 07       	cpc	r23, r19
    399c:	84 07       	cpc	r24, r20
    399e:	38 f0       	brcs	.+14     	; 0x39ae <__divsf3_pse+0x26>
    39a0:	9f 5f       	subi	r25, 0xFF	; 255
    39a2:	5f 4f       	sbci	r21, 0xFF	; 255
    39a4:	22 0f       	add	r18, r18
    39a6:	33 1f       	adc	r19, r19
    39a8:	44 1f       	adc	r20, r20
    39aa:	aa 1f       	adc	r26, r26
    39ac:	a9 f3       	breq	.-22     	; 0x3998 <__divsf3_pse+0x10>
    39ae:	33 d0       	rcall	.+102    	; 0x3a16 <__divsf3_pse+0x8e>
    39b0:	0e 2e       	mov	r0, r30
    39b2:	3a f0       	brmi	.+14     	; 0x39c2 <__divsf3_pse+0x3a>
    39b4:	e0 e8       	ldi	r30, 0x80	; 128
    39b6:	30 d0       	rcall	.+96     	; 0x3a18 <__divsf3_pse+0x90>
    39b8:	91 50       	subi	r25, 0x01	; 1
    39ba:	50 40       	sbci	r21, 0x00	; 0
    39bc:	e6 95       	lsr	r30
    39be:	00 1c       	adc	r0, r0
    39c0:	ca f7       	brpl	.-14     	; 0x39b4 <__divsf3_pse+0x2c>
    39c2:	29 d0       	rcall	.+82     	; 0x3a16 <__divsf3_pse+0x8e>
    39c4:	fe 2f       	mov	r31, r30
    39c6:	27 d0       	rcall	.+78     	; 0x3a16 <__divsf3_pse+0x8e>
    39c8:	66 0f       	add	r22, r22
    39ca:	77 1f       	adc	r23, r23
    39cc:	88 1f       	adc	r24, r24
    39ce:	bb 1f       	adc	r27, r27
    39d0:	26 17       	cp	r18, r22
    39d2:	37 07       	cpc	r19, r23
    39d4:	48 07       	cpc	r20, r24
    39d6:	ab 07       	cpc	r26, r27
    39d8:	b0 e8       	ldi	r27, 0x80	; 128
    39da:	09 f0       	breq	.+2      	; 0x39de <__divsf3_pse+0x56>
    39dc:	bb 0b       	sbc	r27, r27
    39de:	80 2d       	mov	r24, r0
    39e0:	bf 01       	movw	r22, r30
    39e2:	ff 27       	eor	r31, r31
    39e4:	93 58       	subi	r25, 0x83	; 131
    39e6:	5f 4f       	sbci	r21, 0xFF	; 255
    39e8:	2a f0       	brmi	.+10     	; 0x39f4 <__divsf3_pse+0x6c>
    39ea:	9e 3f       	cpi	r25, 0xFE	; 254
    39ec:	51 05       	cpc	r21, r1
    39ee:	68 f0       	brcs	.+26     	; 0x3a0a <__divsf3_pse+0x82>
    39f0:	b6 c0       	rjmp	.+364    	; 0x3b5e <__fp_inf>
    39f2:	5e c1       	rjmp	.+700    	; 0x3cb0 <__fp_szero>
    39f4:	5f 3f       	cpi	r21, 0xFF	; 255
    39f6:	ec f3       	brlt	.-6      	; 0x39f2 <__divsf3_pse+0x6a>
    39f8:	98 3e       	cpi	r25, 0xE8	; 232
    39fa:	dc f3       	brlt	.-10     	; 0x39f2 <__divsf3_pse+0x6a>
    39fc:	86 95       	lsr	r24
    39fe:	77 95       	ror	r23
    3a00:	67 95       	ror	r22
    3a02:	b7 95       	ror	r27
    3a04:	f7 95       	ror	r31
    3a06:	9f 5f       	subi	r25, 0xFF	; 255
    3a08:	c9 f7       	brne	.-14     	; 0x39fc <__divsf3_pse+0x74>
    3a0a:	88 0f       	add	r24, r24
    3a0c:	91 1d       	adc	r25, r1
    3a0e:	96 95       	lsr	r25
    3a10:	87 95       	ror	r24
    3a12:	97 f9       	bld	r25, 7
    3a14:	08 95       	ret
    3a16:	e1 e0       	ldi	r30, 0x01	; 1
    3a18:	66 0f       	add	r22, r22
    3a1a:	77 1f       	adc	r23, r23
    3a1c:	88 1f       	adc	r24, r24
    3a1e:	bb 1f       	adc	r27, r27
    3a20:	62 17       	cp	r22, r18
    3a22:	73 07       	cpc	r23, r19
    3a24:	84 07       	cpc	r24, r20
    3a26:	ba 07       	cpc	r27, r26
    3a28:	20 f0       	brcs	.+8      	; 0x3a32 <__divsf3_pse+0xaa>
    3a2a:	62 1b       	sub	r22, r18
    3a2c:	73 0b       	sbc	r23, r19
    3a2e:	84 0b       	sbc	r24, r20
    3a30:	ba 0b       	sbc	r27, r26
    3a32:	ee 1f       	adc	r30, r30
    3a34:	88 f7       	brcc	.-30     	; 0x3a18 <__divsf3_pse+0x90>
    3a36:	e0 95       	com	r30
    3a38:	08 95       	ret

00003a3a <__fixsfsi>:
    3a3a:	04 d0       	rcall	.+8      	; 0x3a44 <__fixunssfsi>
    3a3c:	68 94       	set
    3a3e:	b1 11       	cpse	r27, r1
    3a40:	37 c1       	rjmp	.+622    	; 0x3cb0 <__fp_szero>
    3a42:	08 95       	ret

00003a44 <__fixunssfsi>:
    3a44:	1a d1       	rcall	.+564    	; 0x3c7a <__fp_splitA>
    3a46:	88 f0       	brcs	.+34     	; 0x3a6a <__fixunssfsi+0x26>
    3a48:	9f 57       	subi	r25, 0x7F	; 127
    3a4a:	90 f0       	brcs	.+36     	; 0x3a70 <__fixunssfsi+0x2c>
    3a4c:	b9 2f       	mov	r27, r25
    3a4e:	99 27       	eor	r25, r25
    3a50:	b7 51       	subi	r27, 0x17	; 23
    3a52:	a0 f0       	brcs	.+40     	; 0x3a7c <__fixunssfsi+0x38>
    3a54:	d1 f0       	breq	.+52     	; 0x3a8a <__fixunssfsi+0x46>
    3a56:	66 0f       	add	r22, r22
    3a58:	77 1f       	adc	r23, r23
    3a5a:	88 1f       	adc	r24, r24
    3a5c:	99 1f       	adc	r25, r25
    3a5e:	1a f0       	brmi	.+6      	; 0x3a66 <__fixunssfsi+0x22>
    3a60:	ba 95       	dec	r27
    3a62:	c9 f7       	brne	.-14     	; 0x3a56 <__fixunssfsi+0x12>
    3a64:	12 c0       	rjmp	.+36     	; 0x3a8a <__fixunssfsi+0x46>
    3a66:	b1 30       	cpi	r27, 0x01	; 1
    3a68:	81 f0       	breq	.+32     	; 0x3a8a <__fixunssfsi+0x46>
    3a6a:	21 d1       	rcall	.+578    	; 0x3cae <__fp_zero>
    3a6c:	b1 e0       	ldi	r27, 0x01	; 1
    3a6e:	08 95       	ret
    3a70:	1e c1       	rjmp	.+572    	; 0x3cae <__fp_zero>
    3a72:	67 2f       	mov	r22, r23
    3a74:	78 2f       	mov	r23, r24
    3a76:	88 27       	eor	r24, r24
    3a78:	b8 5f       	subi	r27, 0xF8	; 248
    3a7a:	39 f0       	breq	.+14     	; 0x3a8a <__fixunssfsi+0x46>
    3a7c:	b9 3f       	cpi	r27, 0xF9	; 249
    3a7e:	cc f3       	brlt	.-14     	; 0x3a72 <__fixunssfsi+0x2e>
    3a80:	86 95       	lsr	r24
    3a82:	77 95       	ror	r23
    3a84:	67 95       	ror	r22
    3a86:	b3 95       	inc	r27
    3a88:	d9 f7       	brne	.-10     	; 0x3a80 <__fixunssfsi+0x3c>
    3a8a:	3e f4       	brtc	.+14     	; 0x3a9a <__fixunssfsi+0x56>
    3a8c:	90 95       	com	r25
    3a8e:	80 95       	com	r24
    3a90:	70 95       	com	r23
    3a92:	61 95       	neg	r22
    3a94:	7f 4f       	sbci	r23, 0xFF	; 255
    3a96:	8f 4f       	sbci	r24, 0xFF	; 255
    3a98:	9f 4f       	sbci	r25, 0xFF	; 255
    3a9a:	08 95       	ret

00003a9c <__floatunsisf>:
    3a9c:	e8 94       	clt
    3a9e:	09 c0       	rjmp	.+18     	; 0x3ab2 <__floatsisf+0x12>

00003aa0 <__floatsisf>:
    3aa0:	97 fb       	bst	r25, 7
    3aa2:	3e f4       	brtc	.+14     	; 0x3ab2 <__floatsisf+0x12>
    3aa4:	90 95       	com	r25
    3aa6:	80 95       	com	r24
    3aa8:	70 95       	com	r23
    3aaa:	61 95       	neg	r22
    3aac:	7f 4f       	sbci	r23, 0xFF	; 255
    3aae:	8f 4f       	sbci	r24, 0xFF	; 255
    3ab0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ab2:	99 23       	and	r25, r25
    3ab4:	a9 f0       	breq	.+42     	; 0x3ae0 <__floatsisf+0x40>
    3ab6:	f9 2f       	mov	r31, r25
    3ab8:	96 e9       	ldi	r25, 0x96	; 150
    3aba:	bb 27       	eor	r27, r27
    3abc:	93 95       	inc	r25
    3abe:	f6 95       	lsr	r31
    3ac0:	87 95       	ror	r24
    3ac2:	77 95       	ror	r23
    3ac4:	67 95       	ror	r22
    3ac6:	b7 95       	ror	r27
    3ac8:	f1 11       	cpse	r31, r1
    3aca:	f8 cf       	rjmp	.-16     	; 0x3abc <__floatsisf+0x1c>
    3acc:	fa f4       	brpl	.+62     	; 0x3b0c <__floatsisf+0x6c>
    3ace:	bb 0f       	add	r27, r27
    3ad0:	11 f4       	brne	.+4      	; 0x3ad6 <__floatsisf+0x36>
    3ad2:	60 ff       	sbrs	r22, 0
    3ad4:	1b c0       	rjmp	.+54     	; 0x3b0c <__floatsisf+0x6c>
    3ad6:	6f 5f       	subi	r22, 0xFF	; 255
    3ad8:	7f 4f       	sbci	r23, 0xFF	; 255
    3ada:	8f 4f       	sbci	r24, 0xFF	; 255
    3adc:	9f 4f       	sbci	r25, 0xFF	; 255
    3ade:	16 c0       	rjmp	.+44     	; 0x3b0c <__floatsisf+0x6c>
    3ae0:	88 23       	and	r24, r24
    3ae2:	11 f0       	breq	.+4      	; 0x3ae8 <__floatsisf+0x48>
    3ae4:	96 e9       	ldi	r25, 0x96	; 150
    3ae6:	11 c0       	rjmp	.+34     	; 0x3b0a <__floatsisf+0x6a>
    3ae8:	77 23       	and	r23, r23
    3aea:	21 f0       	breq	.+8      	; 0x3af4 <__floatsisf+0x54>
    3aec:	9e e8       	ldi	r25, 0x8E	; 142
    3aee:	87 2f       	mov	r24, r23
    3af0:	76 2f       	mov	r23, r22
    3af2:	05 c0       	rjmp	.+10     	; 0x3afe <__floatsisf+0x5e>
    3af4:	66 23       	and	r22, r22
    3af6:	71 f0       	breq	.+28     	; 0x3b14 <__floatsisf+0x74>
    3af8:	96 e8       	ldi	r25, 0x86	; 134
    3afa:	86 2f       	mov	r24, r22
    3afc:	70 e0       	ldi	r23, 0x00	; 0
    3afe:	60 e0       	ldi	r22, 0x00	; 0
    3b00:	2a f0       	brmi	.+10     	; 0x3b0c <__floatsisf+0x6c>
    3b02:	9a 95       	dec	r25
    3b04:	66 0f       	add	r22, r22
    3b06:	77 1f       	adc	r23, r23
    3b08:	88 1f       	adc	r24, r24
    3b0a:	da f7       	brpl	.-10     	; 0x3b02 <__floatsisf+0x62>
    3b0c:	88 0f       	add	r24, r24
    3b0e:	96 95       	lsr	r25
    3b10:	87 95       	ror	r24
    3b12:	97 f9       	bld	r25, 7
    3b14:	08 95       	ret

00003b16 <__fp_cmp>:
    3b16:	99 0f       	add	r25, r25
    3b18:	00 08       	sbc	r0, r0
    3b1a:	55 0f       	add	r21, r21
    3b1c:	aa 0b       	sbc	r26, r26
    3b1e:	e0 e8       	ldi	r30, 0x80	; 128
    3b20:	fe ef       	ldi	r31, 0xFE	; 254
    3b22:	16 16       	cp	r1, r22
    3b24:	17 06       	cpc	r1, r23
    3b26:	e8 07       	cpc	r30, r24
    3b28:	f9 07       	cpc	r31, r25
    3b2a:	c0 f0       	brcs	.+48     	; 0x3b5c <__fp_cmp+0x46>
    3b2c:	12 16       	cp	r1, r18
    3b2e:	13 06       	cpc	r1, r19
    3b30:	e4 07       	cpc	r30, r20
    3b32:	f5 07       	cpc	r31, r21
    3b34:	98 f0       	brcs	.+38     	; 0x3b5c <__fp_cmp+0x46>
    3b36:	62 1b       	sub	r22, r18
    3b38:	73 0b       	sbc	r23, r19
    3b3a:	84 0b       	sbc	r24, r20
    3b3c:	95 0b       	sbc	r25, r21
    3b3e:	39 f4       	brne	.+14     	; 0x3b4e <__fp_cmp+0x38>
    3b40:	0a 26       	eor	r0, r26
    3b42:	61 f0       	breq	.+24     	; 0x3b5c <__fp_cmp+0x46>
    3b44:	23 2b       	or	r18, r19
    3b46:	24 2b       	or	r18, r20
    3b48:	25 2b       	or	r18, r21
    3b4a:	21 f4       	brne	.+8      	; 0x3b54 <__fp_cmp+0x3e>
    3b4c:	08 95       	ret
    3b4e:	0a 26       	eor	r0, r26
    3b50:	09 f4       	brne	.+2      	; 0x3b54 <__fp_cmp+0x3e>
    3b52:	a1 40       	sbci	r26, 0x01	; 1
    3b54:	a6 95       	lsr	r26
    3b56:	8f ef       	ldi	r24, 0xFF	; 255
    3b58:	81 1d       	adc	r24, r1
    3b5a:	81 1d       	adc	r24, r1
    3b5c:	08 95       	ret

00003b5e <__fp_inf>:
    3b5e:	97 f9       	bld	r25, 7
    3b60:	9f 67       	ori	r25, 0x7F	; 127
    3b62:	80 e8       	ldi	r24, 0x80	; 128
    3b64:	70 e0       	ldi	r23, 0x00	; 0
    3b66:	60 e0       	ldi	r22, 0x00	; 0
    3b68:	08 95       	ret

00003b6a <__fp_nan>:
    3b6a:	9f ef       	ldi	r25, 0xFF	; 255
    3b6c:	80 ec       	ldi	r24, 0xC0	; 192
    3b6e:	08 95       	ret

00003b70 <__fp_powser>:
    3b70:	df 93       	push	r29
    3b72:	cf 93       	push	r28
    3b74:	1f 93       	push	r17
    3b76:	0f 93       	push	r16
    3b78:	ff 92       	push	r15
    3b7a:	ef 92       	push	r14
    3b7c:	df 92       	push	r13
    3b7e:	7b 01       	movw	r14, r22
    3b80:	8c 01       	movw	r16, r24
    3b82:	68 94       	set
    3b84:	05 c0       	rjmp	.+10     	; 0x3b90 <__fp_powser+0x20>
    3b86:	da 2e       	mov	r13, r26
    3b88:	ef 01       	movw	r28, r30
    3b8a:	af d0       	rcall	.+350    	; 0x3cea <__mulsf3x>
    3b8c:	fe 01       	movw	r30, r28
    3b8e:	e8 94       	clt
    3b90:	a5 91       	lpm	r26, Z+
    3b92:	25 91       	lpm	r18, Z+
    3b94:	35 91       	lpm	r19, Z+
    3b96:	45 91       	lpm	r20, Z+
    3b98:	55 91       	lpm	r21, Z+
    3b9a:	ae f3       	brts	.-22     	; 0x3b86 <__fp_powser+0x16>
    3b9c:	ef 01       	movw	r28, r30
    3b9e:	29 de       	rcall	.-942    	; 0x37f2 <__addsf3x>
    3ba0:	fe 01       	movw	r30, r28
    3ba2:	97 01       	movw	r18, r14
    3ba4:	a8 01       	movw	r20, r16
    3ba6:	da 94       	dec	r13
    3ba8:	79 f7       	brne	.-34     	; 0x3b88 <__fp_powser+0x18>
    3baa:	df 90       	pop	r13
    3bac:	ef 90       	pop	r14
    3bae:	ff 90       	pop	r15
    3bb0:	0f 91       	pop	r16
    3bb2:	1f 91       	pop	r17
    3bb4:	cf 91       	pop	r28
    3bb6:	df 91       	pop	r29
    3bb8:	08 95       	ret

00003bba <__fp_pscA>:
    3bba:	00 24       	eor	r0, r0
    3bbc:	0a 94       	dec	r0
    3bbe:	16 16       	cp	r1, r22
    3bc0:	17 06       	cpc	r1, r23
    3bc2:	18 06       	cpc	r1, r24
    3bc4:	09 06       	cpc	r0, r25
    3bc6:	08 95       	ret

00003bc8 <__fp_pscB>:
    3bc8:	00 24       	eor	r0, r0
    3bca:	0a 94       	dec	r0
    3bcc:	12 16       	cp	r1, r18
    3bce:	13 06       	cpc	r1, r19
    3bd0:	14 06       	cpc	r1, r20
    3bd2:	05 06       	cpc	r0, r21
    3bd4:	08 95       	ret
    3bd6:	c9 cf       	rjmp	.-110    	; 0x3b6a <__fp_nan>

00003bd8 <__fp_rempio2>:
    3bd8:	50 d0       	rcall	.+160    	; 0x3c7a <__fp_splitA>
    3bda:	e8 f3       	brcs	.-6      	; 0x3bd6 <__fp_pscB+0xe>
    3bdc:	e8 94       	clt
    3bde:	e0 e0       	ldi	r30, 0x00	; 0
    3be0:	bb 27       	eor	r27, r27
    3be2:	9f 57       	subi	r25, 0x7F	; 127
    3be4:	f0 f0       	brcs	.+60     	; 0x3c22 <__fp_rempio2+0x4a>
    3be6:	2a ed       	ldi	r18, 0xDA	; 218
    3be8:	3f e0       	ldi	r19, 0x0F	; 15
    3bea:	49 ec       	ldi	r20, 0xC9	; 201
    3bec:	06 c0       	rjmp	.+12     	; 0x3bfa <__fp_rempio2+0x22>
    3bee:	ee 0f       	add	r30, r30
    3bf0:	bb 0f       	add	r27, r27
    3bf2:	66 1f       	adc	r22, r22
    3bf4:	77 1f       	adc	r23, r23
    3bf6:	88 1f       	adc	r24, r24
    3bf8:	28 f0       	brcs	.+10     	; 0x3c04 <__fp_rempio2+0x2c>
    3bfa:	b2 3a       	cpi	r27, 0xA2	; 162
    3bfc:	62 07       	cpc	r22, r18
    3bfe:	73 07       	cpc	r23, r19
    3c00:	84 07       	cpc	r24, r20
    3c02:	28 f0       	brcs	.+10     	; 0x3c0e <__fp_rempio2+0x36>
    3c04:	b2 5a       	subi	r27, 0xA2	; 162
    3c06:	62 0b       	sbc	r22, r18
    3c08:	73 0b       	sbc	r23, r19
    3c0a:	84 0b       	sbc	r24, r20
    3c0c:	e3 95       	inc	r30
    3c0e:	9a 95       	dec	r25
    3c10:	72 f7       	brpl	.-36     	; 0x3bee <__fp_rempio2+0x16>
    3c12:	80 38       	cpi	r24, 0x80	; 128
    3c14:	30 f4       	brcc	.+12     	; 0x3c22 <__fp_rempio2+0x4a>
    3c16:	9a 95       	dec	r25
    3c18:	bb 0f       	add	r27, r27
    3c1a:	66 1f       	adc	r22, r22
    3c1c:	77 1f       	adc	r23, r23
    3c1e:	88 1f       	adc	r24, r24
    3c20:	d2 f7       	brpl	.-12     	; 0x3c16 <__fp_rempio2+0x3e>
    3c22:	90 48       	sbci	r25, 0x80	; 128
    3c24:	83 c1       	rjmp	.+774    	; 0x3f2c <__fp_mpack_finite>

00003c26 <__fp_round>:
    3c26:	09 2e       	mov	r0, r25
    3c28:	03 94       	inc	r0
    3c2a:	00 0c       	add	r0, r0
    3c2c:	11 f4       	brne	.+4      	; 0x3c32 <__fp_round+0xc>
    3c2e:	88 23       	and	r24, r24
    3c30:	52 f0       	brmi	.+20     	; 0x3c46 <__fp_round+0x20>
    3c32:	bb 0f       	add	r27, r27
    3c34:	40 f4       	brcc	.+16     	; 0x3c46 <__fp_round+0x20>
    3c36:	bf 2b       	or	r27, r31
    3c38:	11 f4       	brne	.+4      	; 0x3c3e <__fp_round+0x18>
    3c3a:	60 ff       	sbrs	r22, 0
    3c3c:	04 c0       	rjmp	.+8      	; 0x3c46 <__fp_round+0x20>
    3c3e:	6f 5f       	subi	r22, 0xFF	; 255
    3c40:	7f 4f       	sbci	r23, 0xFF	; 255
    3c42:	8f 4f       	sbci	r24, 0xFF	; 255
    3c44:	9f 4f       	sbci	r25, 0xFF	; 255
    3c46:	08 95       	ret

00003c48 <__fp_sinus>:
    3c48:	ef 93       	push	r30
    3c4a:	e0 ff       	sbrs	r30, 0
    3c4c:	06 c0       	rjmp	.+12     	; 0x3c5a <__fp_sinus+0x12>
    3c4e:	a2 ea       	ldi	r26, 0xA2	; 162
    3c50:	2a ed       	ldi	r18, 0xDA	; 218
    3c52:	3f e0       	ldi	r19, 0x0F	; 15
    3c54:	49 ec       	ldi	r20, 0xC9	; 201
    3c56:	5f eb       	ldi	r21, 0xBF	; 191
    3c58:	cc dd       	rcall	.-1128   	; 0x37f2 <__addsf3x>
    3c5a:	e5 df       	rcall	.-54     	; 0x3c26 <__fp_round>
    3c5c:	0f 90       	pop	r0
    3c5e:	03 94       	inc	r0
    3c60:	01 fc       	sbrc	r0, 1
    3c62:	90 58       	subi	r25, 0x80	; 128
    3c64:	e1 e8       	ldi	r30, 0x81	; 129
    3c66:	f0 e0       	ldi	r31, 0x00	; 0
    3c68:	74 c1       	rjmp	.+744    	; 0x3f52 <__fp_powsodd>

00003c6a <__fp_split3>:
    3c6a:	57 fd       	sbrc	r21, 7
    3c6c:	90 58       	subi	r25, 0x80	; 128
    3c6e:	44 0f       	add	r20, r20
    3c70:	55 1f       	adc	r21, r21
    3c72:	59 f0       	breq	.+22     	; 0x3c8a <__fp_splitA+0x10>
    3c74:	5f 3f       	cpi	r21, 0xFF	; 255
    3c76:	71 f0       	breq	.+28     	; 0x3c94 <__fp_splitA+0x1a>
    3c78:	47 95       	ror	r20

00003c7a <__fp_splitA>:
    3c7a:	88 0f       	add	r24, r24
    3c7c:	97 fb       	bst	r25, 7
    3c7e:	99 1f       	adc	r25, r25
    3c80:	61 f0       	breq	.+24     	; 0x3c9a <__fp_splitA+0x20>
    3c82:	9f 3f       	cpi	r25, 0xFF	; 255
    3c84:	79 f0       	breq	.+30     	; 0x3ca4 <__fp_splitA+0x2a>
    3c86:	87 95       	ror	r24
    3c88:	08 95       	ret
    3c8a:	12 16       	cp	r1, r18
    3c8c:	13 06       	cpc	r1, r19
    3c8e:	14 06       	cpc	r1, r20
    3c90:	55 1f       	adc	r21, r21
    3c92:	f2 cf       	rjmp	.-28     	; 0x3c78 <__fp_split3+0xe>
    3c94:	46 95       	lsr	r20
    3c96:	f1 df       	rcall	.-30     	; 0x3c7a <__fp_splitA>
    3c98:	08 c0       	rjmp	.+16     	; 0x3caa <__fp_splitA+0x30>
    3c9a:	16 16       	cp	r1, r22
    3c9c:	17 06       	cpc	r1, r23
    3c9e:	18 06       	cpc	r1, r24
    3ca0:	99 1f       	adc	r25, r25
    3ca2:	f1 cf       	rjmp	.-30     	; 0x3c86 <__fp_splitA+0xc>
    3ca4:	86 95       	lsr	r24
    3ca6:	71 05       	cpc	r23, r1
    3ca8:	61 05       	cpc	r22, r1
    3caa:	08 94       	sec
    3cac:	08 95       	ret

00003cae <__fp_zero>:
    3cae:	e8 94       	clt

00003cb0 <__fp_szero>:
    3cb0:	bb 27       	eor	r27, r27
    3cb2:	66 27       	eor	r22, r22
    3cb4:	77 27       	eor	r23, r23
    3cb6:	cb 01       	movw	r24, r22
    3cb8:	97 f9       	bld	r25, 7
    3cba:	08 95       	ret

00003cbc <__gesf2>:
    3cbc:	2c df       	rcall	.-424    	; 0x3b16 <__fp_cmp>
    3cbe:	08 f4       	brcc	.+2      	; 0x3cc2 <__gesf2+0x6>
    3cc0:	8f ef       	ldi	r24, 0xFF	; 255
    3cc2:	08 95       	ret

00003cc4 <inverse>:
    3cc4:	9b 01       	movw	r18, r22
    3cc6:	ac 01       	movw	r20, r24
    3cc8:	60 e0       	ldi	r22, 0x00	; 0
    3cca:	70 e0       	ldi	r23, 0x00	; 0
    3ccc:	80 e8       	ldi	r24, 0x80	; 128
    3cce:	9f e3       	ldi	r25, 0x3F	; 63
    3cd0:	4c ce       	rjmp	.-872    	; 0x396a <__divsf3>

00003cd2 <__mulsf3>:
    3cd2:	0b d0       	rcall	.+22     	; 0x3cea <__mulsf3x>
    3cd4:	a8 cf       	rjmp	.-176    	; 0x3c26 <__fp_round>
    3cd6:	71 df       	rcall	.-286    	; 0x3bba <__fp_pscA>
    3cd8:	28 f0       	brcs	.+10     	; 0x3ce4 <__mulsf3+0x12>
    3cda:	76 df       	rcall	.-276    	; 0x3bc8 <__fp_pscB>
    3cdc:	18 f0       	brcs	.+6      	; 0x3ce4 <__mulsf3+0x12>
    3cde:	95 23       	and	r25, r21
    3ce0:	09 f0       	breq	.+2      	; 0x3ce4 <__mulsf3+0x12>
    3ce2:	3d cf       	rjmp	.-390    	; 0x3b5e <__fp_inf>
    3ce4:	42 cf       	rjmp	.-380    	; 0x3b6a <__fp_nan>
    3ce6:	11 24       	eor	r1, r1
    3ce8:	e3 cf       	rjmp	.-58     	; 0x3cb0 <__fp_szero>

00003cea <__mulsf3x>:
    3cea:	bf df       	rcall	.-130    	; 0x3c6a <__fp_split3>
    3cec:	a0 f3       	brcs	.-24     	; 0x3cd6 <__mulsf3+0x4>

00003cee <__mulsf3_pse>:
    3cee:	95 9f       	mul	r25, r21
    3cf0:	d1 f3       	breq	.-12     	; 0x3ce6 <__mulsf3+0x14>
    3cf2:	95 0f       	add	r25, r21
    3cf4:	50 e0       	ldi	r21, 0x00	; 0
    3cf6:	55 1f       	adc	r21, r21
    3cf8:	62 9f       	mul	r22, r18
    3cfa:	f0 01       	movw	r30, r0
    3cfc:	72 9f       	mul	r23, r18
    3cfe:	bb 27       	eor	r27, r27
    3d00:	f0 0d       	add	r31, r0
    3d02:	b1 1d       	adc	r27, r1
    3d04:	63 9f       	mul	r22, r19
    3d06:	aa 27       	eor	r26, r26
    3d08:	f0 0d       	add	r31, r0
    3d0a:	b1 1d       	adc	r27, r1
    3d0c:	aa 1f       	adc	r26, r26
    3d0e:	64 9f       	mul	r22, r20
    3d10:	66 27       	eor	r22, r22
    3d12:	b0 0d       	add	r27, r0
    3d14:	a1 1d       	adc	r26, r1
    3d16:	66 1f       	adc	r22, r22
    3d18:	82 9f       	mul	r24, r18
    3d1a:	22 27       	eor	r18, r18
    3d1c:	b0 0d       	add	r27, r0
    3d1e:	a1 1d       	adc	r26, r1
    3d20:	62 1f       	adc	r22, r18
    3d22:	73 9f       	mul	r23, r19
    3d24:	b0 0d       	add	r27, r0
    3d26:	a1 1d       	adc	r26, r1
    3d28:	62 1f       	adc	r22, r18
    3d2a:	83 9f       	mul	r24, r19
    3d2c:	a0 0d       	add	r26, r0
    3d2e:	61 1d       	adc	r22, r1
    3d30:	22 1f       	adc	r18, r18
    3d32:	74 9f       	mul	r23, r20
    3d34:	33 27       	eor	r19, r19
    3d36:	a0 0d       	add	r26, r0
    3d38:	61 1d       	adc	r22, r1
    3d3a:	23 1f       	adc	r18, r19
    3d3c:	84 9f       	mul	r24, r20
    3d3e:	60 0d       	add	r22, r0
    3d40:	21 1d       	adc	r18, r1
    3d42:	82 2f       	mov	r24, r18
    3d44:	76 2f       	mov	r23, r22
    3d46:	6a 2f       	mov	r22, r26
    3d48:	11 24       	eor	r1, r1
    3d4a:	9f 57       	subi	r25, 0x7F	; 127
    3d4c:	50 40       	sbci	r21, 0x00	; 0
    3d4e:	8a f0       	brmi	.+34     	; 0x3d72 <__mulsf3_pse+0x84>
    3d50:	e1 f0       	breq	.+56     	; 0x3d8a <__mulsf3_pse+0x9c>
    3d52:	88 23       	and	r24, r24
    3d54:	4a f0       	brmi	.+18     	; 0x3d68 <__mulsf3_pse+0x7a>
    3d56:	ee 0f       	add	r30, r30
    3d58:	ff 1f       	adc	r31, r31
    3d5a:	bb 1f       	adc	r27, r27
    3d5c:	66 1f       	adc	r22, r22
    3d5e:	77 1f       	adc	r23, r23
    3d60:	88 1f       	adc	r24, r24
    3d62:	91 50       	subi	r25, 0x01	; 1
    3d64:	50 40       	sbci	r21, 0x00	; 0
    3d66:	a9 f7       	brne	.-22     	; 0x3d52 <__mulsf3_pse+0x64>
    3d68:	9e 3f       	cpi	r25, 0xFE	; 254
    3d6a:	51 05       	cpc	r21, r1
    3d6c:	70 f0       	brcs	.+28     	; 0x3d8a <__mulsf3_pse+0x9c>
    3d6e:	f7 ce       	rjmp	.-530    	; 0x3b5e <__fp_inf>
    3d70:	9f cf       	rjmp	.-194    	; 0x3cb0 <__fp_szero>
    3d72:	5f 3f       	cpi	r21, 0xFF	; 255
    3d74:	ec f3       	brlt	.-6      	; 0x3d70 <__mulsf3_pse+0x82>
    3d76:	98 3e       	cpi	r25, 0xE8	; 232
    3d78:	dc f3       	brlt	.-10     	; 0x3d70 <__mulsf3_pse+0x82>
    3d7a:	86 95       	lsr	r24
    3d7c:	77 95       	ror	r23
    3d7e:	67 95       	ror	r22
    3d80:	b7 95       	ror	r27
    3d82:	f7 95       	ror	r31
    3d84:	e7 95       	ror	r30
    3d86:	9f 5f       	subi	r25, 0xFF	; 255
    3d88:	c1 f7       	brne	.-16     	; 0x3d7a <__mulsf3_pse+0x8c>
    3d8a:	fe 2b       	or	r31, r30
    3d8c:	88 0f       	add	r24, r24
    3d8e:	91 1d       	adc	r25, r1
    3d90:	96 95       	lsr	r25
    3d92:	87 95       	ror	r24
    3d94:	97 f9       	bld	r25, 7
    3d96:	08 95       	ret

00003d98 <pow>:
    3d98:	fa 01       	movw	r30, r20
    3d9a:	ee 0f       	add	r30, r30
    3d9c:	ff 1f       	adc	r31, r31
    3d9e:	30 96       	adiw	r30, 0x00	; 0
    3da0:	21 05       	cpc	r18, r1
    3da2:	31 05       	cpc	r19, r1
    3da4:	99 f1       	breq	.+102    	; 0x3e0c <pow+0x74>
    3da6:	61 15       	cp	r22, r1
    3da8:	71 05       	cpc	r23, r1
    3daa:	61 f4       	brne	.+24     	; 0x3dc4 <pow+0x2c>
    3dac:	80 38       	cpi	r24, 0x80	; 128
    3dae:	bf e3       	ldi	r27, 0x3F	; 63
    3db0:	9b 07       	cpc	r25, r27
    3db2:	49 f1       	breq	.+82     	; 0x3e06 <pow+0x6e>
    3db4:	68 94       	set
    3db6:	90 38       	cpi	r25, 0x80	; 128
    3db8:	81 05       	cpc	r24, r1
    3dba:	61 f0       	breq	.+24     	; 0x3dd4 <pow+0x3c>
    3dbc:	80 38       	cpi	r24, 0x80	; 128
    3dbe:	bf ef       	ldi	r27, 0xFF	; 255
    3dc0:	9b 07       	cpc	r25, r27
    3dc2:	41 f0       	breq	.+16     	; 0x3dd4 <pow+0x3c>
    3dc4:	99 23       	and	r25, r25
    3dc6:	42 f5       	brpl	.+80     	; 0x3e18 <pow+0x80>
    3dc8:	ff 3f       	cpi	r31, 0xFF	; 255
    3dca:	e1 05       	cpc	r30, r1
    3dcc:	31 05       	cpc	r19, r1
    3dce:	21 05       	cpc	r18, r1
    3dd0:	11 f1       	breq	.+68     	; 0x3e16 <pow+0x7e>
    3dd2:	e8 94       	clt
    3dd4:	08 94       	sec
    3dd6:	e7 95       	ror	r30
    3dd8:	d9 01       	movw	r26, r18
    3dda:	aa 23       	and	r26, r26
    3ddc:	29 f4       	brne	.+10     	; 0x3de8 <pow+0x50>
    3dde:	ab 2f       	mov	r26, r27
    3de0:	be 2f       	mov	r27, r30
    3de2:	f8 5f       	subi	r31, 0xF8	; 248
    3de4:	d0 f3       	brcs	.-12     	; 0x3dda <pow+0x42>
    3de6:	10 c0       	rjmp	.+32     	; 0x3e08 <pow+0x70>
    3de8:	ff 5f       	subi	r31, 0xFF	; 255
    3dea:	70 f4       	brcc	.+28     	; 0x3e08 <pow+0x70>
    3dec:	a6 95       	lsr	r26
    3dee:	e0 f7       	brcc	.-8      	; 0x3de8 <pow+0x50>
    3df0:	f7 39       	cpi	r31, 0x97	; 151
    3df2:	50 f0       	brcs	.+20     	; 0x3e08 <pow+0x70>
    3df4:	19 f0       	breq	.+6      	; 0x3dfc <pow+0x64>
    3df6:	ff 3a       	cpi	r31, 0xAF	; 175
    3df8:	38 f4       	brcc	.+14     	; 0x3e08 <pow+0x70>
    3dfa:	9f 77       	andi	r25, 0x7F	; 127
    3dfc:	9f 93       	push	r25
    3dfe:	0c d0       	rcall	.+24     	; 0x3e18 <pow+0x80>
    3e00:	0f 90       	pop	r0
    3e02:	07 fc       	sbrc	r0, 7
    3e04:	90 58       	subi	r25, 0x80	; 128
    3e06:	08 95       	ret
    3e08:	3e f0       	brts	.+14     	; 0x3e18 <pow+0x80>
    3e0a:	af ce       	rjmp	.-674    	; 0x3b6a <__fp_nan>
    3e0c:	60 e0       	ldi	r22, 0x00	; 0
    3e0e:	70 e0       	ldi	r23, 0x00	; 0
    3e10:	80 e8       	ldi	r24, 0x80	; 128
    3e12:	9f e3       	ldi	r25, 0x3F	; 63
    3e14:	08 95       	ret
    3e16:	4f e7       	ldi	r20, 0x7F	; 127
    3e18:	9f 77       	andi	r25, 0x7F	; 127
    3e1a:	5f 93       	push	r21
    3e1c:	4f 93       	push	r20
    3e1e:	3f 93       	push	r19
    3e20:	2f 93       	push	r18
    3e22:	e3 d0       	rcall	.+454    	; 0x3fea <log>
    3e24:	2f 91       	pop	r18
    3e26:	3f 91       	pop	r19
    3e28:	4f 91       	pop	r20
    3e2a:	5f 91       	pop	r21
    3e2c:	52 df       	rcall	.-348    	; 0x3cd2 <__mulsf3>
    3e2e:	50 c0       	rjmp	.+160    	; 0x3ed0 <exp>

00003e30 <sin>:
    3e30:	9f 93       	push	r25
    3e32:	d2 de       	rcall	.-604    	; 0x3bd8 <__fp_rempio2>
    3e34:	0f 90       	pop	r0
    3e36:	07 fc       	sbrc	r0, 7
    3e38:	ee 5f       	subi	r30, 0xFE	; 254
    3e3a:	06 cf       	rjmp	.-500    	; 0x3c48 <__fp_sinus>
    3e3c:	11 f4       	brne	.+4      	; 0x3e42 <sin+0x12>
    3e3e:	0e f4       	brtc	.+2      	; 0x3e42 <sin+0x12>
    3e40:	94 ce       	rjmp	.-728    	; 0x3b6a <__fp_nan>
    3e42:	72 c0       	rjmp	.+228    	; 0x3f28 <__fp_mpack>

00003e44 <sqrt>:
    3e44:	1a df       	rcall	.-460    	; 0x3c7a <__fp_splitA>
    3e46:	d0 f3       	brcs	.-12     	; 0x3e3c <sin+0xc>
    3e48:	99 23       	and	r25, r25
    3e4a:	d9 f3       	breq	.-10     	; 0x3e42 <sin+0x12>
    3e4c:	ce f3       	brts	.-14     	; 0x3e40 <sin+0x10>
    3e4e:	9f 57       	subi	r25, 0x7F	; 127
    3e50:	55 0b       	sbc	r21, r21
    3e52:	87 ff       	sbrs	r24, 7
    3e54:	77 d0       	rcall	.+238    	; 0x3f44 <__fp_norm2>
    3e56:	00 24       	eor	r0, r0
    3e58:	a0 e6       	ldi	r26, 0x60	; 96
    3e5a:	40 ea       	ldi	r20, 0xA0	; 160
    3e5c:	90 01       	movw	r18, r0
    3e5e:	80 58       	subi	r24, 0x80	; 128
    3e60:	56 95       	lsr	r21
    3e62:	97 95       	ror	r25
    3e64:	28 f4       	brcc	.+10     	; 0x3e70 <sqrt+0x2c>
    3e66:	80 5c       	subi	r24, 0xC0	; 192
    3e68:	66 0f       	add	r22, r22
    3e6a:	77 1f       	adc	r23, r23
    3e6c:	88 1f       	adc	r24, r24
    3e6e:	20 f0       	brcs	.+8      	; 0x3e78 <sqrt+0x34>
    3e70:	26 17       	cp	r18, r22
    3e72:	37 07       	cpc	r19, r23
    3e74:	48 07       	cpc	r20, r24
    3e76:	30 f4       	brcc	.+12     	; 0x3e84 <sqrt+0x40>
    3e78:	62 1b       	sub	r22, r18
    3e7a:	73 0b       	sbc	r23, r19
    3e7c:	84 0b       	sbc	r24, r20
    3e7e:	20 29       	or	r18, r0
    3e80:	31 29       	or	r19, r1
    3e82:	4a 2b       	or	r20, r26
    3e84:	a6 95       	lsr	r26
    3e86:	17 94       	ror	r1
    3e88:	07 94       	ror	r0
    3e8a:	20 25       	eor	r18, r0
    3e8c:	31 25       	eor	r19, r1
    3e8e:	4a 27       	eor	r20, r26
    3e90:	58 f7       	brcc	.-42     	; 0x3e68 <sqrt+0x24>
    3e92:	66 0f       	add	r22, r22
    3e94:	77 1f       	adc	r23, r23
    3e96:	88 1f       	adc	r24, r24
    3e98:	20 f0       	brcs	.+8      	; 0x3ea2 <sqrt+0x5e>
    3e9a:	26 17       	cp	r18, r22
    3e9c:	37 07       	cpc	r19, r23
    3e9e:	48 07       	cpc	r20, r24
    3ea0:	30 f4       	brcc	.+12     	; 0x3eae <sqrt+0x6a>
    3ea2:	62 0b       	sbc	r22, r18
    3ea4:	73 0b       	sbc	r23, r19
    3ea6:	84 0b       	sbc	r24, r20
    3ea8:	20 0d       	add	r18, r0
    3eaa:	31 1d       	adc	r19, r1
    3eac:	41 1d       	adc	r20, r1
    3eae:	a0 95       	com	r26
    3eb0:	81 f7       	brne	.-32     	; 0x3e92 <sqrt+0x4e>
    3eb2:	b9 01       	movw	r22, r18
    3eb4:	84 2f       	mov	r24, r20
    3eb6:	91 58       	subi	r25, 0x81	; 129
    3eb8:	88 0f       	add	r24, r24
    3eba:	96 95       	lsr	r25
    3ebc:	87 95       	ror	r24
    3ebe:	08 95       	ret

00003ec0 <square>:
    3ec0:	9b 01       	movw	r18, r22
    3ec2:	ac 01       	movw	r20, r24
    3ec4:	06 cf       	rjmp	.-500    	; 0x3cd2 <__mulsf3>
    3ec6:	19 f4       	brne	.+6      	; 0x3ece <square+0xe>
    3ec8:	0e f0       	brts	.+2      	; 0x3ecc <square+0xc>
    3eca:	49 ce       	rjmp	.-878    	; 0x3b5e <__fp_inf>
    3ecc:	f0 ce       	rjmp	.-544    	; 0x3cae <__fp_zero>
    3ece:	4d ce       	rjmp	.-870    	; 0x3b6a <__fp_nan>

00003ed0 <exp>:
    3ed0:	d4 de       	rcall	.-600    	; 0x3c7a <__fp_splitA>
    3ed2:	c8 f3       	brcs	.-14     	; 0x3ec6 <square+0x6>
    3ed4:	96 38       	cpi	r25, 0x86	; 134
    3ed6:	c0 f7       	brcc	.-16     	; 0x3ec8 <square+0x8>
    3ed8:	07 f8       	bld	r0, 7
    3eda:	0f 92       	push	r0
    3edc:	e8 94       	clt
    3ede:	2b e3       	ldi	r18, 0x3B	; 59
    3ee0:	3a ea       	ldi	r19, 0xAA	; 170
    3ee2:	48 eb       	ldi	r20, 0xB8	; 184
    3ee4:	5f e7       	ldi	r21, 0x7F	; 127
    3ee6:	03 df       	rcall	.-506    	; 0x3cee <__mulsf3_pse>
    3ee8:	0f 92       	push	r0
    3eea:	0f 92       	push	r0
    3eec:	0f 92       	push	r0
    3eee:	4d b7       	in	r20, 0x3d	; 61
    3ef0:	5e b7       	in	r21, 0x3e	; 62
    3ef2:	0f 92       	push	r0
    3ef4:	ba d0       	rcall	.+372    	; 0x406a <modf>
    3ef6:	ef e9       	ldi	r30, 0x9F	; 159
    3ef8:	f0 e0       	ldi	r31, 0x00	; 0
    3efa:	3a de       	rcall	.-908    	; 0x3b70 <__fp_powser>
    3efc:	4f 91       	pop	r20
    3efe:	5f 91       	pop	r21
    3f00:	ef 91       	pop	r30
    3f02:	ff 91       	pop	r31
    3f04:	e5 95       	asr	r30
    3f06:	ee 1f       	adc	r30, r30
    3f08:	ff 1f       	adc	r31, r31
    3f0a:	49 f0       	breq	.+18     	; 0x3f1e <exp+0x4e>
    3f0c:	fe 57       	subi	r31, 0x7E	; 126
    3f0e:	e0 68       	ori	r30, 0x80	; 128
    3f10:	44 27       	eor	r20, r20
    3f12:	ee 0f       	add	r30, r30
    3f14:	44 1f       	adc	r20, r20
    3f16:	fa 95       	dec	r31
    3f18:	e1 f7       	brne	.-8      	; 0x3f12 <exp+0x42>
    3f1a:	41 95       	neg	r20
    3f1c:	55 0b       	sbc	r21, r21
    3f1e:	2c d0       	rcall	.+88     	; 0x3f78 <ldexp>
    3f20:	0f 90       	pop	r0
    3f22:	07 fe       	sbrs	r0, 7
    3f24:	cf ce       	rjmp	.-610    	; 0x3cc4 <inverse>
    3f26:	08 95       	ret

00003f28 <__fp_mpack>:
    3f28:	9f 3f       	cpi	r25, 0xFF	; 255
    3f2a:	31 f0       	breq	.+12     	; 0x3f38 <__fp_mpack_finite+0xc>

00003f2c <__fp_mpack_finite>:
    3f2c:	91 50       	subi	r25, 0x01	; 1
    3f2e:	20 f4       	brcc	.+8      	; 0x3f38 <__fp_mpack_finite+0xc>
    3f30:	87 95       	ror	r24
    3f32:	77 95       	ror	r23
    3f34:	67 95       	ror	r22
    3f36:	b7 95       	ror	r27
    3f38:	88 0f       	add	r24, r24
    3f3a:	91 1d       	adc	r25, r1
    3f3c:	96 95       	lsr	r25
    3f3e:	87 95       	ror	r24
    3f40:	97 f9       	bld	r25, 7
    3f42:	08 95       	ret

00003f44 <__fp_norm2>:
    3f44:	91 50       	subi	r25, 0x01	; 1
    3f46:	50 40       	sbci	r21, 0x00	; 0
    3f48:	66 0f       	add	r22, r22
    3f4a:	77 1f       	adc	r23, r23
    3f4c:	88 1f       	adc	r24, r24
    3f4e:	d2 f7       	brpl	.-12     	; 0x3f44 <__fp_norm2>
    3f50:	08 95       	ret

00003f52 <__fp_powsodd>:
    3f52:	9f 93       	push	r25
    3f54:	8f 93       	push	r24
    3f56:	7f 93       	push	r23
    3f58:	6f 93       	push	r22
    3f5a:	ff 93       	push	r31
    3f5c:	ef 93       	push	r30
    3f5e:	9b 01       	movw	r18, r22
    3f60:	ac 01       	movw	r20, r24
    3f62:	b7 de       	rcall	.-658    	; 0x3cd2 <__mulsf3>
    3f64:	ef 91       	pop	r30
    3f66:	ff 91       	pop	r31
    3f68:	03 de       	rcall	.-1018   	; 0x3b70 <__fp_powser>
    3f6a:	2f 91       	pop	r18
    3f6c:	3f 91       	pop	r19
    3f6e:	4f 91       	pop	r20
    3f70:	5f 91       	pop	r21
    3f72:	af ce       	rjmp	.-674    	; 0x3cd2 <__mulsf3>
    3f74:	f4 cd       	rjmp	.-1048   	; 0x3b5e <__fp_inf>
    3f76:	d8 cf       	rjmp	.-80     	; 0x3f28 <__fp_mpack>

00003f78 <ldexp>:
    3f78:	80 de       	rcall	.-768    	; 0x3c7a <__fp_splitA>
    3f7a:	e8 f3       	brcs	.-6      	; 0x3f76 <__fp_powsodd+0x24>
    3f7c:	99 23       	and	r25, r25
    3f7e:	d9 f3       	breq	.-10     	; 0x3f76 <__fp_powsodd+0x24>
    3f80:	94 0f       	add	r25, r20
    3f82:	51 1d       	adc	r21, r1
    3f84:	bb f3       	brvs	.-18     	; 0x3f74 <__fp_powsodd+0x22>
    3f86:	91 50       	subi	r25, 0x01	; 1
    3f88:	50 40       	sbci	r21, 0x00	; 0
    3f8a:	94 f0       	brlt	.+36     	; 0x3fb0 <ldexp+0x38>
    3f8c:	59 f0       	breq	.+22     	; 0x3fa4 <ldexp+0x2c>
    3f8e:	88 23       	and	r24, r24
    3f90:	32 f0       	brmi	.+12     	; 0x3f9e <ldexp+0x26>
    3f92:	66 0f       	add	r22, r22
    3f94:	77 1f       	adc	r23, r23
    3f96:	88 1f       	adc	r24, r24
    3f98:	91 50       	subi	r25, 0x01	; 1
    3f9a:	50 40       	sbci	r21, 0x00	; 0
    3f9c:	c1 f7       	brne	.-16     	; 0x3f8e <ldexp+0x16>
    3f9e:	9e 3f       	cpi	r25, 0xFE	; 254
    3fa0:	51 05       	cpc	r21, r1
    3fa2:	44 f7       	brge	.-48     	; 0x3f74 <__fp_powsodd+0x22>
    3fa4:	88 0f       	add	r24, r24
    3fa6:	91 1d       	adc	r25, r1
    3fa8:	96 95       	lsr	r25
    3faa:	87 95       	ror	r24
    3fac:	97 f9       	bld	r25, 7
    3fae:	08 95       	ret
    3fb0:	5f 3f       	cpi	r21, 0xFF	; 255
    3fb2:	ac f0       	brlt	.+42     	; 0x3fde <ldexp+0x66>
    3fb4:	98 3e       	cpi	r25, 0xE8	; 232
    3fb6:	9c f0       	brlt	.+38     	; 0x3fde <ldexp+0x66>
    3fb8:	bb 27       	eor	r27, r27
    3fba:	86 95       	lsr	r24
    3fbc:	77 95       	ror	r23
    3fbe:	67 95       	ror	r22
    3fc0:	b7 95       	ror	r27
    3fc2:	08 f4       	brcc	.+2      	; 0x3fc6 <ldexp+0x4e>
    3fc4:	b1 60       	ori	r27, 0x01	; 1
    3fc6:	93 95       	inc	r25
    3fc8:	c1 f7       	brne	.-16     	; 0x3fba <ldexp+0x42>
    3fca:	bb 0f       	add	r27, r27
    3fcc:	58 f7       	brcc	.-42     	; 0x3fa4 <ldexp+0x2c>
    3fce:	11 f4       	brne	.+4      	; 0x3fd4 <ldexp+0x5c>
    3fd0:	60 ff       	sbrs	r22, 0
    3fd2:	e8 cf       	rjmp	.-48     	; 0x3fa4 <ldexp+0x2c>
    3fd4:	6f 5f       	subi	r22, 0xFF	; 255
    3fd6:	7f 4f       	sbci	r23, 0xFF	; 255
    3fd8:	8f 4f       	sbci	r24, 0xFF	; 255
    3fda:	9f 4f       	sbci	r25, 0xFF	; 255
    3fdc:	e3 cf       	rjmp	.-58     	; 0x3fa4 <ldexp+0x2c>
    3fde:	68 ce       	rjmp	.-816    	; 0x3cb0 <__fp_szero>
    3fe0:	0e f0       	brts	.+2      	; 0x3fe4 <ldexp+0x6c>
    3fe2:	a2 cf       	rjmp	.-188    	; 0x3f28 <__fp_mpack>
    3fe4:	c2 cd       	rjmp	.-1148   	; 0x3b6a <__fp_nan>
    3fe6:	68 94       	set
    3fe8:	ba cd       	rjmp	.-1164   	; 0x3b5e <__fp_inf>

00003fea <log>:
    3fea:	47 de       	rcall	.-882    	; 0x3c7a <__fp_splitA>
    3fec:	c8 f3       	brcs	.-14     	; 0x3fe0 <ldexp+0x68>
    3fee:	99 23       	and	r25, r25
    3ff0:	d1 f3       	breq	.-12     	; 0x3fe6 <ldexp+0x6e>
    3ff2:	c6 f3       	brts	.-16     	; 0x3fe4 <ldexp+0x6c>
    3ff4:	df 93       	push	r29
    3ff6:	cf 93       	push	r28
    3ff8:	1f 93       	push	r17
    3ffa:	0f 93       	push	r16
    3ffc:	ff 92       	push	r15
    3ffe:	c9 2f       	mov	r28, r25
    4000:	dd 27       	eor	r29, r29
    4002:	88 23       	and	r24, r24
    4004:	2a f0       	brmi	.+10     	; 0x4010 <log+0x26>
    4006:	21 97       	sbiw	r28, 0x01	; 1
    4008:	66 0f       	add	r22, r22
    400a:	77 1f       	adc	r23, r23
    400c:	88 1f       	adc	r24, r24
    400e:	da f7       	brpl	.-10     	; 0x4006 <log+0x1c>
    4010:	20 e0       	ldi	r18, 0x00	; 0
    4012:	30 e0       	ldi	r19, 0x00	; 0
    4014:	40 e8       	ldi	r20, 0x80	; 128
    4016:	5f eb       	ldi	r21, 0xBF	; 191
    4018:	9f e3       	ldi	r25, 0x3F	; 63
    401a:	88 39       	cpi	r24, 0x98	; 152
    401c:	20 f0       	brcs	.+8      	; 0x4026 <log+0x3c>
    401e:	80 3e       	cpi	r24, 0xE0	; 224
    4020:	30 f0       	brcs	.+12     	; 0x402e <log+0x44>
    4022:	21 96       	adiw	r28, 0x01	; 1
    4024:	8f 77       	andi	r24, 0x7F	; 127
    4026:	d4 db       	rcall	.-2136   	; 0x37d0 <__addsf3>
    4028:	e7 ec       	ldi	r30, 0xC7	; 199
    402a:	f0 e0       	ldi	r31, 0x00	; 0
    402c:	03 c0       	rjmp	.+6      	; 0x4034 <log+0x4a>
    402e:	d0 db       	rcall	.-2144   	; 0x37d0 <__addsf3>
    4030:	e4 ef       	ldi	r30, 0xF4	; 244
    4032:	f0 e0       	ldi	r31, 0x00	; 0
    4034:	9d dd       	rcall	.-1222   	; 0x3b70 <__fp_powser>
    4036:	8b 01       	movw	r16, r22
    4038:	be 01       	movw	r22, r28
    403a:	ec 01       	movw	r28, r24
    403c:	fb 2e       	mov	r15, r27
    403e:	6f 57       	subi	r22, 0x7F	; 127
    4040:	71 09       	sbc	r23, r1
    4042:	75 95       	asr	r23
    4044:	77 1f       	adc	r23, r23
    4046:	88 0b       	sbc	r24, r24
    4048:	99 0b       	sbc	r25, r25
    404a:	2a dd       	rcall	.-1452   	; 0x3aa0 <__floatsisf>
    404c:	28 e1       	ldi	r18, 0x18	; 24
    404e:	32 e7       	ldi	r19, 0x72	; 114
    4050:	41 e3       	ldi	r20, 0x31	; 49
    4052:	5f e3       	ldi	r21, 0x3F	; 63
    4054:	4a de       	rcall	.-876    	; 0x3cea <__mulsf3x>
    4056:	af 2d       	mov	r26, r15
    4058:	98 01       	movw	r18, r16
    405a:	ae 01       	movw	r20, r28
    405c:	ff 90       	pop	r15
    405e:	0f 91       	pop	r16
    4060:	1f 91       	pop	r17
    4062:	cf 91       	pop	r28
    4064:	df 91       	pop	r29
    4066:	c5 db       	rcall	.-2166   	; 0x37f2 <__addsf3x>
    4068:	de cd       	rjmp	.-1092   	; 0x3c26 <__fp_round>

0000406a <modf>:
    406a:	fa 01       	movw	r30, r20
    406c:	dc 01       	movw	r26, r24
    406e:	aa 0f       	add	r26, r26
    4070:	bb 1f       	adc	r27, r27
    4072:	9b 01       	movw	r18, r22
    4074:	ac 01       	movw	r20, r24
    4076:	bf 57       	subi	r27, 0x7F	; 127
    4078:	28 f4       	brcc	.+10     	; 0x4084 <modf+0x1a>
    407a:	22 27       	eor	r18, r18
    407c:	33 27       	eor	r19, r19
    407e:	44 27       	eor	r20, r20
    4080:	50 78       	andi	r21, 0x80	; 128
    4082:	1f c0       	rjmp	.+62     	; 0x40c2 <modf+0x58>
    4084:	b7 51       	subi	r27, 0x17	; 23
    4086:	88 f4       	brcc	.+34     	; 0x40aa <modf+0x40>
    4088:	ab 2f       	mov	r26, r27
    408a:	00 24       	eor	r0, r0
    408c:	46 95       	lsr	r20
    408e:	37 95       	ror	r19
    4090:	27 95       	ror	r18
    4092:	01 1c       	adc	r0, r1
    4094:	a3 95       	inc	r26
    4096:	d2 f3       	brmi	.-12     	; 0x408c <modf+0x22>
    4098:	00 20       	and	r0, r0
    409a:	69 f0       	breq	.+26     	; 0x40b6 <modf+0x4c>
    409c:	22 0f       	add	r18, r18
    409e:	33 1f       	adc	r19, r19
    40a0:	44 1f       	adc	r20, r20
    40a2:	b3 95       	inc	r27
    40a4:	da f3       	brmi	.-10     	; 0x409c <modf+0x32>
    40a6:	0d d0       	rcall	.+26     	; 0x40c2 <modf+0x58>
    40a8:	92 cb       	rjmp	.-2268   	; 0x37ce <__subsf3>
    40aa:	61 30       	cpi	r22, 0x01	; 1
    40ac:	71 05       	cpc	r23, r1
    40ae:	a0 e8       	ldi	r26, 0x80	; 128
    40b0:	8a 07       	cpc	r24, r26
    40b2:	b9 46       	sbci	r27, 0x69	; 105
    40b4:	30 f4       	brcc	.+12     	; 0x40c2 <modf+0x58>
    40b6:	9b 01       	movw	r18, r22
    40b8:	ac 01       	movw	r20, r24
    40ba:	66 27       	eor	r22, r22
    40bc:	77 27       	eor	r23, r23
    40be:	88 27       	eor	r24, r24
    40c0:	90 78       	andi	r25, 0x80	; 128
    40c2:	30 96       	adiw	r30, 0x00	; 0
    40c4:	21 f0       	breq	.+8      	; 0x40ce <modf+0x64>
    40c6:	20 83       	st	Z, r18
    40c8:	31 83       	std	Z+1, r19	; 0x01
    40ca:	42 83       	std	Z+2, r20	; 0x02
    40cc:	53 83       	std	Z+3, r21	; 0x03
    40ce:	08 95       	ret

000040d0 <__divmodhi4>:
    40d0:	97 fb       	bst	r25, 7
    40d2:	07 2e       	mov	r0, r23
    40d4:	16 f4       	brtc	.+4      	; 0x40da <__divmodhi4+0xa>
    40d6:	00 94       	com	r0
    40d8:	07 d0       	rcall	.+14     	; 0x40e8 <__divmodhi4_neg1>
    40da:	77 fd       	sbrc	r23, 7
    40dc:	09 d0       	rcall	.+18     	; 0x40f0 <__divmodhi4_neg2>
    40de:	0e 94 7c 20 	call	0x40f8	; 0x40f8 <__udivmodhi4>
    40e2:	07 fc       	sbrc	r0, 7
    40e4:	05 d0       	rcall	.+10     	; 0x40f0 <__divmodhi4_neg2>
    40e6:	3e f4       	brtc	.+14     	; 0x40f6 <__divmodhi4_exit>

000040e8 <__divmodhi4_neg1>:
    40e8:	90 95       	com	r25
    40ea:	81 95       	neg	r24
    40ec:	9f 4f       	sbci	r25, 0xFF	; 255
    40ee:	08 95       	ret

000040f0 <__divmodhi4_neg2>:
    40f0:	70 95       	com	r23
    40f2:	61 95       	neg	r22
    40f4:	7f 4f       	sbci	r23, 0xFF	; 255

000040f6 <__divmodhi4_exit>:
    40f6:	08 95       	ret

000040f8 <__udivmodhi4>:
    40f8:	aa 1b       	sub	r26, r26
    40fa:	bb 1b       	sub	r27, r27
    40fc:	51 e1       	ldi	r21, 0x11	; 17
    40fe:	07 c0       	rjmp	.+14     	; 0x410e <__udivmodhi4_ep>

00004100 <__udivmodhi4_loop>:
    4100:	aa 1f       	adc	r26, r26
    4102:	bb 1f       	adc	r27, r27
    4104:	a6 17       	cp	r26, r22
    4106:	b7 07       	cpc	r27, r23
    4108:	10 f0       	brcs	.+4      	; 0x410e <__udivmodhi4_ep>
    410a:	a6 1b       	sub	r26, r22
    410c:	b7 0b       	sbc	r27, r23

0000410e <__udivmodhi4_ep>:
    410e:	88 1f       	adc	r24, r24
    4110:	99 1f       	adc	r25, r25
    4112:	5a 95       	dec	r21
    4114:	a9 f7       	brne	.-22     	; 0x4100 <__udivmodhi4_loop>
    4116:	80 95       	com	r24
    4118:	90 95       	com	r25
    411a:	bc 01       	movw	r22, r24
    411c:	cd 01       	movw	r24, r26
    411e:	08 95       	ret

00004120 <__tablejump2__>:
    4120:	ee 0f       	add	r30, r30
    4122:	ff 1f       	adc	r31, r31

00004124 <__tablejump__>:
    4124:	05 90       	lpm	r0, Z+
    4126:	f4 91       	lpm	r31, Z
    4128:	e0 2d       	mov	r30, r0
    412a:	09 94       	ijmp

0000412c <itoa>:
    412c:	fb 01       	movw	r30, r22
    412e:	9f 01       	movw	r18, r30
    4130:	e8 94       	clt
    4132:	42 30       	cpi	r20, 0x02	; 2
    4134:	c4 f0       	brlt	.+48     	; 0x4166 <itoa+0x3a>
    4136:	45 32       	cpi	r20, 0x25	; 37
    4138:	b4 f4       	brge	.+44     	; 0x4166 <itoa+0x3a>
    413a:	4a 30       	cpi	r20, 0x0A	; 10
    413c:	29 f4       	brne	.+10     	; 0x4148 <itoa+0x1c>
    413e:	97 fb       	bst	r25, 7
    4140:	1e f4       	brtc	.+6      	; 0x4148 <itoa+0x1c>
    4142:	90 95       	com	r25
    4144:	81 95       	neg	r24
    4146:	9f 4f       	sbci	r25, 0xFF	; 255
    4148:	64 2f       	mov	r22, r20
    414a:	77 27       	eor	r23, r23
    414c:	0e 94 7c 20 	call	0x40f8	; 0x40f8 <__udivmodhi4>
    4150:	80 5d       	subi	r24, 0xD0	; 208
    4152:	8a 33       	cpi	r24, 0x3A	; 58
    4154:	0c f0       	brlt	.+2      	; 0x4158 <itoa+0x2c>
    4156:	89 5d       	subi	r24, 0xD9	; 217
    4158:	81 93       	st	Z+, r24
    415a:	cb 01       	movw	r24, r22
    415c:	00 97       	sbiw	r24, 0x00	; 0
    415e:	a1 f7       	brne	.-24     	; 0x4148 <itoa+0x1c>
    4160:	16 f4       	brtc	.+4      	; 0x4166 <itoa+0x3a>
    4162:	5d e2       	ldi	r21, 0x2D	; 45
    4164:	51 93       	st	Z+, r21
    4166:	10 82       	st	Z, r1
    4168:	c9 01       	movw	r24, r18
    416a:	0c 94 b7 20 	jmp	0x416e	; 0x416e <strrev>

0000416e <strrev>:
    416e:	dc 01       	movw	r26, r24
    4170:	fc 01       	movw	r30, r24
    4172:	67 2f       	mov	r22, r23
    4174:	71 91       	ld	r23, Z+
    4176:	77 23       	and	r23, r23
    4178:	e1 f7       	brne	.-8      	; 0x4172 <strrev+0x4>
    417a:	32 97       	sbiw	r30, 0x02	; 2
    417c:	04 c0       	rjmp	.+8      	; 0x4186 <strrev+0x18>
    417e:	7c 91       	ld	r23, X
    4180:	6d 93       	st	X+, r22
    4182:	70 83       	st	Z, r23
    4184:	62 91       	ld	r22, -Z
    4186:	ae 17       	cp	r26, r30
    4188:	bf 07       	cpc	r27, r31
    418a:	c8 f3       	brcs	.-14     	; 0x417e <strrev+0x10>
    418c:	08 95       	ret

0000418e <_exit>:
    418e:	f8 94       	cli

00004190 <__stop_program>:
    4190:	ff cf       	rjmp	.-2      	; 0x4190 <__stop_program>
