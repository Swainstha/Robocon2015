
hybrid up v8 lidar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800200  000035ac  00003640  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000035ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b4  00800226  00800226  00003666  2**0
                  ALLOC
  3 .stab         000026e8  00000000  00000000  00003668  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000892  00000000  00000000  00005d50  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  000065e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000304c  00000000  00000000  00006788  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dbb  00000000  00000000  000097d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001100  00000000  00000000  0000a58f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b2c  00000000  00000000  0000b690  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000150e  00000000  00000000  0000c1bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000021f6  00000000  00000000  0000d6ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8c 00 	jmp	0x118	; 0x118 <__ctors_end>
       4:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
       8:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
       c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      10:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      14:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      18:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      1c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      20:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      24:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      28:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      2c:	0c 94 06 13 	jmp	0x260c	; 0x260c <__vector_11>
      30:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      34:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      38:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      3c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      40:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      44:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      48:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      4c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      50:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      54:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      58:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      5c:	0c 94 11 14 	jmp	0x2822	; 0x2822 <__vector_23>
      60:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      64:	0c 94 44 18 	jmp	0x3088	; 0x3088 <__vector_25>
      68:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      6c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      70:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      74:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      78:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      7c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      80:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      84:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      88:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      8c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      90:	0c 94 54 18 	jmp	0x30a8	; 0x30a8 <__vector_36>
      94:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      98:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      9c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      a0:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      a4:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      a8:	0c 94 2a 13 	jmp	0x2654	; 0x2654 <__vector_42>
      ac:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      b0:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      b4:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      b8:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      bc:	0c 94 e0 14 	jmp	0x29c0	; 0x29c0 <__vector_47>
      c0:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      c4:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      c8:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      cc:	0c 94 64 18 	jmp	0x30c8	; 0x30c8 <__vector_51>
      d0:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      d4:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      d8:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      dc:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      e0:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__bad_interrupt>
      e4:	6e 04       	cpc	r6, r14
      e6:	76 04       	cpc	r7, r6
      e8:	e6 07       	cpc	r30, r22
      ea:	b1 04       	cpc	r11, r1
      ec:	e6 07       	cpc	r30, r22
      ee:	ec 04       	cpc	r14, r12
      f0:	e6 07       	cpc	r30, r22
      f2:	27 05       	cpc	r18, r7
      f4:	47 05       	cpc	r20, r7
      f6:	67 05       	cpc	r22, r7
      f8:	72 05       	cpc	r23, r2
      fa:	7d 05       	cpc	r23, r13
      fc:	88 05       	cpc	r24, r8
      fe:	96 05       	cpc	r25, r6
     100:	a4 05       	cpc	r26, r4
     102:	c4 05       	cpc	r28, r4
     104:	e4 05       	cpc	r30, r4
     106:	04 06       	cpc	r0, r20
     108:	24 06       	cpc	r2, r20
     10a:	e6 07       	cpc	r30, r22
     10c:	2d 06       	cpc	r2, r29
     10e:	71 06       	cpc	r7, r17
     110:	b5 06       	cpc	r11, r21
     112:	05 07       	cpc	r16, r21
     114:	55 07       	cpc	r21, r21
     116:	9e 07       	cpc	r25, r30

00000118 <__ctors_end>:
     118:	11 24       	eor	r1, r1
     11a:	1f be       	out	0x3f, r1	; 63
     11c:	cf ef       	ldi	r28, 0xFF	; 255
     11e:	d1 e2       	ldi	r29, 0x21	; 33
     120:	de bf       	out	0x3e, r29	; 62
     122:	cd bf       	out	0x3d, r28	; 61
     124:	00 e0       	ldi	r16, 0x00	; 0
     126:	0c bf       	out	0x3c, r16	; 60

00000128 <__do_copy_data>:
     128:	12 e0       	ldi	r17, 0x02	; 2
     12a:	a0 e0       	ldi	r26, 0x00	; 0
     12c:	b2 e0       	ldi	r27, 0x02	; 2
     12e:	ec ea       	ldi	r30, 0xAC	; 172
     130:	f5 e3       	ldi	r31, 0x35	; 53
     132:	00 e0       	ldi	r16, 0x00	; 0
     134:	0b bf       	out	0x3b, r16	; 59
     136:	02 c0       	rjmp	.+4      	; 0x13c <__do_copy_data+0x14>
     138:	07 90       	elpm	r0, Z+
     13a:	0d 92       	st	X+, r0
     13c:	a6 32       	cpi	r26, 0x26	; 38
     13e:	b1 07       	cpc	r27, r17
     140:	d9 f7       	brne	.-10     	; 0x138 <__do_copy_data+0x10>

00000142 <__do_clear_bss>:
     142:	12 e0       	ldi	r17, 0x02	; 2
     144:	a6 e2       	ldi	r26, 0x26	; 38
     146:	b2 e0       	ldi	r27, 0x02	; 2
     148:	01 c0       	rjmp	.+2      	; 0x14c <.do_clear_bss_start>

0000014a <.do_clear_bss_loop>:
     14a:	1d 92       	st	X+, r1

0000014c <.do_clear_bss_start>:
     14c:	aa 3d       	cpi	r26, 0xDA	; 218
     14e:	b1 07       	cpc	r27, r17
     150:	e1 f7       	brne	.-8      	; 0x14a <.do_clear_bss_loop>
     152:	0e 94 a6 12 	call	0x254c	; 0x254c <main>
     156:	0c 94 d4 1a 	jmp	0x35a8	; 0x35a8 <_exit>

0000015a <__bad_interrupt>:
     15a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000015e <_ZN6Analog8ADC_InitEv>:

#include "adc.h"

//adc read from pololu initilization
void Analog::ADC_Init()
{
     15e:	fc 01       	movw	r30, r24
	previous_motor_A=0;
     160:	13 82       	std	Z+3, r1	; 0x03
     162:	12 82       	std	Z+2, r1	; 0x02
	previous_wiper=0;
     164:	15 82       	std	Z+5, r1	; 0x05
     166:	14 82       	std	Z+4, r1	; 0x04
	previous_motor_B=0;
     168:	11 82       	std	Z+1, r1	; 0x01
     16a:	10 82       	st	Z, r1
	ADCSRA |= (1<<ADEN); //enblaing
     16c:	ea e7       	ldi	r30, 0x7A	; 122
     16e:	f0 e0       	ldi	r31, 0x00	; 0
     170:	80 81       	ld	r24, Z
     172:	80 68       	ori	r24, 0x80	; 128
     174:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0);
     176:	ac e7       	ldi	r26, 0x7C	; 124
     178:	b0 e0       	ldi	r27, 0x00	; 0
     17a:	8c 91       	ld	r24, X
     17c:	80 64       	ori	r24, 0x40	; 64
     17e:	8c 93       	st	X, r24
	//ADMUX |= (1<<ADLAR); //avcc reference
	ADCSRA |= (1<<ADPS1) | (1<<ADPS2) | (1<<ADPS0); //128 bit presclaing
     180:	80 81       	ld	r24, Z
     182:	87 60       	ori	r24, 0x07	; 7
     184:	80 83       	st	Z, r24
	ADCSRA |=(1<<ADSC);	//start conversion
     186:	80 81       	ld	r24, Z
     188:	80 64       	ori	r24, 0x40	; 64
     18a:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC));
     18c:	80 81       	ld	r24, Z
     18e:	86 fd       	sbrc	r24, 6
     190:	fd cf       	rjmp	.-6      	; 0x18c <_ZN6Analog8ADC_InitEv+0x2e>
	ADCSRA &= ~(1<<ADEN);
     192:	ea e7       	ldi	r30, 0x7A	; 122
     194:	f0 e0       	ldi	r31, 0x00	; 0
     196:	80 81       	ld	r24, Z
     198:	8f 77       	andi	r24, 0x7F	; 127
     19a:	80 83       	st	Z, r24
}
     19c:	08 95       	ret

0000019e <_ZN6Analog19Get_Junction_SensorEhii>:

//check of actual data from the sensor pololu
int Analog::Get_Junction_Sensor(uint8_t ch,int Threshold,int difference)
{
     19e:	dc 01       	movw	r26, r24
	unsigned char ch1=ch;
	if (ch>7)
     1a0:	68 30       	cpi	r22, 0x08	; 8
     1a2:	30 f0       	brcs	.+12     	; 0x1b0 <_ZN6Analog19Get_Junction_SensorEhii+0x12>
	{
		ADCSRB|=(1<<MUX5);
     1a4:	eb e7       	ldi	r30, 0x7B	; 123
     1a6:	f0 e0       	ldi	r31, 0x00	; 0
     1a8:	80 81       	ld	r24, Z
     1aa:	88 60       	ori	r24, 0x08	; 8
     1ac:	80 83       	st	Z, r24
     1ae:	05 c0       	rjmp	.+10     	; 0x1ba <_ZN6Analog19Get_Junction_SensorEhii+0x1c>
	}
	else
	{
		ADCSRB&=~(1<<MUX5);
     1b0:	eb e7       	ldi	r30, 0x7B	; 123
     1b2:	f0 e0       	ldi	r31, 0x00	; 0
     1b4:	80 81       	ld	r24, Z
     1b6:	87 7f       	andi	r24, 0xF7	; 247
     1b8:	80 83       	st	Z, r24
	}
	ch &= 0b0000111;
	ADMUX = (ADMUX & 0XF8) | ch;
     1ba:	ec e7       	ldi	r30, 0x7C	; 124
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	80 81       	ld	r24, Z
	}
	else
	{
		ADCSRB&=~(1<<MUX5);
	}
	ch &= 0b0000111;
     1c0:	96 2f       	mov	r25, r22
     1c2:	97 70       	andi	r25, 0x07	; 7
	ADMUX = (ADMUX & 0XF8) | ch;
     1c4:	88 7f       	andi	r24, 0xF8	; 248
     1c6:	89 2b       	or	r24, r25
     1c8:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC) | (1<<ADEN);
     1ca:	ea e7       	ldi	r30, 0x7A	; 122
     1cc:	f0 e0       	ldi	r31, 0x00	; 0
     1ce:	80 81       	ld	r24, Z
     1d0:	80 6c       	ori	r24, 0xC0	; 192
     1d2:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC));
     1d4:	80 81       	ld	r24, Z
     1d6:	86 fd       	sbrc	r24, 6
     1d8:	fd cf       	rjmp	.-6      	; 0x1d4 <_ZN6Analog19Get_Junction_SensorEhii+0x36>
	adc=ADCW;
     1da:	80 91 78 00 	lds	r24, 0x0078
     1de:	90 91 79 00 	lds	r25, 0x0079
     1e2:	1f 96       	adiw	r26, 0x0f	; 15
     1e4:	9c 93       	st	X, r25
     1e6:	8e 93       	st	-X, r24
     1e8:	1e 97       	sbiw	r26, 0x0e	; 14
	
	if (ch1==MOTOR_A)
     1ea:	68 30       	cpi	r22, 0x08	; 8
     1ec:	d1 f4       	brne	.+52     	; 0x222 <_ZN6Analog19Get_Junction_SensorEhii+0x84>
	{
		if (adc>Threshold)
     1ee:	48 17       	cp	r20, r24
     1f0:	59 07       	cpc	r21, r25
     1f2:	38 f4       	brcc	.+14     	; 0x202 <_ZN6Analog19Get_Junction_SensorEhii+0x64>
		{
			previous_motor_A=1;
     1f4:	81 e0       	ldi	r24, 0x01	; 1
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	13 96       	adiw	r26, 0x03	; 3
     1fa:	9c 93       	st	X, r25
     1fc:	8e 93       	st	-X, r24
     1fe:	12 97       	sbiw	r26, 0x02	; 2
     200:	09 c0       	rjmp	.+18     	; 0x214 <_ZN6Analog19Get_Junction_SensorEhii+0x76>
		}
		else if (adc<(Threshold-difference))
     202:	42 1b       	sub	r20, r18
     204:	53 0b       	sbc	r21, r19
     206:	84 17       	cp	r24, r20
     208:	95 07       	cpc	r25, r21
     20a:	20 f4       	brcc	.+8      	; 0x214 <_ZN6Analog19Get_Junction_SensorEhii+0x76>
		{
			previous_motor_A=0;
     20c:	13 96       	adiw	r26, 0x03	; 3
     20e:	1c 92       	st	X, r1
     210:	1e 92       	st	-X, r1
     212:	12 97       	sbiw	r26, 0x02	; 2
		}
		return previous_motor_A;
     214:	12 96       	adiw	r26, 0x02	; 2
     216:	8c 91       	ld	r24, X
     218:	12 97       	sbiw	r26, 0x02	; 2
     21a:	13 96       	adiw	r26, 0x03	; 3
     21c:	9c 91       	ld	r25, X
     21e:	13 97       	sbiw	r26, 0x03	; 3
     220:	08 95       	ret
		
	}
	else if (ch1==MOTOR_B)  
     222:	66 23       	and	r22, r22
     224:	b1 f4       	brne	.+44     	; 0x252 <_ZN6Analog19Get_Junction_SensorEhii+0xb4>
	{
		if (adc>Threshold)
     226:	48 17       	cp	r20, r24
     228:	59 07       	cpc	r21, r25
     22a:	30 f4       	brcc	.+12     	; 0x238 <_ZN6Analog19Get_Junction_SensorEhii+0x9a>
		{
			previous_motor_B=1;
     22c:	81 e0       	ldi	r24, 0x01	; 1
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	11 96       	adiw	r26, 0x01	; 1
     232:	9c 93       	st	X, r25
     234:	8e 93       	st	-X, r24
     236:	08 c0       	rjmp	.+16     	; 0x248 <_ZN6Analog19Get_Junction_SensorEhii+0xaa>
		}
		else if (adc<(Threshold-difference))
     238:	42 1b       	sub	r20, r18
     23a:	53 0b       	sbc	r21, r19
     23c:	84 17       	cp	r24, r20
     23e:	95 07       	cpc	r25, r21
     240:	18 f4       	brcc	.+6      	; 0x248 <_ZN6Analog19Get_Junction_SensorEhii+0xaa>
		{
			previous_motor_B=0;
     242:	11 96       	adiw	r26, 0x01	; 1
     244:	1c 92       	st	X, r1
     246:	1e 92       	st	-X, r1
		}
		return previous_motor_B;
     248:	8c 91       	ld	r24, X
     24a:	11 96       	adiw	r26, 0x01	; 1
     24c:	9c 91       	ld	r25, X
     24e:	11 97       	sbiw	r26, 0x01	; 1
     250:	08 95       	ret

	}
	else if (ch1==WIPER)  //wiper
     252:	6d 30       	cpi	r22, 0x0D	; 13
     254:	d1 f4       	brne	.+52     	; 0x28a <_ZN6Analog19Get_Junction_SensorEhii+0xec>
	{
		if (adc>Threshold)
     256:	48 17       	cp	r20, r24
     258:	59 07       	cpc	r21, r25
     25a:	38 f4       	brcc	.+14     	; 0x26a <_ZN6Analog19Get_Junction_SensorEhii+0xcc>
		{
			previous_wiper=1;
     25c:	81 e0       	ldi	r24, 0x01	; 1
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	15 96       	adiw	r26, 0x05	; 5
     262:	9c 93       	st	X, r25
     264:	8e 93       	st	-X, r24
     266:	14 97       	sbiw	r26, 0x04	; 4
     268:	09 c0       	rjmp	.+18     	; 0x27c <_ZN6Analog19Get_Junction_SensorEhii+0xde>
		}
		else if (adc<(Threshold-difference))
     26a:	42 1b       	sub	r20, r18
     26c:	53 0b       	sbc	r21, r19
     26e:	84 17       	cp	r24, r20
     270:	95 07       	cpc	r25, r21
     272:	20 f4       	brcc	.+8      	; 0x27c <_ZN6Analog19Get_Junction_SensorEhii+0xde>
		{
			previous_wiper=0;
     274:	15 96       	adiw	r26, 0x05	; 5
     276:	1c 92       	st	X, r1
     278:	1e 92       	st	-X, r1
     27a:	14 97       	sbiw	r26, 0x04	; 4
		}
		return previous_wiper;
     27c:	14 96       	adiw	r26, 0x04	; 4
     27e:	8c 91       	ld	r24, X
     280:	14 97       	sbiw	r26, 0x04	; 4
     282:	15 96       	adiw	r26, 0x05	; 5
     284:	9c 91       	ld	r25, X
     286:	15 97       	sbiw	r26, 0x05	; 5
     288:	08 95       	ret
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     28a:	8f e1       	ldi	r24, 0x1F	; 31
     28c:	9e e4       	ldi	r25, 0x4E	; 78
     28e:	01 97       	sbiw	r24, 0x01	; 1
     290:	f1 f7       	brne	.-4      	; 0x28e <_ZN6Analog19Get_Junction_SensorEhii+0xf0>
     292:	00 c0       	rjmp	.+0      	; 0x294 <_ZN6Analog19Get_Junction_SensorEhii+0xf6>
     294:	00 00       	nop

	}
	
	_delay_ms(5);
}
     296:	08 95       	ret

00000298 <_ZN6Analog20Get_Junction_Sensor1Eh>:

int Analog::Get_Junction_Sensor1(uint8_t ch)
{
     298:	fc 01       	movw	r30, r24
	if (ch>7)
     29a:	68 30       	cpi	r22, 0x08	; 8
     29c:	30 f0       	brcs	.+12     	; 0x2aa <_ZN6Analog20Get_Junction_Sensor1Eh+0x12>
	{
		ADCSRB|=(1<<MUX5);
     29e:	ab e7       	ldi	r26, 0x7B	; 123
     2a0:	b0 e0       	ldi	r27, 0x00	; 0
     2a2:	8c 91       	ld	r24, X
     2a4:	88 60       	ori	r24, 0x08	; 8
     2a6:	8c 93       	st	X, r24
     2a8:	05 c0       	rjmp	.+10     	; 0x2b4 <_ZN6Analog20Get_Junction_Sensor1Eh+0x1c>
	}
	else
	{
		ADCSRB&=~(1<<MUX5);
     2aa:	ab e7       	ldi	r26, 0x7B	; 123
     2ac:	b0 e0       	ldi	r27, 0x00	; 0
     2ae:	8c 91       	ld	r24, X
     2b0:	87 7f       	andi	r24, 0xF7	; 247
     2b2:	8c 93       	st	X, r24
	}
	ch &= 0b0000111;
	ADMUX = (ADMUX & 0XF8) | ch;
     2b4:	ac e7       	ldi	r26, 0x7C	; 124
     2b6:	b0 e0       	ldi	r27, 0x00	; 0
     2b8:	8c 91       	ld	r24, X
	}
	else
	{
		ADCSRB&=~(1<<MUX5);
	}
	ch &= 0b0000111;
     2ba:	67 70       	andi	r22, 0x07	; 7
	ADMUX = (ADMUX & 0XF8) | ch;
     2bc:	88 7f       	andi	r24, 0xF8	; 248
     2be:	68 2b       	or	r22, r24
     2c0:	6c 93       	st	X, r22
	ADCSRA |= (1<<ADSC) | (1<<ADEN);
     2c2:	aa e7       	ldi	r26, 0x7A	; 122
     2c4:	b0 e0       	ldi	r27, 0x00	; 0
     2c6:	8c 91       	ld	r24, X
     2c8:	80 6c       	ori	r24, 0xC0	; 192
     2ca:	8c 93       	st	X, r24
	while (ADCSRA & (1<<ADSC));
     2cc:	8c 91       	ld	r24, X
     2ce:	86 fd       	sbrc	r24, 6
     2d0:	fd cf       	rjmp	.-6      	; 0x2cc <_ZN6Analog20Get_Junction_Sensor1Eh+0x34>
	adc=ADCW;
     2d2:	80 91 78 00 	lds	r24, 0x0078
     2d6:	90 91 79 00 	lds	r25, 0x0079
     2da:	97 87       	std	Z+15, r25	; 0x0f
     2dc:	86 87       	std	Z+14, r24	; 0x0e
	
	return adc;
     2de:	08 95       	ret

000002e0 <_ZN7Ductfan10InitializeEv>:
 */ 

#include "ductfan.h"

void Ductfan::Initialize()
{
     2e0:	fc 01       	movw	r30, r24
	minvalue=900;
     2e2:	84 e8       	ldi	r24, 0x84	; 132
     2e4:	93 e0       	ldi	r25, 0x03	; 3
     2e6:	91 83       	std	Z+1, r25	; 0x01
     2e8:	80 83       	st	Z, r24
	maxvalue=2100;
     2ea:	84 e3       	ldi	r24, 0x34	; 52
     2ec:	98 e0       	ldi	r25, 0x08	; 8
     2ee:	93 83       	std	Z+3, r25	; 0x03
     2f0:	82 83       	std	Z+2, r24	; 0x02
	Duct_DDR |= (1<<Duct_Pin);
     2f2:	26 9a       	sbi	0x04, 6	; 4
	//	TCCR1A TCCR1B ICR1 ALL ARE IN SERVO.H
}
     2f4:	08 95       	ret

000002f6 <_ZN7Ductfan11SetRange_UsEjj>:
void Ductfan::SetRange_Us(unsigned int min,unsigned int max)
{
     2f6:	fc 01       	movw	r30, r24
	minvalue = min;
     2f8:	71 83       	std	Z+1, r23	; 0x01
     2fa:	60 83       	st	Z, r22
	maxvalue = max;
     2fc:	53 83       	std	Z+3, r21	; 0x03
     2fe:	42 83       	std	Z+2, r20	; 0x02
}
     300:	08 95       	ret

00000302 <_ZN7Ductfan3runEf>:
	_delay_ms(2000);
	run(0);
	_delay_ms(5000);
}
void Ductfan::run(float dutycycle)
{
     302:	8f 92       	push	r8
     304:	9f 92       	push	r9
     306:	af 92       	push	r10
     308:	bf 92       	push	r11
     30a:	cf 92       	push	r12
     30c:	df 92       	push	r13
     30e:	ef 92       	push	r14
     310:	ff 92       	push	r15
     312:	0f 93       	push	r16
     314:	1f 93       	push	r17
     316:	cf 93       	push	r28
     318:	df 93       	push	r29
     31a:	ec 01       	movw	r28, r24
     31c:	6a 01       	movw	r12, r20
     31e:	7b 01       	movw	r14, r22
	float var;
	var = minvalue+dutycycle*(float)(maxvalue-minvalue)/100.0;
     320:	08 81       	ld	r16, Y
     322:	19 81       	ldd	r17, Y+1	; 0x01
     324:	b8 01       	movw	r22, r16
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 76 19 	call	0x32ec	; 0x32ec <__floatunsisf>
     32e:	4b 01       	movw	r8, r22
     330:	5c 01       	movw	r10, r24
     332:	6a 81       	ldd	r22, Y+2	; 0x02
     334:	7b 81       	ldd	r23, Y+3	; 0x03
     336:	60 1b       	sub	r22, r16
     338:	71 0b       	sbc	r23, r17
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	0e 94 76 19 	call	0x32ec	; 0x32ec <__floatunsisf>
     342:	a7 01       	movw	r20, r14
     344:	96 01       	movw	r18, r12
     346:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__mulsf3>
     34a:	20 e0       	ldi	r18, 0x00	; 0
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	48 ec       	ldi	r20, 0xC8	; 200
     350:	52 e4       	ldi	r21, 0x42	; 66
     352:	0e 94 dd 18 	call	0x31ba	; 0x31ba <__divsf3>
     356:	9b 01       	movw	r18, r22
     358:	ac 01       	movw	r20, r24
     35a:	c5 01       	movw	r24, r10
     35c:	b4 01       	movw	r22, r8
     35e:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
	OCR1B=(unsigned int)var*2;
     362:	0e 94 4a 19 	call	0x3294	; 0x3294 <__fixunssfsi>
     366:	66 0f       	add	r22, r22
     368:	77 1f       	adc	r23, r23
     36a:	70 93 8b 00 	sts	0x008B, r23
     36e:	60 93 8a 00 	sts	0x008A, r22
}
     372:	df 91       	pop	r29
     374:	cf 91       	pop	r28
     376:	1f 91       	pop	r17
     378:	0f 91       	pop	r16
     37a:	ff 90       	pop	r15
     37c:	ef 90       	pop	r14
     37e:	df 90       	pop	r13
     380:	cf 90       	pop	r12
     382:	bf 90       	pop	r11
     384:	af 90       	pop	r10
     386:	9f 90       	pop	r9
     388:	8f 90       	pop	r8
     38a:	08 95       	ret

0000038c <_ZN7Ductfan9calibrateEv>:
{
	minvalue = min;
	maxvalue = max;
}
void Ductfan::calibrate()
{
     38c:	cf 93       	push	r28
     38e:	df 93       	push	r29
     390:	ec 01       	movw	r28, r24
	run(100);
     392:	40 e0       	ldi	r20, 0x00	; 0
     394:	50 e0       	ldi	r21, 0x00	; 0
     396:	68 ec       	ldi	r22, 0xC8	; 200
     398:	72 e4       	ldi	r23, 0x42	; 66
     39a:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7Ductfan3runEf>
     39e:	8f ef       	ldi	r24, 0xFF	; 255
     3a0:	97 ea       	ldi	r25, 0xA7	; 167
     3a2:	a1 e6       	ldi	r26, 0x61	; 97
     3a4:	81 50       	subi	r24, 0x01	; 1
     3a6:	90 40       	sbci	r25, 0x00	; 0
     3a8:	a0 40       	sbci	r26, 0x00	; 0
     3aa:	e1 f7       	brne	.-8      	; 0x3a4 <_ZN7Ductfan9calibrateEv+0x18>
     3ac:	00 c0       	rjmp	.+0      	; 0x3ae <_ZN7Ductfan9calibrateEv+0x22>
     3ae:	00 00       	nop
	_delay_ms(2000);
	run(0);
     3b0:	ce 01       	movw	r24, r28
     3b2:	40 e0       	ldi	r20, 0x00	; 0
     3b4:	50 e0       	ldi	r21, 0x00	; 0
     3b6:	ba 01       	movw	r22, r20
     3b8:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7Ductfan3runEf>
     3bc:	8f ef       	ldi	r24, 0xFF	; 255
     3be:	93 e2       	ldi	r25, 0x23	; 35
     3c0:	a4 ef       	ldi	r26, 0xF4	; 244
     3c2:	81 50       	subi	r24, 0x01	; 1
     3c4:	90 40       	sbci	r25, 0x00	; 0
     3c6:	a0 40       	sbci	r26, 0x00	; 0
     3c8:	e1 f7       	brne	.-8      	; 0x3c2 <_ZN7Ductfan9calibrateEv+0x36>
     3ca:	00 c0       	rjmp	.+0      	; 0x3cc <_ZN7Ductfan9calibrateEv+0x40>
     3cc:	00 00       	nop
	_delay_ms(5000);
}
     3ce:	df 91       	pop	r29
     3d0:	cf 91       	pop	r28
     3d2:	08 95       	ret

000003d4 <_Z20Lidar_Data_Calculatev>:
   }
}

void Lidar_Data_Calculate()
{
	LidarDown_Data=LidarDown.Lidar_Down_Get_Data();
     3d4:	8c ea       	ldi	r24, 0xAC	; 172
     3d6:	92 e0       	ldi	r25, 0x02	; 2
     3d8:	0e 94 6d 13 	call	0x26da	; 0x26da <_ZN10Lidar_Down19Lidar_Down_Get_DataEv>
     3dc:	0e 94 4a 19 	call	0x3294	; 0x3294 <__fixunssfsi>
     3e0:	dc 01       	movw	r26, r24
     3e2:	cb 01       	movw	r24, r22
     3e4:	90 93 45 02 	sts	0x0245, r25
     3e8:	80 93 44 02 	sts	0x0244, r24
		if (LidarDown_Data>250)
		{
			UART2Transmit('L');
		}
	}
}
     3ec:	08 95       	ret

000003ee <_Z14Lidar_Scanningv>:
		 Reverse_Flag=0;
	 }
}

void Lidar_Scanning()
{
     3ee:	cf 92       	push	r12
     3f0:	df 92       	push	r13
     3f2:	ef 92       	push	r14
     3f4:	ff 92       	push	r15
	Lidar_Data1=LidarUp.Lidar_Up_Get_Data();
     3f6:	8b ea       	ldi	r24, 0xAB	; 171
     3f8:	92 e0       	ldi	r25, 0x02	; 2
     3fa:	0e 94 48 14 	call	0x2890	; 0x2890 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv>
     3fe:	6b 01       	movw	r12, r22
     400:	7c 01       	movw	r14, r24
     402:	60 93 4d 02 	sts	0x024D, r22
     406:	70 93 4e 02 	sts	0x024E, r23
     40a:	80 93 4f 02 	sts	0x024F, r24
     40e:	90 93 50 02 	sts	0x0250, r25
	
	if (Last_Lidar_Data==0 && Lidar_Data1==0 ) 
     412:	60 91 48 02 	lds	r22, 0x0248
     416:	70 91 49 02 	lds	r23, 0x0249
     41a:	80 91 4a 02 	lds	r24, 0x024A
     41e:	90 91 4b 02 	lds	r25, 0x024B
     422:	20 e0       	ldi	r18, 0x00	; 0
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	a9 01       	movw	r20, r18
     428:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__cmpsf2>
     42c:	88 23       	and	r24, r24
     42e:	71 f4       	brne	.+28     	; 0x44c <_Z14Lidar_Scanningv+0x5e>
     430:	c7 01       	movw	r24, r14
     432:	b6 01       	movw	r22, r12
     434:	20 e0       	ldi	r18, 0x00	; 0
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	a9 01       	movw	r20, r18
     43a:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__cmpsf2>
     43e:	88 23       	and	r24, r24
     440:	29 f4       	brne	.+10     	; 0x44c <_Z14Lidar_Scanningv+0x5e>
	{
		Lost_Eco++;
     442:	80 91 4c 02 	lds	r24, 0x024C
     446:	8f 5f       	subi	r24, 0xFF	; 255
     448:	80 93 4c 02 	sts	0x024C, r24
	}
	if (Lost_Eco>2)
     44c:	80 91 4c 02 	lds	r24, 0x024C
     450:	83 30       	cpi	r24, 0x03	; 3
     452:	40 f1       	brcs	.+80     	; 0x4a4 <_Z14Lidar_Scanningv+0xb6>
	{
		Duct_Angle=Duct_Angle-Servo_Rotate_Angle-2;
     454:	20 91 0c 02 	lds	r18, 0x020C
     458:	80 91 0d 02 	lds	r24, 0x020D
     45c:	90 91 0e 02 	lds	r25, 0x020E
     460:	82 1b       	sub	r24, r18
     462:	91 09       	sbc	r25, r1
     464:	02 97       	sbiw	r24, 0x02	; 2
     466:	90 93 0e 02 	sts	0x020E, r25
     46a:	80 93 0d 02 	sts	0x020D, r24
		if (Duct_Angle<=91)
     46e:	8c 35       	cpi	r24, 0x5C	; 92
     470:	91 05       	cpc	r25, r1
     472:	34 f4       	brge	.+12     	; 0x480 <_Z14Lidar_Scanningv+0x92>
		{
			Duct_Angle=91;
     474:	8b e5       	ldi	r24, 0x5B	; 91
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	90 93 0e 02 	sts	0x020E, r25
     47c:	80 93 0d 02 	sts	0x020D, r24
		}
		Servoo.Rotate_Duct_Servo(Duct_Angle);
     480:	60 91 0d 02 	lds	r22, 0x020D
     484:	70 91 0e 02 	lds	r23, 0x020E
     488:	88 27       	eor	r24, r24
     48a:	77 fd       	sbrc	r23, 7
     48c:	80 95       	com	r24
     48e:	98 2f       	mov	r25, r24
     490:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
     494:	ab 01       	movw	r20, r22
     496:	bc 01       	movw	r22, r24
     498:	83 ec       	ldi	r24, 0xC3	; 195
     49a:	92 e0       	ldi	r25, 0x02	; 2
     49c:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <_ZN5Servo17Rotate_Duct_ServoEf>
		Lost_Eco=0;
     4a0:	10 92 4c 02 	sts	0x024C, r1
	}
	Last_Lidar_Data=Lidar_Data1;
     4a4:	80 91 4d 02 	lds	r24, 0x024D
     4a8:	90 91 4e 02 	lds	r25, 0x024E
     4ac:	a0 91 4f 02 	lds	r26, 0x024F
     4b0:	b0 91 50 02 	lds	r27, 0x0250
     4b4:	80 93 48 02 	sts	0x0248, r24
     4b8:	90 93 49 02 	sts	0x0249, r25
     4bc:	a0 93 4a 02 	sts	0x024A, r26
     4c0:	b0 93 4b 02 	sts	0x024B, r27
     4c4:	8f e3       	ldi	r24, 0x3F	; 63
     4c6:	9c e9       	ldi	r25, 0x9C	; 156
     4c8:	01 97       	sbiw	r24, 0x01	; 1
     4ca:	f1 f7       	brne	.-4      	; 0x4c8 <_Z14Lidar_Scanningv+0xda>
     4cc:	00 c0       	rjmp	.+0      	; 0x4ce <_Z14Lidar_Scanningv+0xe0>
     4ce:	00 00       	nop
	_delay_ms(10);
}
     4d0:	ff 90       	pop	r15
     4d2:	ef 90       	pop	r14
     4d4:	df 90       	pop	r13
     4d6:	cf 90       	pop	r12
     4d8:	08 95       	ret

000004da <_Z17Init_Limit_Switchv>:
		
}
//limit switch pcint enable 
void Init_Limit_Switch()
{
	DDRK &=~ ((1<<DDK6)|(1<<DDK7));
     4da:	e7 e0       	ldi	r30, 0x07	; 7
     4dc:	f1 e0       	ldi	r31, 0x01	; 1
     4de:	80 81       	ld	r24, Z
     4e0:	8f 73       	andi	r24, 0x3F	; 63
     4e2:	80 83       	st	Z, r24
	PORTK |= ((1<<PK6)|(1<<PK7));
     4e4:	e8 e0       	ldi	r30, 0x08	; 8
     4e6:	f1 e0       	ldi	r31, 0x01	; 1
     4e8:	80 81       	ld	r24, Z
     4ea:	80 6c       	ori	r24, 0xC0	; 192
     4ec:	80 83       	st	Z, r24
	PCICR |= (1<<PCIE2);
     4ee:	e8 e6       	ldi	r30, 0x68	; 104
     4f0:	f0 e0       	ldi	r31, 0x00	; 0
     4f2:	80 81       	ld	r24, Z
     4f4:	84 60       	ori	r24, 0x04	; 4
     4f6:	80 83       	st	Z, r24
	PCMSK2 |= ((1<<PCINT22)|(1<<PCINT23));
     4f8:	ed e6       	ldi	r30, 0x6D	; 109
     4fa:	f0 e0       	ldi	r31, 0x00	; 0
     4fc:	80 81       	ld	r24, Z
     4fe:	80 6c       	ori	r24, 0xC0	; 192
     500:	80 83       	st	Z, r24
}
     502:	08 95       	ret

00000504 <_Z14Reset_Positionv>:
	Servoo.Set_Range_Gripper_Servo(Servo_Gripper_Min,Servo_Gripper_Max);
}
//reset of duct and servo
void Reset_Position()
{
	Servoo.Rotate_Duct_Servo(Duct_Angle);
     504:	60 91 0d 02 	lds	r22, 0x020D
     508:	70 91 0e 02 	lds	r23, 0x020E
     50c:	88 27       	eor	r24, r24
     50e:	77 fd       	sbrc	r23, 7
     510:	80 95       	com	r24
     512:	98 2f       	mov	r25, r24
     514:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
     518:	ab 01       	movw	r20, r22
     51a:	bc 01       	movw	r22, r24
     51c:	83 ec       	ldi	r24, 0xC3	; 195
     51e:	92 e0       	ldi	r25, 0x02	; 2
     520:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <_ZN5Servo17Rotate_Duct_ServoEf>
	PORTH &=~ ((1<<PH3));
     524:	e2 e0       	ldi	r30, 0x02	; 2
     526:	f1 e0       	ldi	r31, 0x01	; 1
     528:	80 81       	ld	r24, Z
     52a:	87 7f       	andi	r24, 0xF7	; 247
     52c:	80 83       	st	Z, r24
	//Servoo.Rotate_Gripper_Servo(Gripper_Angle);
	PORTH |= ((1<<PH3));
     52e:	80 81       	ld	r24, Z
     530:	88 60       	ori	r24, 0x08	; 8
     532:	80 83       	st	Z, r24
}
     534:	08 95       	ret

00000536 <_Z14Wait_For_Startv>:
	unsigned char Run_Flag=1;
	unsigned char Uart2_Datta=0;
	
	while (Run_Flag)
	{
		Uart2_Datta=UART2Receive();	
     536:	0e 94 91 17 	call	0x2f22	; 0x2f22 <_Z12UART2Receivev>
		switch(Uart2_Datta)
     53a:	88 35       	cpi	r24, 0x58	; 88
     53c:	71 f1       	breq	.+92     	; 0x59a <_Z14Wait_For_Startv+0x64>
     53e:	89 35       	cpi	r24, 0x59	; 89
     540:	28 f4       	brcc	.+10     	; 0x54c <_Z14Wait_For_Startv+0x16>
     542:	81 34       	cpi	r24, 0x41	; 65
     544:	41 f0       	breq	.+16     	; 0x556 <_Z14Wait_For_Startv+0x20>
     546:	87 35       	cpi	r24, 0x57	; 87
     548:	b1 f7       	brne	.-20     	; 0x536 <_Z14Wait_For_Startv>
     54a:	16 c0       	rjmp	.+44     	; 0x578 <_Z14Wait_For_Startv+0x42>
     54c:	89 35       	cpi	r24, 0x59	; 89
     54e:	b1 f1       	breq	.+108    	; 0x5bc <_Z14Wait_For_Startv+0x86>
     550:	8a 35       	cpi	r24, 0x5A	; 90
     552:	89 f7       	brne	.-30     	; 0x536 <_Z14Wait_For_Startv>
     554:	45 c0       	rjmp	.+138    	; 0x5e0 <_Z14Wait_For_Startv+0xaa>
		{
			case 'A':
			if (Case_A)
     556:	80 91 09 02 	lds	r24, 0x0209
     55a:	88 23       	and	r24, r24
     55c:	61 f3       	breq	.-40     	; 0x536 <_Z14Wait_For_Startv>
			{
				UART2Transmit('#');
     55e:	83 e2       	ldi	r24, 0x23	; 35
     560:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
				Run_Flag=0;
				Check_List=0;
     564:	10 92 47 02 	sts	0x0247, r1
				Main_Flag=1;
     568:	81 e0       	ldi	r24, 0x01	; 1
     56a:	80 93 46 02 	sts	0x0246, r24
				Case_A=0;
     56e:	10 92 09 02 	sts	0x0209, r1
				Case_B=1;			
     572:	80 93 3a 02 	sts	0x023A, r24
     576:	08 95       	ret
			}
			break;
			
			case 'W':
			if (Case_W)
     578:	80 91 08 02 	lds	r24, 0x0208
     57c:	88 23       	and	r24, r24
     57e:	d9 f2       	breq	.-74     	; 0x536 <_Z14Wait_For_Startv>
			{
				UART2Transmit('#');
     580:	83 e2       	ldi	r24, 0x23	; 35
     582:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
				Restart_Flag_First=1;
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	80 93 3d 02 	sts	0x023D, r24
				Set_Value_Flag=1;
     58c:	80 93 27 02 	sts	0x0227, r24
				Main_Flag=1;
     590:	80 93 46 02 	sts	0x0246, r24
				Run_Flag=0;
				Check_List=0;
     594:	10 92 47 02 	sts	0x0247, r1
     598:	08 95       	ret
			}
			break;
			
			case 'X':
			if (Case_X)
     59a:	80 91 07 02 	lds	r24, 0x0207
     59e:	88 23       	and	r24, r24
     5a0:	51 f2       	breq	.-108    	; 0x536 <_Z14Wait_For_Startv>
			{
				UART2Transmit('#');
     5a2:	83 e2       	ldi	r24, 0x23	; 35
     5a4:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
				Restart_Flag_Second=1;
     5a8:	81 e0       	ldi	r24, 0x01	; 1
     5aa:	80 93 3c 02 	sts	0x023C, r24
				Set_Value_Flag=1;
     5ae:	80 93 27 02 	sts	0x0227, r24
				Main_Flag=1;
     5b2:	80 93 46 02 	sts	0x0246, r24
				Run_Flag=0;
				Check_List=0;
     5b6:	10 92 47 02 	sts	0x0247, r1
     5ba:	08 95       	ret
			}
			break;
			
			case 'Y':
			if (Case_Y)
     5bc:	80 91 06 02 	lds	r24, 0x0206
     5c0:	88 23       	and	r24, r24
     5c2:	09 f4       	brne	.+2      	; 0x5c6 <_Z14Wait_For_Startv+0x90>
     5c4:	b8 cf       	rjmp	.-144    	; 0x536 <_Z14Wait_For_Startv>
			{
				UART2Transmit('#');
     5c6:	83 e2       	ldi	r24, 0x23	; 35
     5c8:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
				Restart_Flag_Third=1;
     5cc:	81 e0       	ldi	r24, 0x01	; 1
     5ce:	80 93 3b 02 	sts	0x023B, r24
				Set_Value_Flag=1;
     5d2:	80 93 27 02 	sts	0x0227, r24
				Main_Flag=1;
     5d6:	80 93 46 02 	sts	0x0246, r24
				Run_Flag=0;
				Check_List=0;
     5da:	10 92 47 02 	sts	0x0247, r1
     5de:	08 95       	ret
			}
			break;
			
			case 'Z':
			if (Case_Z)
     5e0:	80 91 05 02 	lds	r24, 0x0205
     5e4:	88 23       	and	r24, r24
     5e6:	09 f4       	brne	.+2      	; 0x5ea <_Z14Wait_For_Startv+0xb4>
     5e8:	a6 cf       	rjmp	.-180    	; 0x536 <_Z14Wait_For_Startv>
			{
				UART2Transmit('#');
     5ea:	83 e2       	ldi	r24, 0x23	; 35
     5ec:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
				Case_Z=0;
     5f0:	10 92 05 02 	sts	0x0205, r1
				Run_Flag=0;
				Check_List=1;
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	80 93 47 02 	sts	0x0247, r24
				Main_Flag=0;
     5fa:	10 92 46 02 	sts	0x0246, r1
     5fe:	08 95       	ret

00000600 <_Z20LidarDown_PidComputev>:
		}
	}
}
////Uart receive function
void LidarDown_PidCompute()
{
     600:	cf 92       	push	r12
     602:	df 92       	push	r13
     604:	ef 92       	push	r14
     606:	ff 92       	push	r15
     608:	0f 93       	push	r16
     60a:	1f 93       	push	r17
	if(LidarDown_PidCompute_Flag&&pidflag)
     60c:	80 91 0b 02 	lds	r24, 0x020B
     610:	88 23       	and	r24, r24
     612:	09 f4       	brne	.+2      	; 0x616 <_Z20LidarDown_PidComputev+0x16>
     614:	f8 c0       	rjmp	.+496    	; 0x806 <_Z20LidarDown_PidComputev+0x206>
     616:	80 91 83 02 	lds	r24, 0x0283
     61a:	88 23       	and	r24, r24
     61c:	09 f4       	brne	.+2      	; 0x620 <_Z20LidarDown_PidComputev+0x20>
     61e:	f3 c0       	rjmp	.+486    	; 0x806 <_Z20LidarDown_PidComputev+0x206>
	{
		unsigned int LidarDown_TempData=0;
		LidarDown_Data=0;
     620:	10 92 45 02 	sts	0x0245, r1
     624:	10 92 44 02 	sts	0x0244, r1
		unsigned int com=0;
	
		for (int i=0;i<2;i++)
		{
			LidarDown_TempData=LidarDown.Lidar_Down_Get_Data();
     628:	8c ea       	ldi	r24, 0xAC	; 172
     62a:	92 e0       	ldi	r25, 0x02	; 2
     62c:	0e 94 6d 13 	call	0x26da	; 0x26da <_ZN10Lidar_Down19Lidar_Down_Get_DataEv>
     630:	0e 94 4a 19 	call	0x3294	; 0x3294 <__fixunssfsi>
			if (LidarDown_TempData>0)
     634:	61 15       	cp	r22, r1
     636:	71 05       	cpc	r23, r1
     638:	89 f0       	breq	.+34     	; 0x65c <_Z20LidarDown_PidComputev+0x5c>
			{
				LidarDown_Last_Data=LidarDown_TempData;
     63a:	70 93 41 02 	sts	0x0241, r23
     63e:	60 93 40 02 	sts	0x0240, r22
				LidarDown_Data=LidarDown_Data+LidarDown_TempData;
     642:	80 91 44 02 	lds	r24, 0x0244
     646:	90 91 45 02 	lds	r25, 0x0245
     64a:	68 0f       	add	r22, r24
     64c:	79 1f       	adc	r23, r25
     64e:	70 93 45 02 	sts	0x0245, r23
     652:	60 93 44 02 	sts	0x0244, r22
				com++;
     656:	01 e0       	ldi	r16, 0x01	; 1
     658:	10 e0       	ldi	r17, 0x00	; 0
     65a:	02 c0       	rjmp	.+4      	; 0x660 <_Z20LidarDown_PidComputev+0x60>
{
	if(LidarDown_PidCompute_Flag&&pidflag)
	{
		unsigned int LidarDown_TempData=0;
		LidarDown_Data=0;
		unsigned int com=0;
     65c:	00 e0       	ldi	r16, 0x00	; 0
     65e:	10 e0       	ldi	r17, 0x00	; 0
	
		for (int i=0;i<2;i++)
		{
			LidarDown_TempData=LidarDown.Lidar_Down_Get_Data();
     660:	8c ea       	ldi	r24, 0xAC	; 172
     662:	92 e0       	ldi	r25, 0x02	; 2
     664:	0e 94 6d 13 	call	0x26da	; 0x26da <_ZN10Lidar_Down19Lidar_Down_Get_DataEv>
     668:	0e 94 4a 19 	call	0x3294	; 0x3294 <__fixunssfsi>
			if (LidarDown_TempData>0)
     66c:	61 15       	cp	r22, r1
     66e:	71 05       	cpc	r23, r1
     670:	81 f0       	breq	.+32     	; 0x692 <_Z20LidarDown_PidComputev+0x92>
			{
				LidarDown_Last_Data=LidarDown_TempData;
     672:	70 93 41 02 	sts	0x0241, r23
     676:	60 93 40 02 	sts	0x0240, r22
				LidarDown_Data=LidarDown_Data+LidarDown_TempData;
     67a:	80 91 44 02 	lds	r24, 0x0244
     67e:	90 91 45 02 	lds	r25, 0x0245
     682:	68 0f       	add	r22, r24
     684:	79 1f       	adc	r23, r25
     686:	70 93 45 02 	sts	0x0245, r23
     68a:	60 93 44 02 	sts	0x0244, r22
				com++;
     68e:	0f 5f       	subi	r16, 0xFF	; 255
     690:	1f 4f       	sbci	r17, 0xFF	; 255
		
			}
		}
		if (com)
     692:	01 15       	cp	r16, r1
     694:	11 05       	cpc	r17, r1
     696:	59 f0       	breq	.+22     	; 0x6ae <_Z20LidarDown_PidComputev+0xae>
		{
			LidarDown_Data=LidarDown_Data/com;
     698:	80 91 44 02 	lds	r24, 0x0244
     69c:	90 91 45 02 	lds	r25, 0x0245
     6a0:	b8 01       	movw	r22, r16
     6a2:	0e 94 8f 1a 	call	0x351e	; 0x351e <__udivmodhi4>
     6a6:	70 93 45 02 	sts	0x0245, r23
     6aa:	60 93 44 02 	sts	0x0244, r22
		}
			
		if (LidarDown_Data!=0)
     6ae:	80 91 44 02 	lds	r24, 0x0244
     6b2:	90 91 45 02 	lds	r25, 0x0245
     6b6:	00 97       	sbiw	r24, 0x00	; 0
     6b8:	09 f4       	brne	.+2      	; 0x6bc <_Z20LidarDown_PidComputev+0xbc>
     6ba:	8e c0       	rjmp	.+284    	; 0x7d8 <_Z20LidarDown_PidComputev+0x1d8>
		{			
			if(Highland)
     6bc:	20 91 52 02 	lds	r18, 0x0252
     6c0:	22 23       	and	r18, r18
     6c2:	09 f4       	brne	.+2      	; 0x6c6 <_Z20LidarDown_PidComputev+0xc6>
     6c4:	48 c0       	rjmp	.+144    	; 0x756 <_Z20LidarDown_PidComputev+0x156>
			{
				if(first_run_init)
     6c6:	20 91 24 02 	lds	r18, 0x0224
     6ca:	22 23       	and	r18, r18
     6cc:	51 f0       	breq	.+20     	; 0x6e2 <_Z20LidarDown_PidComputev+0xe2>
				{
					last_lidardowndata=Hillheight;
     6ce:	20 91 7c 02 	lds	r18, 0x027C
     6d2:	30 91 7d 02 	lds	r19, 0x027D
     6d6:	30 93 82 02 	sts	0x0282, r19
     6da:	20 93 81 02 	sts	0x0281, r18
					first_run_init=0;
     6de:	10 92 24 02 	sts	0x0224, r1
				}
				if(abs(LidarDown_Data-last_lidardowndata)>15)
     6e2:	20 91 81 02 	lds	r18, 0x0281
     6e6:	30 91 82 02 	lds	r19, 0x0282
     6ea:	82 1b       	sub	r24, r18
     6ec:	93 0b       	sbc	r25, r19
     6ee:	1a f4       	brpl	.+6      	; 0x6f6 <_Z20LidarDown_PidComputev+0xf6>
     6f0:	90 95       	com	r25
     6f2:	81 95       	neg	r24
     6f4:	9f 4f       	sbci	r25, 0xFF	; 255
     6f6:	80 31       	cpi	r24, 0x10	; 16
     6f8:	91 05       	cpc	r25, r1
     6fa:	3c f0       	brlt	.+14     	; 0x70a <_Z20LidarDown_PidComputev+0x10a>
				{
					lidar_hillstatus=!lidar_hillstatus;
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	90 91 80 02 	lds	r25, 0x0280
     702:	91 11       	cpse	r25, r1
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	80 93 80 02 	sts	0x0280, r24
				}
				if(lidar_hillstatus==ONHILL)
     70a:	80 91 80 02 	lds	r24, 0x0280
     70e:	88 23       	and	r24, r24
     710:	49 f4       	brne	.+18     	; 0x724 <_Z20LidarDown_PidComputev+0x124>
				{
					hill_separation=Vertical_Separation;
     712:	80 91 13 02 	lds	r24, 0x0213
     716:	90 91 14 02 	lds	r25, 0x0214
     71a:	90 93 7f 02 	sts	0x027F, r25
     71e:	80 93 7e 02 	sts	0x027E, r24
     722:	10 c0       	rjmp	.+32     	; 0x744 <_Z20LidarDown_PidComputev+0x144>
				}
				else if(lidar_hillstatus==OFFHILL)
     724:	81 30       	cpi	r24, 0x01	; 1
     726:	71 f4       	brne	.+28     	; 0x744 <_Z20LidarDown_PidComputev+0x144>
				{
					hill_separation=Vertical_Separation+Hillheight;
     728:	80 91 13 02 	lds	r24, 0x0213
     72c:	90 91 14 02 	lds	r25, 0x0214
     730:	20 91 7c 02 	lds	r18, 0x027C
     734:	30 91 7d 02 	lds	r19, 0x027D
     738:	82 0f       	add	r24, r18
     73a:	93 1f       	adc	r25, r19
     73c:	90 93 7f 02 	sts	0x027F, r25
     740:	80 93 7e 02 	sts	0x027E, r24
				}
					
				last_lidardowndata=hill_separation;	
     744:	80 91 7e 02 	lds	r24, 0x027E
     748:	90 91 7f 02 	lds	r25, 0x027F
     74c:	90 93 82 02 	sts	0x0282, r25
     750:	80 93 81 02 	sts	0x0281, r24
     754:	08 c0       	rjmp	.+16     	; 0x766 <_Z20LidarDown_PidComputev+0x166>
			}
			else
			{
				hill_separation=Vertical_Separation;
     756:	80 91 13 02 	lds	r24, 0x0213
     75a:	90 91 14 02 	lds	r25, 0x0214
     75e:	90 93 7f 02 	sts	0x027F, r25
     762:	80 93 7e 02 	sts	0x027E, r24
			}
			Pid_LidarDown = LidarDownPid.Compute_PID((float)LidarDown_Data,(float)hill_separation);
     766:	60 91 44 02 	lds	r22, 0x0244
     76a:	70 91 45 02 	lds	r23, 0x0245
     76e:	80 e0       	ldi	r24, 0x00	; 0
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	0e 94 76 19 	call	0x32ec	; 0x32ec <__floatunsisf>
     776:	6b 01       	movw	r12, r22
     778:	7c 01       	movw	r14, r24
     77a:	60 91 7e 02 	lds	r22, 0x027E
     77e:	70 91 7f 02 	lds	r23, 0x027F
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	0e 94 76 19 	call	0x32ec	; 0x32ec <__floatunsisf>
     78a:	8b 01       	movw	r16, r22
     78c:	9c 01       	movw	r18, r24
     78e:	8b e8       	ldi	r24, 0x8B	; 139
     790:	92 e0       	ldi	r25, 0x02	; 2
     792:	b7 01       	movw	r22, r14
     794:	a6 01       	movw	r20, r12
     796:	0e 94 b2 15 	call	0x2b64	; 0x2b64 <_ZN3PID11Compute_PIDEff>
     79a:	0e 94 45 19 	call	0x328a	; 0x328a <__fixsfsi>
     79e:	dc 01       	movw	r26, r24
     7a0:	cb 01       	movw	r24, r22
     7a2:	9c 01       	movw	r18, r24
     7a4:	90 93 43 02 	sts	0x0243, r25
     7a8:	80 93 42 02 	sts	0x0242, r24
		
			if (Pid_LidarDown<0)
     7ac:	99 23       	and	r25, r25
     7ae:	74 f4       	brge	.+28     	; 0x7cc <_Z20LidarDown_PidComputev+0x1cc>
			{
				Pid_LidarDown=(0-Pid_LidarDown);
     7b0:	30 95       	com	r19
     7b2:	21 95       	neg	r18
     7b4:	3f 4f       	sbci	r19, 0xFF	; 255
     7b6:	30 93 43 02 	sts	0x0243, r19
     7ba:	20 93 42 02 	sts	0x0242, r18
				Mot.Set_Motor_Direction(Wiper,Forward);
     7be:	8b ec       	ldi	r24, 0xCB	; 203
     7c0:	92 e0       	ldi	r25, 0x02	; 2
     7c2:	62 e0       	ldi	r22, 0x02	; 2
     7c4:	41 e0       	ldi	r20, 0x01	; 1
     7c6:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
     7ca:	06 c0       	rjmp	.+12     	; 0x7d8 <_Z20LidarDown_PidComputev+0x1d8>
			}		
			else 
			{
				Mot.Set_Motor_Direction(Wiper,Reverse);
     7cc:	8b ec       	ldi	r24, 0xCB	; 203
     7ce:	92 e0       	ldi	r25, 0x02	; 2
     7d0:	62 e0       	ldi	r22, 0x02	; 2
     7d2:	40 e0       	ldi	r20, 0x00	; 0
     7d4:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
			}
		}
		
		if(LidarDown_Flag)
     7d8:	80 91 0a 02 	lds	r24, 0x020A
     7dc:	88 23       	and	r24, r24
     7de:	59 f0       	breq	.+22     	; 0x7f6 <_Z20LidarDown_PidComputev+0x1f6>
		{
			Mot.Run(Wiper,Pid_LidarDown);
     7e0:	40 91 42 02 	lds	r20, 0x0242
     7e4:	50 91 43 02 	lds	r21, 0x0243
     7e8:	8b ec       	ldi	r24, 0xCB	; 203
     7ea:	92 e0       	ldi	r25, 0x02	; 2
     7ec:	62 e0       	ldi	r22, 0x02	; 2
     7ee:	70 e0       	ldi	r23, 0x00	; 0
     7f0:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
     7f4:	08 c0       	rjmp	.+16     	; 0x806 <_Z20LidarDown_PidComputev+0x206>
		}
		else
		{
			Mot.Run(Wiper,0);
     7f6:	8b ec       	ldi	r24, 0xCB	; 203
     7f8:	92 e0       	ldi	r25, 0x02	; 2
     7fa:	62 e0       	ldi	r22, 0x02	; 2
     7fc:	70 e0       	ldi	r23, 0x00	; 0
     7fe:	40 e0       	ldi	r20, 0x00	; 0
     800:	50 e0       	ldi	r21, 0x00	; 0
     802:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		}
			
	}
		pidflag=0;
     806:	10 92 83 02 	sts	0x0283, r1
}
     80a:	1f 91       	pop	r17
     80c:	0f 91       	pop	r16
     80e:	ff 90       	pop	r15
     810:	ef 90       	pop	r14
     812:	df 90       	pop	r13
     814:	cf 90       	pop	r12
     816:	08 95       	ret

00000818 <_Z16LidarDown_Heightv>:
	}
	
}

void LidarDown_Height()
{
     818:	cf 92       	push	r12
     81a:	df 92       	push	r13
     81c:	ef 92       	push	r14
     81e:	ff 92       	push	r15
     820:	0f 93       	push	r16
     822:	1f 93       	push	r17
	LidarDownPid.Set_PID(KP,KI,KD);
     824:	40 91 20 02 	lds	r20, 0x0220
     828:	50 91 21 02 	lds	r21, 0x0221
     82c:	60 91 22 02 	lds	r22, 0x0222
     830:	70 91 23 02 	lds	r23, 0x0223
     834:	00 91 74 02 	lds	r16, 0x0274
     838:	10 91 75 02 	lds	r17, 0x0275
     83c:	20 91 76 02 	lds	r18, 0x0276
     840:	30 91 77 02 	lds	r19, 0x0277
     844:	c0 90 78 02 	lds	r12, 0x0278
     848:	d0 90 79 02 	lds	r13, 0x0279
     84c:	e0 90 7a 02 	lds	r14, 0x027A
     850:	f0 90 7b 02 	lds	r15, 0x027B
     854:	8b e8       	ldi	r24, 0x8B	; 139
     856:	92 e0       	ldi	r25, 0x02	; 2
     858:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN3PID7Set_PIDEfff>
	LidarDown_Flag=1;
     85c:	81 e0       	ldi	r24, 0x01	; 1
     85e:	80 93 0a 02 	sts	0x020A, r24
	Vertical_Separation=38;
     862:	86 e2       	ldi	r24, 0x26	; 38
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	90 93 14 02 	sts	0x0214, r25
     86a:	80 93 13 02 	sts	0x0213, r24
	
	while(1)
	{
		LidarDown_PidCompute();
     86e:	0e 94 00 03 	call	0x600	; 0x600 <_Z20LidarDown_PidComputev>
		if((LidarDown_Data>37) && (LidarDown_Data<40))
     872:	80 91 44 02 	lds	r24, 0x0244
     876:	90 91 45 02 	lds	r25, 0x0245
     87a:	86 97       	sbiw	r24, 0x26	; 38
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	91 05       	cpc	r25, r1
     880:	b0 f7       	brcc	.-20     	; 0x86e <_Z16LidarDown_Heightv+0x56>
		{
			Mot.Run(Wiper,0);
     882:	8b ec       	ldi	r24, 0xCB	; 203
     884:	92 e0       	ldi	r25, 0x02	; 2
     886:	62 e0       	ldi	r22, 0x02	; 2
     888:	70 e0       	ldi	r23, 0x00	; 0
     88a:	40 e0       	ldi	r20, 0x00	; 0
     88c:	50 e0       	ldi	r21, 0x00	; 0
     88e:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
			LidarDown_PidCompute_Flag=0;
     892:	10 92 0b 02 	sts	0x020B, r1
			break;
		}	
	}
		
}
     896:	1f 91       	pop	r17
     898:	0f 91       	pop	r16
     89a:	ff 90       	pop	r15
     89c:	ef 90       	pop	r14
     89e:	df 90       	pop	r13
     8a0:	cf 90       	pop	r12
     8a2:	08 95       	ret

000008a4 <_Z11Uart_Check1v>:
			
	}
		pidflag=0;
}
void Uart_Check1()
{
     8a4:	af 92       	push	r10
     8a6:	bf 92       	push	r11
     8a8:	cf 92       	push	r12
     8aa:	df 92       	push	r13
     8ac:	ef 92       	push	r14
     8ae:	ff 92       	push	r15
     8b0:	0f 93       	push	r16
     8b2:	1f 93       	push	r17
     8b4:	cf 93       	push	r28
     8b6:	df 93       	push	r29
	char UART2_Data_Check=0;
	UART2_Data_Check=UART2Receive();
     8b8:	0e 94 91 17 	call	0x2f22	; 0x2f22 <_Z12UART2Receivev>
	switch(UART2_Data_Check)
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	81 56       	subi	r24, 0x61	; 97
     8c0:	90 40       	sbci	r25, 0x00	; 0
     8c2:	8a 31       	cpi	r24, 0x1A	; 26
     8c4:	91 05       	cpc	r25, r1
     8c6:	08 f0       	brcs	.+2      	; 0x8ca <_Z11Uart_Check1v+0x26>
     8c8:	81 c3       	rjmp	.+1794   	; 0xfcc <_Z11Uart_Check1v+0x728>
     8ca:	8e 58       	subi	r24, 0x8E	; 142
     8cc:	9f 4f       	sbci	r25, 0xFF	; 255
     8ce:	fc 01       	movw	r30, r24
     8d0:	ee 0f       	add	r30, r30
     8d2:	ff 1f       	adc	r31, r31
     8d4:	05 90       	lpm	r0, Z+
     8d6:	f4 91       	lpm	r31, Z
     8d8:	e0 2d       	mov	r30, r0
     8da:	19 94       	eijmp
	{
		case 'a':
		Main_Flag=1;
     8dc:	81 e0       	ldi	r24, 0x01	; 1
     8de:	80 93 46 02 	sts	0x0246, r24
		Check_List=0;
     8e2:	10 92 47 02 	sts	0x0247, r1
		Case_B=1;
     8e6:	80 93 3a 02 	sts	0x023A, r24
		break;
     8ea:	70 c3       	rjmp	.+1760   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'b':	// move arm for 200ms forward
		Mot.Set_Motor_Direction(Motor_B,Forward);
     8ec:	cb ec       	ldi	r28, 0xCB	; 203
     8ee:	d2 e0       	ldi	r29, 0x02	; 2
     8f0:	ce 01       	movw	r24, r28
     8f2:	61 e0       	ldi	r22, 0x01	; 1
     8f4:	41 e0       	ldi	r20, 0x01	; 1
     8f6:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
		Mot.Run(Motor_B,2000);
     8fa:	ce 01       	movw	r24, r28
     8fc:	61 e0       	ldi	r22, 0x01	; 1
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	40 ed       	ldi	r20, 0xD0	; 208
     902:	57 e0       	ldi	r21, 0x07	; 7
     904:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
     908:	8f ef       	ldi	r24, 0xFF	; 255
     90a:	93 ec       	ldi	r25, 0xC3	; 195
     90c:	a9 e0       	ldi	r26, 0x09	; 9
     90e:	81 50       	subi	r24, 0x01	; 1
     910:	90 40       	sbci	r25, 0x00	; 0
     912:	a0 40       	sbci	r26, 0x00	; 0
     914:	e1 f7       	brne	.-8      	; 0x90e <_Z11Uart_Check1v+0x6a>
     916:	00 c0       	rjmp	.+0      	; 0x918 <_Z11Uart_Check1v+0x74>
     918:	00 00       	nop
		_delay_ms(200);
		Mot.Run(Motor_B,0);
     91a:	ce 01       	movw	r24, r28
     91c:	61 e0       	ldi	r22, 0x01	; 1
     91e:	70 e0       	ldi	r23, 0x00	; 0
     920:	40 e0       	ldi	r20, 0x00	; 0
     922:	50 e0       	ldi	r21, 0x00	; 0
     924:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		Mot.Set_Motor_Direction(Motor_B,Reverse);
     928:	ce 01       	movw	r24, r28
     92a:	61 e0       	ldi	r22, 0x01	; 1
     92c:	40 e0       	ldi	r20, 0x00	; 0
     92e:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
		Mot.Run(Motor_B,2000);
     932:	ce 01       	movw	r24, r28
     934:	61 e0       	ldi	r22, 0x01	; 1
     936:	70 e0       	ldi	r23, 0x00	; 0
     938:	40 ed       	ldi	r20, 0xD0	; 208
     93a:	57 e0       	ldi	r21, 0x07	; 7
     93c:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
     940:	8f ef       	ldi	r24, 0xFF	; 255
     942:	93 ec       	ldi	r25, 0xC3	; 195
     944:	a9 e0       	ldi	r26, 0x09	; 9
     946:	81 50       	subi	r24, 0x01	; 1
     948:	90 40       	sbci	r25, 0x00	; 0
     94a:	a0 40       	sbci	r26, 0x00	; 0
     94c:	e1 f7       	brne	.-8      	; 0x946 <_Z11Uart_Check1v+0xa2>
     94e:	00 c0       	rjmp	.+0      	; 0x950 <_Z11Uart_Check1v+0xac>
     950:	00 00       	nop
		_delay_ms(200);
		Mot.Run(Motor_B,0);
     952:	ce 01       	movw	r24, r28
     954:	61 e0       	ldi	r22, 0x01	; 1
     956:	70 e0       	ldi	r23, 0x00	; 0
     958:	40 e0       	ldi	r20, 0x00	; 0
     95a:	50 e0       	ldi	r21, 0x00	; 0
     95c:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		break;
     960:	35 c3       	rjmp	.+1642   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'c':	// move arm for 200ms reverse
		break;
		
		case 'd':	// move gripper for 200ms forward
		Mot.Set_Motor_Direction(Motor_A,Forward);
     962:	cb ec       	ldi	r28, 0xCB	; 203
     964:	d2 e0       	ldi	r29, 0x02	; 2
     966:	ce 01       	movw	r24, r28
     968:	60 e0       	ldi	r22, 0x00	; 0
     96a:	41 e0       	ldi	r20, 0x01	; 1
     96c:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
		Mot.Run(Motor_A,2000);
     970:	ce 01       	movw	r24, r28
     972:	60 e0       	ldi	r22, 0x00	; 0
     974:	70 e0       	ldi	r23, 0x00	; 0
     976:	40 ed       	ldi	r20, 0xD0	; 208
     978:	57 e0       	ldi	r21, 0x07	; 7
     97a:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
     97e:	8f ef       	ldi	r24, 0xFF	; 255
     980:	93 ec       	ldi	r25, 0xC3	; 195
     982:	a9 e0       	ldi	r26, 0x09	; 9
     984:	81 50       	subi	r24, 0x01	; 1
     986:	90 40       	sbci	r25, 0x00	; 0
     988:	a0 40       	sbci	r26, 0x00	; 0
     98a:	e1 f7       	brne	.-8      	; 0x984 <_Z11Uart_Check1v+0xe0>
     98c:	00 c0       	rjmp	.+0      	; 0x98e <_Z11Uart_Check1v+0xea>
     98e:	00 00       	nop
		_delay_ms(200);
		Mot.Run(Motor_A,0);
     990:	ce 01       	movw	r24, r28
     992:	60 e0       	ldi	r22, 0x00	; 0
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	40 e0       	ldi	r20, 0x00	; 0
     998:	50 e0       	ldi	r21, 0x00	; 0
     99a:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		Mot.Set_Motor_Direction(Motor_A,Forward);
     99e:	ce 01       	movw	r24, r28
     9a0:	60 e0       	ldi	r22, 0x00	; 0
     9a2:	41 e0       	ldi	r20, 0x01	; 1
     9a4:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
		Mot.Run(Motor_A,2000);
     9a8:	ce 01       	movw	r24, r28
     9aa:	60 e0       	ldi	r22, 0x00	; 0
     9ac:	70 e0       	ldi	r23, 0x00	; 0
     9ae:	40 ed       	ldi	r20, 0xD0	; 208
     9b0:	57 e0       	ldi	r21, 0x07	; 7
     9b2:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
     9b6:	8f ef       	ldi	r24, 0xFF	; 255
     9b8:	93 ec       	ldi	r25, 0xC3	; 195
     9ba:	a9 e0       	ldi	r26, 0x09	; 9
     9bc:	81 50       	subi	r24, 0x01	; 1
     9be:	90 40       	sbci	r25, 0x00	; 0
     9c0:	a0 40       	sbci	r26, 0x00	; 0
     9c2:	e1 f7       	brne	.-8      	; 0x9bc <_Z11Uart_Check1v+0x118>
     9c4:	00 c0       	rjmp	.+0      	; 0x9c6 <_Z11Uart_Check1v+0x122>
     9c6:	00 00       	nop
		_delay_ms(200);
		Mot.Run(Motor_A,0);
     9c8:	ce 01       	movw	r24, r28
     9ca:	60 e0       	ldi	r22, 0x00	; 0
     9cc:	70 e0       	ldi	r23, 0x00	; 0
     9ce:	40 e0       	ldi	r20, 0x00	; 0
     9d0:	50 e0       	ldi	r21, 0x00	; 0
     9d2:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		break;
     9d6:	fa c2       	rjmp	.+1524   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'e':	// move gripper for 200ms reverse
		break;
		
		case 'f':	// move wiper for 200ms forward
		Mot.Set_Motor_Direction(Wiper,Forward);
     9d8:	cb ec       	ldi	r28, 0xCB	; 203
     9da:	d2 e0       	ldi	r29, 0x02	; 2
     9dc:	ce 01       	movw	r24, r28
     9de:	62 e0       	ldi	r22, 0x02	; 2
     9e0:	41 e0       	ldi	r20, 0x01	; 1
     9e2:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
		Mot.Run(Wiper,2000);
     9e6:	ce 01       	movw	r24, r28
     9e8:	62 e0       	ldi	r22, 0x02	; 2
     9ea:	70 e0       	ldi	r23, 0x00	; 0
     9ec:	40 ed       	ldi	r20, 0xD0	; 208
     9ee:	57 e0       	ldi	r21, 0x07	; 7
     9f0:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
     9f4:	8f ef       	ldi	r24, 0xFF	; 255
     9f6:	93 ec       	ldi	r25, 0xC3	; 195
     9f8:	a9 e0       	ldi	r26, 0x09	; 9
     9fa:	81 50       	subi	r24, 0x01	; 1
     9fc:	90 40       	sbci	r25, 0x00	; 0
     9fe:	a0 40       	sbci	r26, 0x00	; 0
     a00:	e1 f7       	brne	.-8      	; 0x9fa <_Z11Uart_Check1v+0x156>
     a02:	00 c0       	rjmp	.+0      	; 0xa04 <_Z11Uart_Check1v+0x160>
     a04:	00 00       	nop
		_delay_ms(200);
		Mot.Run(Wiper,0);
     a06:	ce 01       	movw	r24, r28
     a08:	62 e0       	ldi	r22, 0x02	; 2
     a0a:	70 e0       	ldi	r23, 0x00	; 0
     a0c:	40 e0       	ldi	r20, 0x00	; 0
     a0e:	50 e0       	ldi	r21, 0x00	; 0
     a10:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		Mot.Set_Motor_Direction(Wiper,Reverse);
     a14:	ce 01       	movw	r24, r28
     a16:	62 e0       	ldi	r22, 0x02	; 2
     a18:	40 e0       	ldi	r20, 0x00	; 0
     a1a:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
		Mot.Run(Wiper,2000);
     a1e:	ce 01       	movw	r24, r28
     a20:	62 e0       	ldi	r22, 0x02	; 2
     a22:	70 e0       	ldi	r23, 0x00	; 0
     a24:	40 ed       	ldi	r20, 0xD0	; 208
     a26:	57 e0       	ldi	r21, 0x07	; 7
     a28:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
     a2c:	8f ef       	ldi	r24, 0xFF	; 255
     a2e:	93 ec       	ldi	r25, 0xC3	; 195
     a30:	a9 e0       	ldi	r26, 0x09	; 9
     a32:	81 50       	subi	r24, 0x01	; 1
     a34:	90 40       	sbci	r25, 0x00	; 0
     a36:	a0 40       	sbci	r26, 0x00	; 0
     a38:	e1 f7       	brne	.-8      	; 0xa32 <_Z11Uart_Check1v+0x18e>
     a3a:	00 c0       	rjmp	.+0      	; 0xa3c <_Z11Uart_Check1v+0x198>
     a3c:	00 00       	nop
		_delay_ms(200);
		Mot.Run(Wiper,0);
     a3e:	ce 01       	movw	r24, r28
     a40:	62 e0       	ldi	r22, 0x02	; 2
     a42:	70 e0       	ldi	r23, 0x00	; 0
     a44:	40 e0       	ldi	r20, 0x00	; 0
     a46:	50 e0       	ldi	r21, 0x00	; 0
     a48:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		break;
     a4c:	bf c2       	rjmp	.+1406   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'g':	// move wiper for 200ms reverse
		break;
		
		case 'h':	//increase duct speed by 5% every one click
		Duct_Speed=Duct_Speed+5;
     a4e:	60 91 5a 02 	lds	r22, 0x025A
     a52:	70 91 5b 02 	lds	r23, 0x025B
     a56:	6b 5f       	subi	r22, 0xFB	; 251
     a58:	7f 4f       	sbci	r23, 0xFF	; 255
     a5a:	70 93 5b 02 	sts	0x025B, r23
     a5e:	60 93 5a 02 	sts	0x025A, r22
		Duct.run(Duct_Speed);
     a62:	88 27       	eor	r24, r24
     a64:	77 fd       	sbrc	r23, 7
     a66:	80 95       	com	r24
     a68:	98 2f       	mov	r25, r24
     a6a:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
     a6e:	ab 01       	movw	r20, r22
     a70:	bc 01       	movw	r22, r24
     a72:	8f eb       	ldi	r24, 0xBF	; 191
     a74:	92 e0       	ldi	r25, 0x02	; 2
     a76:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7Ductfan3runEf>
		UART2TransmitData(Duct_Speed);
     a7a:	80 91 5a 02 	lds	r24, 0x025A
     a7e:	90 91 5b 02 	lds	r25, 0x025B
     a82:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     a86:	83 e2       	ldi	r24, 0x23	; 35
     a88:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     a8c:	9f c2       	rjmp	.+1342   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'i':	//decrease duct speed by 5% every one click
		Duct_Speed=Duct_Speed-5;
     a8e:	60 91 5a 02 	lds	r22, 0x025A
     a92:	70 91 5b 02 	lds	r23, 0x025B
     a96:	65 50       	subi	r22, 0x05	; 5
     a98:	70 40       	sbci	r23, 0x00	; 0
     a9a:	70 93 5b 02 	sts	0x025B, r23
     a9e:	60 93 5a 02 	sts	0x025A, r22
		Duct.run(Duct_Speed);
     aa2:	88 27       	eor	r24, r24
     aa4:	77 fd       	sbrc	r23, 7
     aa6:	80 95       	com	r24
     aa8:	98 2f       	mov	r25, r24
     aaa:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
     aae:	ab 01       	movw	r20, r22
     ab0:	bc 01       	movw	r22, r24
     ab2:	8f eb       	ldi	r24, 0xBF	; 191
     ab4:	92 e0       	ldi	r25, 0x02	; 2
     ab6:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7Ductfan3runEf>
		UART2TransmitData(Duct_Speed);
     aba:	80 91 5a 02 	lds	r24, 0x025A
     abe:	90 91 5b 02 	lds	r25, 0x025B
     ac2:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     ac6:	83 e2       	ldi	r24, 0x23	; 35
     ac8:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     acc:	7f c2       	rjmp	.+1278   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'j':	//gripper pololu data
		UART2TransmitData(pololu.Get_Junction_Sensor1(MOTOR_A));
     ace:	8d ea       	ldi	r24, 0xAD	; 173
     ad0:	92 e0       	ldi	r25, 0x02	; 2
     ad2:	68 e0       	ldi	r22, 0x08	; 8
     ad4:	0e 94 4c 01 	call	0x298	; 0x298 <_ZN6Analog20Get_Junction_Sensor1Eh>
     ad8:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     adc:	83 e2       	ldi	r24, 0x23	; 35
     ade:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     ae2:	74 c2       	rjmp	.+1256   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'k':	//arm pololu data
		UART2TransmitData(pololu.Get_Junction_Sensor1(MOTOR_B));
     ae4:	8d ea       	ldi	r24, 0xAD	; 173
     ae6:	92 e0       	ldi	r25, 0x02	; 2
     ae8:	60 e0       	ldi	r22, 0x00	; 0
     aea:	0e 94 4c 01 	call	0x298	; 0x298 <_ZN6Analog20Get_Junction_Sensor1Eh>
     aee:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     af2:	83 e2       	ldi	r24, 0x23	; 35
     af4:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     af8:	69 c2       	rjmp	.+1234   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'l':	//wiper pololu data
		UART2TransmitData(pololu.Get_Junction_Sensor1(WIPER));
     afa:	8d ea       	ldi	r24, 0xAD	; 173
     afc:	92 e0       	ldi	r25, 0x02	; 2
     afe:	6d e0       	ldi	r22, 0x0D	; 13
     b00:	0e 94 4c 01 	call	0x298	; 0x298 <_ZN6Analog20Get_Junction_Sensor1Eh>
     b04:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     b08:	83 e2       	ldi	r24, 0x23	; 35
     b0a:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     b0e:	5e c2       	rjmp	.+1212   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'm':	//lidar up data
		UART2TransmitData(LidarUp.Lidar_Up_Get_Data());
     b10:	8b ea       	ldi	r24, 0xAB	; 171
     b12:	92 e0       	ldi	r25, 0x02	; 2
     b14:	0e 94 48 14 	call	0x2890	; 0x2890 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv>
     b18:	0e 94 45 19 	call	0x328a	; 0x328a <__fixsfsi>
     b1c:	dc 01       	movw	r26, r24
     b1e:	cb 01       	movw	r24, r22
     b20:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     b24:	83 e2       	ldi	r24, 0x23	; 35
     b26:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     b2a:	50 c2       	rjmp	.+1184   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'n':	//lidar down data
		UART2TransmitData(LidarDown.Lidar_Down_Get_Data());
     b2c:	8c ea       	ldi	r24, 0xAC	; 172
     b2e:	92 e0       	ldi	r25, 0x02	; 2
     b30:	0e 94 6d 13 	call	0x26da	; 0x26da <_ZN10Lidar_Down19Lidar_Down_Get_DataEv>
     b34:	0e 94 45 19 	call	0x328a	; 0x328a <__fixsfsi>
     b38:	dc 01       	movw	r26, r24
     b3a:	cb 01       	movw	r24, r22
     b3c:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     b40:	83 e2       	ldi	r24, 0x23	; 35
     b42:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     b46:	42 c2       	rjmp	.+1156   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'o':	//duct servo angle increase by 5 degree
		Duct_Angle=Duct_Angle+5;
     b48:	60 91 0d 02 	lds	r22, 0x020D
     b4c:	70 91 0e 02 	lds	r23, 0x020E
     b50:	6b 5f       	subi	r22, 0xFB	; 251
     b52:	7f 4f       	sbci	r23, 0xFF	; 255
     b54:	70 93 0e 02 	sts	0x020E, r23
     b58:	60 93 0d 02 	sts	0x020D, r22
		Servoo.Rotate_Duct_Servo(Duct_Angle);
     b5c:	88 27       	eor	r24, r24
     b5e:	77 fd       	sbrc	r23, 7
     b60:	80 95       	com	r24
     b62:	98 2f       	mov	r25, r24
     b64:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
     b68:	ab 01       	movw	r20, r22
     b6a:	bc 01       	movw	r22, r24
     b6c:	83 ec       	ldi	r24, 0xC3	; 195
     b6e:	92 e0       	ldi	r25, 0x02	; 2
     b70:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <_ZN5Servo17Rotate_Duct_ServoEf>
		UART2TransmitData(Duct_Angle);
     b74:	80 91 0d 02 	lds	r24, 0x020D
     b78:	90 91 0e 02 	lds	r25, 0x020E
     b7c:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     b80:	83 e2       	ldi	r24, 0x23	; 35
     b82:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     b86:	22 c2       	rjmp	.+1092   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'p':	//duct servo angle decrease by 5 degree
		Duct_Angle= Duct_Angle-5;
     b88:	60 91 0d 02 	lds	r22, 0x020D
     b8c:	70 91 0e 02 	lds	r23, 0x020E
     b90:	65 50       	subi	r22, 0x05	; 5
     b92:	70 40       	sbci	r23, 0x00	; 0
     b94:	70 93 0e 02 	sts	0x020E, r23
     b98:	60 93 0d 02 	sts	0x020D, r22
		Servoo.Rotate_Duct_Servo(Duct_Angle);
     b9c:	88 27       	eor	r24, r24
     b9e:	77 fd       	sbrc	r23, 7
     ba0:	80 95       	com	r24
     ba2:	98 2f       	mov	r25, r24
     ba4:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
     ba8:	ab 01       	movw	r20, r22
     baa:	bc 01       	movw	r22, r24
     bac:	83 ec       	ldi	r24, 0xC3	; 195
     bae:	92 e0       	ldi	r25, 0x02	; 2
     bb0:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <_ZN5Servo17Rotate_Duct_ServoEf>
		UART2TransmitData(Duct_Angle);
     bb4:	80 91 0d 02 	lds	r24, 0x020D
     bb8:	90 91 0e 02 	lds	r25, 0x020E
     bbc:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     bc0:	83 e2       	ldi	r24, 0x23	; 35
     bc2:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     bc6:	02 c2       	rjmp	.+1028   	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'q':	//gripper servo angle increase by 5 degree
		Gripper_Angle= Gripper_Angle+5;
     bc8:	60 91 0f 02 	lds	r22, 0x020F
     bcc:	70 91 10 02 	lds	r23, 0x0210
     bd0:	6b 5f       	subi	r22, 0xFB	; 251
     bd2:	7f 4f       	sbci	r23, 0xFF	; 255
     bd4:	70 93 10 02 	sts	0x0210, r23
     bd8:	60 93 0f 02 	sts	0x020F, r22
		Servoo.Rotate_Gripper_Servo(Gripper_Angle);
     bdc:	88 27       	eor	r24, r24
     bde:	77 fd       	sbrc	r23, 7
     be0:	80 95       	com	r24
     be2:	98 2f       	mov	r25, r24
     be4:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
     be8:	ab 01       	movw	r20, r22
     bea:	bc 01       	movw	r22, r24
     bec:	83 ec       	ldi	r24, 0xC3	; 195
     bee:	92 e0       	ldi	r25, 0x02	; 2
     bf0:	0e 94 06 17 	call	0x2e0c	; 0x2e0c <_ZN5Servo20Rotate_Gripper_ServoEf>
		UART2TransmitData(Gripper_Angle);
     bf4:	80 91 0f 02 	lds	r24, 0x020F
     bf8:	90 91 10 02 	lds	r25, 0x0210
     bfc:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     c00:	83 e2       	ldi	r24, 0x23	; 35
     c02:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     c06:	e2 c1       	rjmp	.+964    	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'r':	//gripper servo angle decrease by 5 degree
		Gripper_Angle= Gripper_Angle-5;
     c08:	60 91 0f 02 	lds	r22, 0x020F
     c0c:	70 91 10 02 	lds	r23, 0x0210
     c10:	65 50       	subi	r22, 0x05	; 5
     c12:	70 40       	sbci	r23, 0x00	; 0
     c14:	70 93 10 02 	sts	0x0210, r23
     c18:	60 93 0f 02 	sts	0x020F, r22
		Servoo.Rotate_Gripper_Servo(Gripper_Angle);
     c1c:	88 27       	eor	r24, r24
     c1e:	77 fd       	sbrc	r23, 7
     c20:	80 95       	com	r24
     c22:	98 2f       	mov	r25, r24
     c24:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
     c28:	ab 01       	movw	r20, r22
     c2a:	bc 01       	movw	r22, r24
     c2c:	83 ec       	ldi	r24, 0xC3	; 195
     c2e:	92 e0       	ldi	r25, 0x02	; 2
     c30:	0e 94 06 17 	call	0x2e0c	; 0x2e0c <_ZN5Servo20Rotate_Gripper_ServoEf>
		UART2TransmitData(Gripper_Angle);
     c34:	80 91 0f 02 	lds	r24, 0x020F
     c38:	90 91 10 02 	lds	r25, 0x0210
     c3c:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     c40:	83 e2       	ldi	r24, 0x23	; 35
     c42:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     c46:	c2 c1       	rjmp	.+900    	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 's':	//limit switch
		UART2TransmitData(LidarDown_Flag);
     c48:	80 91 0a 02 	lds	r24, 0x020A
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     c52:	83 e2       	ldi	r24, 0x23	; 35
     c54:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     c58:	b9 c1       	rjmp	.+882    	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 't':
		break;
		
		case  'u':
		KP=KP+10;
     c5a:	60 91 20 02 	lds	r22, 0x0220
     c5e:	70 91 21 02 	lds	r23, 0x0221
     c62:	80 91 22 02 	lds	r24, 0x0222
     c66:	90 91 23 02 	lds	r25, 0x0223
     c6a:	20 e0       	ldi	r18, 0x00	; 0
     c6c:	30 e0       	ldi	r19, 0x00	; 0
     c6e:	40 e2       	ldi	r20, 0x20	; 32
     c70:	51 e4       	ldi	r21, 0x41	; 65
     c72:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
     c76:	e6 2f       	mov	r30, r22
     c78:	a7 2e       	mov	r10, r23
     c7a:	d9 2f       	mov	r29, r25
     c7c:	98 2f       	mov	r25, r24
     c7e:	4e 2f       	mov	r20, r30
     c80:	5a 2d       	mov	r21, r10
     c82:	69 2f       	mov	r22, r25
     c84:	7d 2f       	mov	r23, r29
     c86:	40 93 20 02 	sts	0x0220, r20
     c8a:	50 93 21 02 	sts	0x0221, r21
     c8e:	60 93 22 02 	sts	0x0222, r22
     c92:	70 93 23 02 	sts	0x0223, r23
		LidarDownPid.Set_PID(KP,KI,KD);
     c96:	00 91 74 02 	lds	r16, 0x0274
     c9a:	10 91 75 02 	lds	r17, 0x0275
     c9e:	20 91 76 02 	lds	r18, 0x0276
     ca2:	30 91 77 02 	lds	r19, 0x0277
     ca6:	c0 90 78 02 	lds	r12, 0x0278
     caa:	d0 90 79 02 	lds	r13, 0x0279
     cae:	e0 90 7a 02 	lds	r14, 0x027A
     cb2:	f0 90 7b 02 	lds	r15, 0x027B
     cb6:	8b e8       	ldi	r24, 0x8B	; 139
     cb8:	92 e0       	ldi	r25, 0x02	; 2
     cba:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN3PID7Set_PIDEfff>
		UART2TransmitData(KP);
     cbe:	60 91 20 02 	lds	r22, 0x0220
     cc2:	70 91 21 02 	lds	r23, 0x0221
     cc6:	80 91 22 02 	lds	r24, 0x0222
     cca:	90 91 23 02 	lds	r25, 0x0223
     cce:	0e 94 45 19 	call	0x328a	; 0x328a <__fixsfsi>
     cd2:	dc 01       	movw	r26, r24
     cd4:	cb 01       	movw	r24, r22
     cd6:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     cda:	83 e2       	ldi	r24, 0x23	; 35
     cdc:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     ce0:	75 c1       	rjmp	.+746    	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case  'v':
		KP=KP-10;
     ce2:	60 91 20 02 	lds	r22, 0x0220
     ce6:	70 91 21 02 	lds	r23, 0x0221
     cea:	80 91 22 02 	lds	r24, 0x0222
     cee:	90 91 23 02 	lds	r25, 0x0223
     cf2:	20 e0       	ldi	r18, 0x00	; 0
     cf4:	30 e0       	ldi	r19, 0x00	; 0
     cf6:	40 e2       	ldi	r20, 0x20	; 32
     cf8:	51 e4       	ldi	r21, 0x41	; 65
     cfa:	0e 94 74 18 	call	0x30e8	; 0x30e8 <__subsf3>
     cfe:	e6 2f       	mov	r30, r22
     d00:	a7 2e       	mov	r10, r23
     d02:	d9 2f       	mov	r29, r25
     d04:	98 2f       	mov	r25, r24
     d06:	4e 2f       	mov	r20, r30
     d08:	5a 2d       	mov	r21, r10
     d0a:	69 2f       	mov	r22, r25
     d0c:	7d 2f       	mov	r23, r29
     d0e:	40 93 20 02 	sts	0x0220, r20
     d12:	50 93 21 02 	sts	0x0221, r21
     d16:	60 93 22 02 	sts	0x0222, r22
     d1a:	70 93 23 02 	sts	0x0223, r23
		LidarDownPid.Set_PID(KP,KI,KD);
     d1e:	00 91 74 02 	lds	r16, 0x0274
     d22:	10 91 75 02 	lds	r17, 0x0275
     d26:	20 91 76 02 	lds	r18, 0x0276
     d2a:	30 91 77 02 	lds	r19, 0x0277
     d2e:	c0 90 78 02 	lds	r12, 0x0278
     d32:	d0 90 79 02 	lds	r13, 0x0279
     d36:	e0 90 7a 02 	lds	r14, 0x027A
     d3a:	f0 90 7b 02 	lds	r15, 0x027B
     d3e:	8b e8       	ldi	r24, 0x8B	; 139
     d40:	92 e0       	ldi	r25, 0x02	; 2
     d42:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN3PID7Set_PIDEfff>
		UART2TransmitData(KP);
     d46:	60 91 20 02 	lds	r22, 0x0220
     d4a:	70 91 21 02 	lds	r23, 0x0221
     d4e:	80 91 22 02 	lds	r24, 0x0222
     d52:	90 91 23 02 	lds	r25, 0x0223
     d56:	0e 94 45 19 	call	0x328a	; 0x328a <__fixsfsi>
     d5a:	dc 01       	movw	r26, r24
     d5c:	cb 01       	movw	r24, r22
     d5e:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     d62:	83 e2       	ldi	r24, 0x23	; 35
     d64:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     d68:	31 c1       	rjmp	.+610    	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'w':
		KI=KI+0.1;
     d6a:	60 91 74 02 	lds	r22, 0x0274
     d6e:	70 91 75 02 	lds	r23, 0x0275
     d72:	80 91 76 02 	lds	r24, 0x0276
     d76:	90 91 77 02 	lds	r25, 0x0277
     d7a:	2d ec       	ldi	r18, 0xCD	; 205
     d7c:	3c ec       	ldi	r19, 0xCC	; 204
     d7e:	4c ec       	ldi	r20, 0xCC	; 204
     d80:	5d e3       	ldi	r21, 0x3D	; 61
     d82:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
     d86:	b6 2f       	mov	r27, r22
     d88:	a7 2f       	mov	r26, r23
     d8a:	38 2f       	mov	r19, r24
     d8c:	29 2f       	mov	r18, r25
     d8e:	98 2f       	mov	r25, r24
     d90:	4b 2f       	mov	r20, r27
     d92:	5a 2f       	mov	r21, r26
     d94:	69 2f       	mov	r22, r25
     d96:	72 2f       	mov	r23, r18
     d98:	40 93 74 02 	sts	0x0274, r20
     d9c:	50 93 75 02 	sts	0x0275, r21
     da0:	60 93 76 02 	sts	0x0276, r22
     da4:	70 93 77 02 	sts	0x0277, r23
		LidarDownPid.Set_PID(KP,KI,KD);
     da8:	40 91 20 02 	lds	r20, 0x0220
     dac:	50 91 21 02 	lds	r21, 0x0221
     db0:	60 91 22 02 	lds	r22, 0x0222
     db4:	70 91 23 02 	lds	r23, 0x0223
     db8:	c0 90 78 02 	lds	r12, 0x0278
     dbc:	d0 90 79 02 	lds	r13, 0x0279
     dc0:	e0 90 7a 02 	lds	r14, 0x027A
     dc4:	f0 90 7b 02 	lds	r15, 0x027B
     dc8:	8b e8       	ldi	r24, 0x8B	; 139
     dca:	92 e0       	ldi	r25, 0x02	; 2
     dcc:	e2 2f       	mov	r30, r18
     dce:	0b 2f       	mov	r16, r27
     dd0:	1a 2f       	mov	r17, r26
     dd2:	23 2f       	mov	r18, r19
     dd4:	3e 2f       	mov	r19, r30
     dd6:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN3PID7Set_PIDEfff>
		UART2TransmitData((KI*10));
     dda:	60 91 74 02 	lds	r22, 0x0274
     dde:	70 91 75 02 	lds	r23, 0x0275
     de2:	80 91 76 02 	lds	r24, 0x0276
     de6:	90 91 77 02 	lds	r25, 0x0277
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	40 e2       	ldi	r20, 0x20	; 32
     df0:	51 e4       	ldi	r21, 0x41	; 65
     df2:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__mulsf3>
     df6:	0e 94 45 19 	call	0x328a	; 0x328a <__fixsfsi>
     dfa:	dc 01       	movw	r26, r24
     dfc:	cb 01       	movw	r24, r22
     dfe:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     e02:	83 e2       	ldi	r24, 0x23	; 35
     e04:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     e08:	e1 c0       	rjmp	.+450    	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case 'x':
		KI=KI-0.1;
     e0a:	60 91 74 02 	lds	r22, 0x0274
     e0e:	70 91 75 02 	lds	r23, 0x0275
     e12:	80 91 76 02 	lds	r24, 0x0276
     e16:	90 91 77 02 	lds	r25, 0x0277
     e1a:	2d ec       	ldi	r18, 0xCD	; 205
     e1c:	3c ec       	ldi	r19, 0xCC	; 204
     e1e:	4c ec       	ldi	r20, 0xCC	; 204
     e20:	5d e3       	ldi	r21, 0x3D	; 61
     e22:	0e 94 74 18 	call	0x30e8	; 0x30e8 <__subsf3>
     e26:	b6 2f       	mov	r27, r22
     e28:	a7 2f       	mov	r26, r23
     e2a:	38 2f       	mov	r19, r24
     e2c:	29 2f       	mov	r18, r25
     e2e:	98 2f       	mov	r25, r24
     e30:	4b 2f       	mov	r20, r27
     e32:	5a 2f       	mov	r21, r26
     e34:	69 2f       	mov	r22, r25
     e36:	72 2f       	mov	r23, r18
     e38:	40 93 74 02 	sts	0x0274, r20
     e3c:	50 93 75 02 	sts	0x0275, r21
     e40:	60 93 76 02 	sts	0x0276, r22
     e44:	70 93 77 02 	sts	0x0277, r23
		LidarDownPid.Set_PID(KP,KI,KD);
     e48:	40 91 20 02 	lds	r20, 0x0220
     e4c:	50 91 21 02 	lds	r21, 0x0221
     e50:	60 91 22 02 	lds	r22, 0x0222
     e54:	70 91 23 02 	lds	r23, 0x0223
     e58:	c0 90 78 02 	lds	r12, 0x0278
     e5c:	d0 90 79 02 	lds	r13, 0x0279
     e60:	e0 90 7a 02 	lds	r14, 0x027A
     e64:	f0 90 7b 02 	lds	r15, 0x027B
     e68:	8b e8       	ldi	r24, 0x8B	; 139
     e6a:	92 e0       	ldi	r25, 0x02	; 2
     e6c:	e2 2f       	mov	r30, r18
     e6e:	0b 2f       	mov	r16, r27
     e70:	1a 2f       	mov	r17, r26
     e72:	23 2f       	mov	r18, r19
     e74:	3e 2f       	mov	r19, r30
     e76:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN3PID7Set_PIDEfff>
		UART2TransmitData((KI*10));
     e7a:	60 91 74 02 	lds	r22, 0x0274
     e7e:	70 91 75 02 	lds	r23, 0x0275
     e82:	80 91 76 02 	lds	r24, 0x0276
     e86:	90 91 77 02 	lds	r25, 0x0277
     e8a:	20 e0       	ldi	r18, 0x00	; 0
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	40 e2       	ldi	r20, 0x20	; 32
     e90:	51 e4       	ldi	r21, 0x41	; 65
     e92:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__mulsf3>
     e96:	0e 94 45 19 	call	0x328a	; 0x328a <__fixsfsi>
     e9a:	dc 01       	movw	r26, r24
     e9c:	cb 01       	movw	r24, r22
     e9e:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     ea2:	83 e2       	ldi	r24, 0x23	; 35
     ea4:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     ea8:	91 c0       	rjmp	.+290    	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case  'y':
		KD=KD+10;
     eaa:	60 91 78 02 	lds	r22, 0x0278
     eae:	70 91 79 02 	lds	r23, 0x0279
     eb2:	80 91 7a 02 	lds	r24, 0x027A
     eb6:	90 91 7b 02 	lds	r25, 0x027B
     eba:	20 e0       	ldi	r18, 0x00	; 0
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	40 e2       	ldi	r20, 0x20	; 32
     ec0:	51 e4       	ldi	r21, 0x41	; 65
     ec2:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
     ec6:	b6 2f       	mov	r27, r22
     ec8:	a7 2f       	mov	r26, r23
     eca:	f8 2f       	mov	r31, r24
     ecc:	e9 2f       	mov	r30, r25
     ece:	98 2f       	mov	r25, r24
     ed0:	4b 2f       	mov	r20, r27
     ed2:	5a 2f       	mov	r21, r26
     ed4:	69 2f       	mov	r22, r25
     ed6:	7e 2f       	mov	r23, r30
     ed8:	40 93 78 02 	sts	0x0278, r20
     edc:	50 93 79 02 	sts	0x0279, r21
     ee0:	60 93 7a 02 	sts	0x027A, r22
     ee4:	70 93 7b 02 	sts	0x027B, r23
		LidarDownPid.Set_PID(KP,KI,KD);
     ee8:	40 91 20 02 	lds	r20, 0x0220
     eec:	50 91 21 02 	lds	r21, 0x0221
     ef0:	60 91 22 02 	lds	r22, 0x0222
     ef4:	70 91 23 02 	lds	r23, 0x0223
     ef8:	00 91 74 02 	lds	r16, 0x0274
     efc:	10 91 75 02 	lds	r17, 0x0275
     f00:	20 91 76 02 	lds	r18, 0x0276
     f04:	30 91 77 02 	lds	r19, 0x0277
     f08:	8b e8       	ldi	r24, 0x8B	; 139
     f0a:	92 e0       	ldi	r25, 0x02	; 2
     f0c:	cb 2e       	mov	r12, r27
     f0e:	da 2e       	mov	r13, r26
     f10:	ef 2e       	mov	r14, r31
     f12:	fe 2e       	mov	r15, r30
     f14:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN3PID7Set_PIDEfff>
		UART2TransmitData(KD);
     f18:	60 91 78 02 	lds	r22, 0x0278
     f1c:	70 91 79 02 	lds	r23, 0x0279
     f20:	80 91 7a 02 	lds	r24, 0x027A
     f24:	90 91 7b 02 	lds	r25, 0x027B
     f28:	0e 94 45 19 	call	0x328a	; 0x328a <__fixsfsi>
     f2c:	dc 01       	movw	r26, r24
     f2e:	cb 01       	movw	r24, r22
     f30:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     f34:	83 e2       	ldi	r24, 0x23	; 35
     f36:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
     f3a:	48 c0       	rjmp	.+144    	; 0xfcc <_Z11Uart_Check1v+0x728>
		
		case  'z':
		KD=KD+5;
     f3c:	60 91 78 02 	lds	r22, 0x0278
     f40:	70 91 79 02 	lds	r23, 0x0279
     f44:	80 91 7a 02 	lds	r24, 0x027A
     f48:	90 91 7b 02 	lds	r25, 0x027B
     f4c:	20 e0       	ldi	r18, 0x00	; 0
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	40 ea       	ldi	r20, 0xA0	; 160
     f52:	50 e4       	ldi	r21, 0x40	; 64
     f54:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
     f58:	b6 2f       	mov	r27, r22
     f5a:	a7 2f       	mov	r26, r23
     f5c:	f8 2f       	mov	r31, r24
     f5e:	e9 2f       	mov	r30, r25
     f60:	98 2f       	mov	r25, r24
     f62:	4b 2f       	mov	r20, r27
     f64:	5a 2f       	mov	r21, r26
     f66:	69 2f       	mov	r22, r25
     f68:	7e 2f       	mov	r23, r30
     f6a:	40 93 78 02 	sts	0x0278, r20
     f6e:	50 93 79 02 	sts	0x0279, r21
     f72:	60 93 7a 02 	sts	0x027A, r22
     f76:	70 93 7b 02 	sts	0x027B, r23
		LidarDownPid.Set_PID(KP,KI,KD);
     f7a:	40 91 20 02 	lds	r20, 0x0220
     f7e:	50 91 21 02 	lds	r21, 0x0221
     f82:	60 91 22 02 	lds	r22, 0x0222
     f86:	70 91 23 02 	lds	r23, 0x0223
     f8a:	00 91 74 02 	lds	r16, 0x0274
     f8e:	10 91 75 02 	lds	r17, 0x0275
     f92:	20 91 76 02 	lds	r18, 0x0276
     f96:	30 91 77 02 	lds	r19, 0x0277
     f9a:	8b e8       	ldi	r24, 0x8B	; 139
     f9c:	92 e0       	ldi	r25, 0x02	; 2
     f9e:	cb 2e       	mov	r12, r27
     fa0:	da 2e       	mov	r13, r26
     fa2:	ef 2e       	mov	r14, r31
     fa4:	fe 2e       	mov	r15, r30
     fa6:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN3PID7Set_PIDEfff>
		UART2TransmitData(KD);
     faa:	60 91 78 02 	lds	r22, 0x0278
     fae:	70 91 79 02 	lds	r23, 0x0279
     fb2:	80 91 7a 02 	lds	r24, 0x027A
     fb6:	90 91 7b 02 	lds	r25, 0x027B
     fba:	0e 94 45 19 	call	0x328a	; 0x328a <__fixsfsi>
     fbe:	dc 01       	movw	r26, r24
     fc0:	cb 01       	movw	r24, r22
     fc2:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2Transmit('#');
     fc6:	83 e2       	ldi	r24, 0x23	; 35
     fc8:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
		break;
	}
	
	UART2_Data_Check=0;
}
     fcc:	df 91       	pop	r29
     fce:	cf 91       	pop	r28
     fd0:	1f 91       	pop	r17
     fd2:	0f 91       	pop	r16
     fd4:	ff 90       	pop	r15
     fd6:	ef 90       	pop	r14
     fd8:	df 90       	pop	r13
     fda:	cf 90       	pop	r12
     fdc:	bf 90       	pop	r11
     fde:	af 90       	pop	r10
     fe0:	08 95       	ret

00000fe2 <_Z11Uart_Check2v>:
void Uart_Check2()
{	
     fe2:	cf 92       	push	r12
     fe4:	df 92       	push	r13
     fe6:	ef 92       	push	r14
     fe8:	ff 92       	push	r15
     fea:	0f 93       	push	r16
     fec:	1f 93       	push	r17
     fee:	cf 93       	push	r28
	switch(UART2Receive())
     ff0:	0e 94 91 17 	call	0x2f22	; 0x2f22 <_Z12UART2Receivev>
     ff4:	88 34       	cpi	r24, 0x48	; 72
     ff6:	09 f4       	brne	.+2      	; 0xffa <_Z11Uart_Check2v+0x18>
     ff8:	ef c0       	rjmp	.+478    	; 0x11d8 <_Z11Uart_Check2v+0x1f6>
     ffa:	89 34       	cpi	r24, 0x49	; 73
     ffc:	90 f4       	brcc	.+36     	; 0x1022 <_Z11Uart_Check2v+0x40>
     ffe:	84 34       	cpi	r24, 0x44	; 68
    1000:	09 f4       	brne	.+2      	; 0x1004 <_Z11Uart_Check2v+0x22>
    1002:	53 c0       	rjmp	.+166    	; 0x10aa <_Z11Uart_Check2v+0xc8>
    1004:	85 34       	cpi	r24, 0x45	; 69
    1006:	30 f4       	brcc	.+12     	; 0x1014 <_Z11Uart_Check2v+0x32>
    1008:	82 34       	cpi	r24, 0x42	; 66
    100a:	09 f1       	breq	.+66     	; 0x104e <_Z11Uart_Check2v+0x6c>
    100c:	83 34       	cpi	r24, 0x43	; 67
    100e:	09 f0       	breq	.+2      	; 0x1012 <_Z11Uart_Check2v+0x30>
    1010:	7c c1       	rjmp	.+760    	; 0x130a <_Z11Uart_Check2v+0x328>
    1012:	2d c0       	rjmp	.+90     	; 0x106e <_Z11Uart_Check2v+0x8c>
    1014:	86 34       	cpi	r24, 0x46	; 70
    1016:	09 f4       	brne	.+2      	; 0x101a <_Z11Uart_Check2v+0x38>
    1018:	97 c0       	rjmp	.+302    	; 0x1148 <_Z11Uart_Check2v+0x166>
    101a:	87 34       	cpi	r24, 0x47	; 71
    101c:	08 f0       	brcs	.+2      	; 0x1020 <_Z11Uart_Check2v+0x3e>
    101e:	ae c0       	rjmp	.+348    	; 0x117c <_Z11Uart_Check2v+0x19a>
    1020:	6f c0       	rjmp	.+222    	; 0x1100 <_Z11Uart_Check2v+0x11e>
    1022:	8b 34       	cpi	r24, 0x4B	; 75
    1024:	09 f4       	brne	.+2      	; 0x1028 <_Z11Uart_Check2v+0x46>
    1026:	30 c1       	rjmp	.+608    	; 0x1288 <_Z11Uart_Check2v+0x2a6>
    1028:	8c 34       	cpi	r24, 0x4C	; 76
    102a:	38 f4       	brcc	.+14     	; 0x103a <_Z11Uart_Check2v+0x58>
    102c:	89 34       	cpi	r24, 0x49	; 73
    102e:	09 f4       	brne	.+2      	; 0x1032 <_Z11Uart_Check2v+0x50>
    1030:	fd c0       	rjmp	.+506    	; 0x122c <_Z11Uart_Check2v+0x24a>
    1032:	8a 34       	cpi	r24, 0x4A	; 74
    1034:	09 f0       	breq	.+2      	; 0x1038 <_Z11Uart_Check2v+0x56>
    1036:	69 c1       	rjmp	.+722    	; 0x130a <_Z11Uart_Check2v+0x328>
    1038:	0d c1       	rjmp	.+538    	; 0x1254 <_Z11Uart_Check2v+0x272>
    103a:	8d 34       	cpi	r24, 0x4D	; 77
    103c:	09 f4       	brne	.+2      	; 0x1040 <_Z11Uart_Check2v+0x5e>
    103e:	51 c1       	rjmp	.+674    	; 0x12e2 <_Z11Uart_Check2v+0x300>
    1040:	8d 34       	cpi	r24, 0x4D	; 77
    1042:	08 f4       	brcc	.+2      	; 0x1046 <_Z11Uart_Check2v+0x64>
    1044:	3f c1       	rjmp	.+638    	; 0x12c4 <_Z11Uart_Check2v+0x2e2>
    1046:	8e 34       	cpi	r24, 0x4E	; 78
    1048:	09 f0       	breq	.+2      	; 0x104c <_Z11Uart_Check2v+0x6a>
    104a:	5f c1       	rjmp	.+702    	; 0x130a <_Z11Uart_Check2v+0x328>
    104c:	57 c1       	rjmp	.+686    	; 0x12fc <_Z11Uart_Check2v+0x31a>
	{
		case 'B':				//before junction 1
		if (Case_B)
    104e:	80 91 3a 02 	lds	r24, 0x023A
    1052:	88 23       	and	r24, r24
    1054:	09 f4       	brne	.+2      	; 0x1058 <_Z11Uart_Check2v+0x76>
    1056:	59 c1       	rjmp	.+690    	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    1058:	83 e2       	ldi	r24, 0x23	; 35
    105a:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Arm_Extend_Height_Manage=1;
    105e:	81 e0       	ldi	r24, 0x01	; 1
    1060:	80 93 8a 02 	sts	0x028A, r24
			Case_B=0;
    1064:	10 92 3a 02 	sts	0x023A, r1
			Case_C=1;
    1068:	80 93 39 02 	sts	0x0239, r24
    106c:	4e c1       	rjmp	.+668    	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
		
		case 'C':				//after rotation in first junction
		if (Case_C)
    106e:	80 91 39 02 	lds	r24, 0x0239
    1072:	88 23       	and	r24, r24
    1074:	09 f4       	brne	.+2      	; 0x1078 <_Z11Uart_Check2v+0x96>
    1076:	49 c1       	rjmp	.+658    	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    1078:	83 e2       	ldi	r24, 0x23	; 35
    107a:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Duct_Stop_Flag=0;
    107e:	10 92 11 02 	sts	0x0211, r1
			Duct_Speed=10;
    1082:	8a e0       	ldi	r24, 0x0A	; 10
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	90 93 5b 02 	sts	0x025B, r25
    108a:	80 93 5a 02 	sts	0x025A, r24
			Hillheight=19;
    108e:	83 e1       	ldi	r24, 0x13	; 19
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	90 93 7d 02 	sts	0x027D, r25
    1096:	80 93 7c 02 	sts	0x027C, r24
			Highland=1;
    109a:	81 e0       	ldi	r24, 0x01	; 1
    109c:	80 93 52 02 	sts	0x0252, r24
			Case_C=0;
    10a0:	10 92 39 02 	sts	0x0239, r1
			Case_D=1;
    10a4:	80 93 38 02 	sts	0x0238, r24
    10a8:	30 c1       	rjmp	.+608    	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
		
		case 'D':				//junction 2
		if (Case_D)
    10aa:	80 91 38 02 	lds	r24, 0x0238
    10ae:	88 23       	and	r24, r24
    10b0:	09 f4       	brne	.+2      	; 0x10b4 <_Z11Uart_Check2v+0xd2>
    10b2:	2b c1       	rjmp	.+598    	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    10b4:	83 e2       	ldi	r24, 0x23	; 35
    10b6:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			LidarDown_PidCompute_Flag=1;
    10ba:	c1 e0       	ldi	r28, 0x01	; 1
    10bc:	c0 93 0b 02 	sts	0x020B, r28
			LidarDownPid.Set_PID(400,0,0);
    10c0:	8b e8       	ldi	r24, 0x8B	; 139
    10c2:	92 e0       	ldi	r25, 0x02	; 2
    10c4:	40 e0       	ldi	r20, 0x00	; 0
    10c6:	50 e0       	ldi	r21, 0x00	; 0
    10c8:	68 ec       	ldi	r22, 0xC8	; 200
    10ca:	73 e4       	ldi	r23, 0x43	; 67
    10cc:	00 e0       	ldi	r16, 0x00	; 0
    10ce:	10 e0       	ldi	r17, 0x00	; 0
    10d0:	98 01       	movw	r18, r16
    10d2:	68 01       	movw	r12, r16
    10d4:	79 01       	movw	r14, r18
    10d6:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN3PID7Set_PIDEfff>
			Vertical_Separation=23;
    10da:	87 e1       	ldi	r24, 0x17	; 23
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	90 93 14 02 	sts	0x0214, r25
    10e2:	80 93 13 02 	sts	0x0213, r24
			LidarDown_Flag=1;
    10e6:	c0 93 0a 02 	sts	0x020A, r28
			Hillheight=20;
    10ea:	84 e1       	ldi	r24, 0x14	; 20
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	90 93 7d 02 	sts	0x027D, r25
    10f2:	80 93 7c 02 	sts	0x027C, r24
			Case_D=0;
    10f6:	10 92 38 02 	sts	0x0238, r1
			Case_E=1;
    10fa:	c0 93 37 02 	sts	0x0237, r28
    10fe:	05 c1       	rjmp	.+522    	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
			
		case 'E':				//junction 3
		if (Case_E)
    1100:	80 91 37 02 	lds	r24, 0x0237
    1104:	88 23       	and	r24, r24
    1106:	09 f4       	brne	.+2      	; 0x110a <_Z11Uart_Check2v+0x128>
    1108:	00 c1       	rjmp	.+512    	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    110a:	83 e2       	ldi	r24, 0x23	; 35
    110c:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Vertical_Separation=30;
    1110:	8e e1       	ldi	r24, 0x1E	; 30
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	90 93 14 02 	sts	0x0214, r25
    1118:	80 93 13 02 	sts	0x0213, r24
			Duct_Speed=60;
    111c:	8c e3       	ldi	r24, 0x3C	; 60
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	90 93 5b 02 	sts	0x025B, r25
    1124:	80 93 5a 02 	sts	0x025A, r24
			Hillheight=20;
    1128:	84 e1       	ldi	r24, 0x14	; 20
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	90 93 7d 02 	sts	0x027D, r25
    1130:	80 93 7c 02 	sts	0x027C, r24
			Reverse_Flag=1;
    1134:	81 e0       	ldi	r24, 0x01	; 1
    1136:	80 93 72 02 	sts	0x0272, r24
			Set_Value_Flag=1;
    113a:	80 93 27 02 	sts	0x0227, r24
			Case_E=0;
    113e:	10 92 37 02 	sts	0x0237, r1
			Case_F=1;
    1142:	80 93 36 02 	sts	0x0236, r24
    1146:	e1 c0       	rjmp	.+450    	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
		
		case 'F':				//junction 4
		if (Case_F)
    1148:	80 91 36 02 	lds	r24, 0x0236
    114c:	88 23       	and	r24, r24
    114e:	09 f4       	brne	.+2      	; 0x1152 <_Z11Uart_Check2v+0x170>
    1150:	dc c0       	rjmp	.+440    	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    1152:	83 e2       	ldi	r24, 0x23	; 35
    1154:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Duct_Speed=70;
    1158:	86 e4       	ldi	r24, 0x46	; 70
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	90 93 5b 02 	sts	0x025B, r25
    1160:	80 93 5a 02 	sts	0x025A, r24
			Hillheight=40;
    1164:	88 e2       	ldi	r24, 0x28	; 40
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	90 93 7d 02 	sts	0x027D, r25
    116c:	80 93 7c 02 	sts	0x027C, r24
			Case_F=0;
    1170:	10 92 36 02 	sts	0x0236, r1
			Case_G=1;
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	80 93 35 02 	sts	0x0235, r24
    117a:	c7 c0       	rjmp	.+398    	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
		
		case 'G':				//junction 5
		if (Case_G)
    117c:	80 91 35 02 	lds	r24, 0x0235
    1180:	88 23       	and	r24, r24
    1182:	09 f4       	brne	.+2      	; 0x1186 <_Z11Uart_Check2v+0x1a4>
    1184:	c2 c0       	rjmp	.+388    	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    1186:	83 e2       	ldi	r24, 0x23	; 35
    1188:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Duct_Speed=70;
    118c:	86 e4       	ldi	r24, 0x46	; 70
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	90 93 5b 02 	sts	0x025B, r25
    1194:	80 93 5a 02 	sts	0x025A, r24
			Duct_Angle=160;
    1198:	80 ea       	ldi	r24, 0xA0	; 160
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	90 93 0e 02 	sts	0x020E, r25
    11a0:	80 93 0d 02 	sts	0x020D, r24
			Servoo.Rotate_Duct_Servo(Duct_Angle);
    11a4:	83 ec       	ldi	r24, 0xC3	; 195
    11a6:	92 e0       	ldi	r25, 0x02	; 2
    11a8:	40 e0       	ldi	r20, 0x00	; 0
    11aa:	50 e0       	ldi	r21, 0x00	; 0
    11ac:	60 e2       	ldi	r22, 0x20	; 32
    11ae:	73 e4       	ldi	r23, 0x43	; 67
    11b0:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <_ZN5Servo17Rotate_Duct_ServoEf>
			Vertical_Separation=30;
    11b4:	8e e1       	ldi	r24, 0x1E	; 30
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	90 93 14 02 	sts	0x0214, r25
    11bc:	80 93 13 02 	sts	0x0213, r24
			Hillheight=40;
    11c0:	88 e2       	ldi	r24, 0x28	; 40
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	90 93 7d 02 	sts	0x027D, r25
    11c8:	80 93 7c 02 	sts	0x027C, r24
			Case_G=0;
    11cc:	10 92 35 02 	sts	0x0235, r1
			Case_H=1;
    11d0:	81 e0       	ldi	r24, 0x01	; 1
    11d2:	80 93 34 02 	sts	0x0234, r24
    11d6:	99 c0       	rjmp	.+306    	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
		
		case 'H':				//junction 6
		if (Case_H)
    11d8:	80 91 34 02 	lds	r24, 0x0234
    11dc:	88 23       	and	r24, r24
    11de:	09 f4       	brne	.+2      	; 0x11e2 <_Z11Uart_Check2v+0x200>
    11e0:	94 c0       	rjmp	.+296    	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    11e2:	83 e2       	ldi	r24, 0x23	; 35
    11e4:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Lidar_run=1;
    11e8:	c1 e0       	ldi	r28, 0x01	; 1
    11ea:	c0 93 51 02 	sts	0x0251, r28
			Duct_Angle=167;
    11ee:	87 ea       	ldi	r24, 0xA7	; 167
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	90 93 0e 02 	sts	0x020E, r25
    11f6:	80 93 0d 02 	sts	0x020D, r24
			Servoo.Rotate_Duct_Servo(Duct_Angle);
    11fa:	83 ec       	ldi	r24, 0xC3	; 195
    11fc:	92 e0       	ldi	r25, 0x02	; 2
    11fe:	40 e0       	ldi	r20, 0x00	; 0
    1200:	50 e0       	ldi	r21, 0x00	; 0
    1202:	67 e2       	ldi	r22, 0x27	; 39
    1204:	73 e4       	ldi	r23, 0x43	; 67
    1206:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <_ZN5Servo17Rotate_Duct_ServoEf>
			Vertical_Separation=25;
    120a:	89 e1       	ldi	r24, 0x19	; 25
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	90 93 14 02 	sts	0x0214, r25
    1212:	80 93 13 02 	sts	0x0213, r24
			Hillheight=60;
    1216:	8c e3       	ldi	r24, 0x3C	; 60
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	90 93 7d 02 	sts	0x027D, r25
    121e:	80 93 7c 02 	sts	0x027C, r24
			Case_H=0;
    1222:	10 92 34 02 	sts	0x0234, r1
			Case_I=1;
    1226:	c0 93 33 02 	sts	0x0233, r28
    122a:	6f c0       	rjmp	.+222    	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
		
		case 'I':				//junction 7
		if (Case_I)
    122c:	80 91 33 02 	lds	r24, 0x0233
    1230:	88 23       	and	r24, r24
    1232:	09 f4       	brne	.+2      	; 0x1236 <_Z11Uart_Check2v+0x254>
    1234:	6a c0       	rjmp	.+212    	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    1236:	83 e2       	ldi	r24, 0x23	; 35
    1238:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Hillheight=60;
    123c:	8c e3       	ldi	r24, 0x3C	; 60
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	90 93 7d 02 	sts	0x027D, r25
    1244:	80 93 7c 02 	sts	0x027C, r24
			Case_I=0;
    1248:	10 92 33 02 	sts	0x0233, r1
			Case_J=1;
    124c:	81 e0       	ldi	r24, 0x01	; 1
    124e:	80 93 32 02 	sts	0x0232, r24
    1252:	5b c0       	rjmp	.+182    	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
		
		case 'J':		//junction 8
		if (Case_J)
    1254:	80 91 32 02 	lds	r24, 0x0232
    1258:	88 23       	and	r24, r24
    125a:	09 f4       	brne	.+2      	; 0x125e <_Z11Uart_Check2v+0x27c>
    125c:	56 c0       	rjmp	.+172    	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    125e:	83 e2       	ldi	r24, 0x23	; 35
    1260:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Lidar_run=0;
    1264:	10 92 51 02 	sts	0x0251, r1
			Hillheight=60;
    1268:	8c e3       	ldi	r24, 0x3C	; 60
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	90 93 7d 02 	sts	0x027D, r25
    1270:	80 93 7c 02 	sts	0x027C, r24
			River_Push=1;
    1274:	81 e0       	ldi	r24, 0x01	; 1
    1276:	80 93 89 02 	sts	0x0289, r24
			Highland=0;
    127a:	10 92 52 02 	sts	0x0252, r1
			Case_J=0;
    127e:	10 92 32 02 	sts	0x0232, r1
			Case_K=1;
    1282:	80 93 31 02 	sts	0x0231, r24
    1286:	41 c0       	rjmp	.+130    	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
		
		case 'K':				// after junction 8 before junction 9
		if (Case_K)
    1288:	80 91 31 02 	lds	r24, 0x0231
    128c:	88 23       	and	r24, r24
    128e:	e9 f1       	breq	.+122    	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    1290:	83 e2       	ldi	r24, 0x23	; 35
    1292:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			LidarDown_PidCompute_Flag=1;
    1296:	c1 e0       	ldi	r28, 0x01	; 1
    1298:	c0 93 0b 02 	sts	0x020B, r28
			LidarDownPid.Set_PID(250,0,0);
    129c:	8b e8       	ldi	r24, 0x8B	; 139
    129e:	92 e0       	ldi	r25, 0x02	; 2
    12a0:	40 e0       	ldi	r20, 0x00	; 0
    12a2:	50 e0       	ldi	r21, 0x00	; 0
    12a4:	6a e7       	ldi	r22, 0x7A	; 122
    12a6:	73 e4       	ldi	r23, 0x43	; 67
    12a8:	00 e0       	ldi	r16, 0x00	; 0
    12aa:	10 e0       	ldi	r17, 0x00	; 0
    12ac:	98 01       	movw	r18, r16
    12ae:	68 01       	movw	r12, r16
    12b0:	79 01       	movw	r14, r18
    12b2:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN3PID7Set_PIDEfff>
			Reset_Height_To_Align_Eco=1;
    12b6:	c0 93 88 02 	sts	0x0288, r28
			Case_K=0;
    12ba:	10 92 31 02 	sts	0x0231, r1
			Case_L=1;
    12be:	c0 93 30 02 	sts	0x0230, r28
    12c2:	23 c0       	rjmp	.+70     	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
		
		case 'L':				// at pole
		if (Case_L)
    12c4:	80 91 30 02 	lds	r24, 0x0230
    12c8:	88 23       	and	r24, r24
    12ca:	f9 f0       	breq	.+62     	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    12cc:	83 e2       	ldi	r24, 0x23	; 35
    12ce:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Gripping_Height_To_Max=1;
    12d2:	81 e0       	ldi	r24, 0x01	; 1
    12d4:	80 93 87 02 	sts	0x0287, r24
			Case_L=0;
    12d8:	10 92 30 02 	sts	0x0230, r1
			Case_M=1;
    12dc:	80 93 2f 02 	sts	0x022F, r24
    12e0:	14 c0       	rjmp	.+40     	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;	
		
		case 'M':				//while putting propler
		if (Case_M)
    12e2:	80 91 2f 02 	lds	r24, 0x022F
    12e6:	88 23       	and	r24, r24
    12e8:	81 f0       	breq	.+32     	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    12ea:	83 e2       	ldi	r24, 0x23	; 35
    12ec:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Putting_Propeller=1;
    12f0:	81 e0       	ldi	r24, 0x01	; 1
    12f2:	80 93 86 02 	sts	0x0286, r24
			Case_M=0;
    12f6:	10 92 2f 02 	sts	0x022F, r1
    12fa:	07 c0       	rjmp	.+14     	; 0x130a <_Z11Uart_Check2v+0x328>
		}
		break;
		
		case 'N':
		if (Case_N)
    12fc:	80 91 2e 02 	lds	r24, 0x022E
    1300:	88 23       	and	r24, r24
    1302:	19 f0       	breq	.+6      	; 0x130a <_Z11Uart_Check2v+0x328>
		{
			UART2Transmit('#');
    1304:	83 e2       	ldi	r24, 0x23	; 35
    1306:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			//Restart_First=1;
		}
		
	}
}
    130a:	cf 91       	pop	r28
    130c:	1f 91       	pop	r17
    130e:	0f 91       	pop	r16
    1310:	ff 90       	pop	r15
    1312:	ef 90       	pop	r14
    1314:	df 90       	pop	r13
    1316:	cf 90       	pop	r12
    1318:	08 95       	ret

0000131a <_Z9Ramp_Ducti>:
//run and stop duct
void Ramp_Duct(int targetspeed)
{
    131a:	ac 01       	movw	r20, r24
	int sign=0;
	if(targetspeed>Duct_Speed)
    131c:	60 91 5a 02 	lds	r22, 0x025A
    1320:	70 91 5b 02 	lds	r23, 0x025B
    1324:	68 17       	cp	r22, r24
    1326:	79 07       	cpc	r23, r25
    1328:	1c f4       	brge	.+6      	; 0x1330 <_Z9Ramp_Ducti+0x16>
	sign=1;
    132a:	e1 e0       	ldi	r30, 0x01	; 1
    132c:	f0 e0       	ldi	r31, 0x00	; 0
    132e:	02 c0       	rjmp	.+4      	; 0x1334 <_Z9Ramp_Ducti+0x1a>
	else
	sign=-1;
    1330:	ef ef       	ldi	r30, 0xFF	; 255
    1332:	ff ef       	ldi	r31, 0xFF	; 255
	if(Rampflag)
    1334:	80 91 73 02 	lds	r24, 0x0273
    1338:	88 23       	and	r24, r24
    133a:	31 f1       	breq	.+76     	; 0x1388 <_Z9Ramp_Ducti+0x6e>
	{
			if(abs(targetspeed-Duct_Speed)>Ductrampstep)
    133c:	20 91 1f 02 	lds	r18, 0x021F
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	ca 01       	movw	r24, r20
    1344:	86 1b       	sub	r24, r22
    1346:	97 0b       	sbc	r25, r23
    1348:	1a f4       	brpl	.+6      	; 0x1350 <_Z9Ramp_Ducti+0x36>
    134a:	90 95       	com	r25
    134c:	81 95       	neg	r24
    134e:	9f 4f       	sbci	r25, 0xFF	; 255
    1350:	28 17       	cp	r18, r24
    1352:	39 07       	cpc	r19, r25
    1354:	84 f4       	brge	.+32     	; 0x1376 <_Z9Ramp_Ducti+0x5c>
			{
				Duct_Speed=Duct_Speed+Ductrampstep*sign;
    1356:	e2 9f       	mul	r30, r18
    1358:	c0 01       	movw	r24, r0
    135a:	e3 9f       	mul	r30, r19
    135c:	90 0d       	add	r25, r0
    135e:	f2 9f       	mul	r31, r18
    1360:	90 0d       	add	r25, r0
    1362:	11 24       	eor	r1, r1
    1364:	86 0f       	add	r24, r22
    1366:	97 1f       	adc	r25, r23
    1368:	90 93 5b 02 	sts	0x025B, r25
    136c:	80 93 5a 02 	sts	0x025A, r24
				Rampflag=0;
    1370:	10 92 73 02 	sts	0x0273, r1
    1374:	09 c0       	rjmp	.+18     	; 0x1388 <_Z9Ramp_Ducti+0x6e>
			}
			else
			{
				Duct_Speed=targetspeed;
    1376:	50 93 5b 02 	sts	0x025B, r21
    137a:	40 93 5a 02 	sts	0x025A, r20
				Rampflag=0;
    137e:	10 92 73 02 	sts	0x0273, r1
				Duct_Constant_Flag=1;
    1382:	81 e0       	ldi	r24, 0x01	; 1
    1384:	80 93 59 02 	sts	0x0259, r24
			}
	}
	Duct.run(Duct_Speed);
    1388:	60 91 5a 02 	lds	r22, 0x025A
    138c:	70 91 5b 02 	lds	r23, 0x025B
    1390:	88 27       	eor	r24, r24
    1392:	77 fd       	sbrc	r23, 7
    1394:	80 95       	com	r24
    1396:	98 2f       	mov	r25, r24
    1398:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
    139c:	ab 01       	movw	r20, r22
    139e:	bc 01       	movw	r22, r24
    13a0:	8f eb       	ldi	r24, 0xBF	; 191
    13a2:	92 e0       	ldi	r25, 0x02	; 2
    13a4:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7Ductfan3runEf>
}
    13a8:	08 95       	ret

000013aa <_Z8Push_Ecov>:
//push eco
void Push_Eco()
{
	
	if (!Duct_Constant_Flag)
    13aa:	80 91 59 02 	lds	r24, 0x0259
    13ae:	88 23       	and	r24, r24
    13b0:	51 f4       	brne	.+20     	; 0x13c6 <_Z8Push_Ecov+0x1c>
	{
		Ramp_Duct(Ramp_Speed);
    13b2:	80 91 1d 02 	lds	r24, 0x021D
    13b6:	90 91 1e 02 	lds	r25, 0x021E
    13ba:	0e 94 8d 09 	call	0x131a	; 0x131a <_Z9Ramp_Ducti>
	}
	if (Duct_Constant_Flag)
    13be:	80 91 59 02 	lds	r24, 0x0259
    13c2:	88 23       	and	r24, r24
    13c4:	81 f0       	breq	.+32     	; 0x13e6 <_Z8Push_Ecov+0x3c>
	{
		Duct.run(Duct_Speed);
    13c6:	60 91 5a 02 	lds	r22, 0x025A
    13ca:	70 91 5b 02 	lds	r23, 0x025B
    13ce:	88 27       	eor	r24, r24
    13d0:	77 fd       	sbrc	r23, 7
    13d2:	80 95       	com	r24
    13d4:	98 2f       	mov	r25, r24
    13d6:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
    13da:	ab 01       	movw	r20, r22
    13dc:	bc 01       	movw	r22, r24
    13de:	8f eb       	ldi	r24, 0xBF	; 191
    13e0:	92 e0       	ldi	r25, 0x02	; 2
    13e2:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7Ductfan3runEf>
    13e6:	08 95       	ret

000013e8 <_Z14River_Push_Funv>:
	}
		
}
//activity 3 case D
void River_Push_Fun()
{
    13e8:	2f 92       	push	r2
    13ea:	3f 92       	push	r3
    13ec:	4f 92       	push	r4
    13ee:	5f 92       	push	r5
    13f0:	6f 92       	push	r6
    13f2:	7f 92       	push	r7
    13f4:	8f 92       	push	r8
    13f6:	9f 92       	push	r9
    13f8:	af 92       	push	r10
    13fa:	bf 92       	push	r11
    13fc:	cf 92       	push	r12
    13fe:	df 92       	push	r13
    1400:	ef 92       	push	r14
    1402:	ff 92       	push	r15
    1404:	0f 93       	push	r16
    1406:	1f 93       	push	r17
    1408:	cf 93       	push	r28
    140a:	df 93       	push	r29
    140c:	00 d0       	rcall	.+0      	; 0x140e <_Z14River_Push_Funv+0x26>
    140e:	00 d0       	rcall	.+0      	; 0x1410 <_Z14River_Push_Funv+0x28>
    1410:	cd b7       	in	r28, 0x3d	; 61
    1412:	de b7       	in	r29, 0x3e	; 62
	unsigned char Zone_One_Flag=0;
	float last_lidar_data=0;
	float last_reading=0;
	int sign=1;
	unsigned int empty_data_count=0;
	Duct_Speed=70;
    1414:	86 e4       	ldi	r24, 0x46	; 70
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	90 93 5b 02 	sts	0x025B, r25
    141c:	80 93 5a 02 	sts	0x025A, r24
	Duct.run(Duct_Speed);
    1420:	8f eb       	ldi	r24, 0xBF	; 191
    1422:	92 e0       	ldi	r25, 0x02	; 2
    1424:	40 e0       	ldi	r20, 0x00	; 0
    1426:	50 e0       	ldi	r21, 0x00	; 0
    1428:	6c e8       	ldi	r22, 0x8C	; 140
    142a:	72 e4       	ldi	r23, 0x42	; 66
    142c:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7Ductfan3runEf>
	River_Check=1;
    1430:	11 e0       	ldi	r17, 0x01	; 1
    1432:	10 93 5d 02 	sts	0x025D, r17
	Duct_Angle=91;
    1436:	8b e5       	ldi	r24, 0x5B	; 91
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	90 93 0e 02 	sts	0x020E, r25
    143e:	80 93 0d 02 	sts	0x020D, r24
	previous_angle=Duct_Angle+8;
    1442:	83 e6       	ldi	r24, 0x63	; 99
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	90 93 54 02 	sts	0x0254, r25
    144a:	80 93 53 02 	sts	0x0253, r24
	Servoo.Rotate_Duct_Servo(Duct_Angle);
    144e:	83 ec       	ldi	r24, 0xC3	; 195
    1450:	92 e0       	ldi	r25, 0x02	; 2
    1452:	40 e0       	ldi	r20, 0x00	; 0
    1454:	50 e0       	ldi	r21, 0x00	; 0
    1456:	66 eb       	ldi	r22, 0xB6	; 182
    1458:	72 e4       	ldi	r23, 0x42	; 66
    145a:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <_ZN5Servo17Rotate_Duct_ServoEf>
	Mot.Run(Wiper,0);
    145e:	8b ec       	ldi	r24, 0xCB	; 203
    1460:	92 e0       	ldi	r25, 0x02	; 2
    1462:	62 e0       	ldi	r22, 0x02	; 2
    1464:	70 e0       	ldi	r23, 0x00	; 0
    1466:	40 e0       	ldi	r20, 0x00	; 0
    1468:	50 e0       	ldi	r21, 0x00	; 0
    146a:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
	LidarDown_Flag=0;
    146e:	10 92 0a 02 	sts	0x020A, r1
	Start_River_Timer;
    1472:	10 92 84 02 	sts	0x0284, r1
    1476:	10 93 85 02 	sts	0x0285, r17
    147a:	10 92 a5 00 	sts	0x00A5, r1
    147e:	10 92 a4 00 	sts	0x00A4, r1
	while(River_Push)
    1482:	80 91 89 02 	lds	r24, 0x0289
    1486:	88 23       	and	r24, r24
    1488:	f1 f4       	brne	.+60     	; 0x14c6 <_Z14River_Push_Funv+0xde>
    148a:	77 c1       	rjmp	.+750    	; 0x177a <_Z14River_Push_Funv+0x392>
	{
		if(last_lidar_data>220)
    148c:	8f 2d       	mov	r24, r15
    148e:	9e 2d       	mov	r25, r14
    1490:	ad 2d       	mov	r26, r13
    1492:	bc 2d       	mov	r27, r12
    1494:	bc 01       	movw	r22, r24
    1496:	cd 01       	movw	r24, r26
    1498:	20 e0       	ldi	r18, 0x00	; 0
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	4c e5       	ldi	r20, 0x5C	; 92
    149e:	53 e4       	ldi	r21, 0x43	; 67
    14a0:	0e 94 28 1a 	call	0x3450	; 0x3450 <__gesf2>
    14a4:	18 16       	cp	r1, r24
    14a6:	2c f5       	brge	.+74     	; 0x14f2 <_Z14River_Push_Funv+0x10a>
		{
			Duct_Speed=85;
    14a8:	25 e5       	ldi	r18, 0x55	; 85
    14aa:	30 e0       	ldi	r19, 0x00	; 0
    14ac:	30 93 5b 02 	sts	0x025B, r19
    14b0:	20 93 5a 02 	sts	0x025A, r18
			Duct.run(Duct_Speed);
    14b4:	8f eb       	ldi	r24, 0xBF	; 191
    14b6:	92 e0       	ldi	r25, 0x02	; 2
    14b8:	40 e0       	ldi	r20, 0x00	; 0
    14ba:	50 e0       	ldi	r21, 0x00	; 0
    14bc:	6a ea       	ldi	r22, 0xAA	; 170
    14be:	72 e4       	ldi	r23, 0x42	; 66
    14c0:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7Ductfan3runEf>
    14c4:	16 c0       	rjmp	.+44     	; 0x14f2 <_Z14River_Push_Funv+0x10a>
{
	unsigned char Zone_One_Flag=0;
	float last_lidar_data=0;
	float last_reading=0;
	int sign=1;
	unsigned int empty_data_count=0;
    14c6:	00 e0       	ldi	r16, 0x00	; 0
    14c8:	10 e0       	ldi	r17, 0x00	; 0
}
//activity 3 case D
void River_Push_Fun()
{
	unsigned char Zone_One_Flag=0;
	float last_lidar_data=0;
    14ca:	ff 24       	eor	r15, r15
    14cc:	ee 24       	eor	r14, r14
    14ce:	dd 24       	eor	r13, r13
    14d0:	cc 24       	eor	r12, r12
		
}
//activity 3 case D
void River_Push_Fun()
{
	unsigned char Zone_One_Flag=0;
    14d2:	55 24       	eor	r5, r5
			Duct.run(Duct_Speed);
		}
		
		if (((last_lidar_data>150) && (last_lidar_data<220))||(River_Timer_Count>=50))
		{
			Zone_One_Flag=1;
    14d4:	99 24       	eor	r9, r9
    14d6:	93 94       	inc	r9
			Duct_Speed=80;
			Duct.run(Duct_Speed);
		}
		
		last_reading=Lidar_Data;
		Lidar_Data=LidarUp.Lidar_Up_Get_Data();
    14d8:	0f 2e       	mov	r0, r31
    14da:	fb ea       	ldi	r31, 0xAB	; 171
    14dc:	2f 2e       	mov	r2, r31
    14de:	f2 e0       	ldi	r31, 0x02	; 2
    14e0:	3f 2e       	mov	r3, r31
    14e2:	f0 2d       	mov	r31, r0
						break;
					}
					Duct_Angle=Duct_Angle+sign;
					if(Duct_Angle>previous_angle)
					Duct_Angle=previous_angle;
					Servoo.Rotate_Duct_Servo(Duct_Angle);
    14e4:	0f 2e       	mov	r0, r31
    14e6:	f3 ec       	ldi	r31, 0xC3	; 195
    14e8:	6f 2e       	mov	r6, r31
    14ea:	f2 e0       	ldi	r31, 0x02	; 2
    14ec:	7f 2e       	mov	r7, r31
    14ee:	f0 2d       	mov	r31, r0
	Start_River_Timer;
	while(River_Push)
	{
		if(last_lidar_data>220)
		{
			Duct_Speed=85;
    14f0:	58 01       	movw	r10, r16
			Duct.run(Duct_Speed);
		}
		
		if (((last_lidar_data>150) && (last_lidar_data<220))||(River_Timer_Count>=50))
    14f2:	8f 2d       	mov	r24, r15
    14f4:	9e 2d       	mov	r25, r14
    14f6:	ad 2d       	mov	r26, r13
    14f8:	bc 2d       	mov	r27, r12
    14fa:	bc 01       	movw	r22, r24
    14fc:	cd 01       	movw	r24, r26
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	46 e1       	ldi	r20, 0x16	; 22
    1504:	53 e4       	ldi	r21, 0x43	; 67
    1506:	0e 94 28 1a 	call	0x3450	; 0x3450 <__gesf2>
    150a:	18 16       	cp	r1, r24
    150c:	74 f4       	brge	.+28     	; 0x152a <_Z14River_Push_Funv+0x142>
    150e:	8f 2d       	mov	r24, r15
    1510:	9e 2d       	mov	r25, r14
    1512:	ad 2d       	mov	r26, r13
    1514:	bc 2d       	mov	r27, r12
    1516:	bc 01       	movw	r22, r24
    1518:	cd 01       	movw	r24, r26
    151a:	20 e0       	ldi	r18, 0x00	; 0
    151c:	30 e0       	ldi	r19, 0x00	; 0
    151e:	4c e5       	ldi	r20, 0x5C	; 92
    1520:	53 e4       	ldi	r21, 0x43	; 67
    1522:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__cmpsf2>
    1526:	88 23       	and	r24, r24
    1528:	24 f0       	brlt	.+8      	; 0x1532 <_Z14River_Push_Funv+0x14a>
    152a:	80 91 84 02 	lds	r24, 0x0284
    152e:	82 33       	cpi	r24, 0x32	; 50
    1530:	78 f0       	brcs	.+30     	; 0x1550 <_Z14River_Push_Funv+0x168>
		{
			Zone_One_Flag=1;
			Duct_Speed=80;
    1532:	40 e5       	ldi	r20, 0x50	; 80
    1534:	50 e0       	ldi	r21, 0x00	; 0
    1536:	50 93 5b 02 	sts	0x025B, r21
    153a:	40 93 5a 02 	sts	0x025A, r20
			Duct.run(Duct_Speed);
    153e:	8f eb       	ldi	r24, 0xBF	; 191
    1540:	92 e0       	ldi	r25, 0x02	; 2
    1542:	40 e0       	ldi	r20, 0x00	; 0
    1544:	50 e0       	ldi	r21, 0x00	; 0
    1546:	60 ea       	ldi	r22, 0xA0	; 160
    1548:	72 e4       	ldi	r23, 0x42	; 66
    154a:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7Ductfan3runEf>
			Duct.run(Duct_Speed);
		}
		
		if (((last_lidar_data>150) && (last_lidar_data<220))||(River_Timer_Count>=50))
		{
			Zone_One_Flag=1;
    154e:	59 2c       	mov	r5, r9
			Duct_Speed=80;
			Duct.run(Duct_Speed);
		}
		
		last_reading=Lidar_Data;
    1550:	80 91 55 02 	lds	r24, 0x0255
    1554:	90 91 56 02 	lds	r25, 0x0256
    1558:	a0 91 57 02 	lds	r26, 0x0257
    155c:	b0 91 58 02 	lds	r27, 0x0258
    1560:	89 83       	std	Y+1, r24	; 0x01
    1562:	9a 83       	std	Y+2, r25	; 0x02
    1564:	ab 83       	std	Y+3, r26	; 0x03
    1566:	bc 83       	std	Y+4, r27	; 0x04
		Lidar_Data=LidarUp.Lidar_Up_Get_Data();
    1568:	c1 01       	movw	r24, r2
    156a:	0e 94 48 14 	call	0x2890	; 0x2890 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv>
    156e:	6d 83       	std	Y+5, r22	; 0x05
    1570:	7e 83       	std	Y+6, r23	; 0x06
    1572:	88 2e       	mov	r8, r24
    1574:	49 2e       	mov	r4, r25
    1576:	47 2f       	mov	r20, r23
    1578:	86 2f       	mov	r24, r22
    157a:	94 2f       	mov	r25, r20
    157c:	a8 2d       	mov	r26, r8
    157e:	b4 2d       	mov	r27, r4
    1580:	80 93 55 02 	sts	0x0255, r24
    1584:	90 93 56 02 	sts	0x0256, r25
    1588:	a0 93 57 02 	sts	0x0257, r26
    158c:	b0 93 58 02 	sts	0x0258, r27
		
		if(Lidar_Data>last_lidar_data)
    1590:	8f 2d       	mov	r24, r15
    1592:	9e 2d       	mov	r25, r14
    1594:	ad 2d       	mov	r26, r13
    1596:	bc 2d       	mov	r27, r12
    1598:	bc 01       	movw	r22, r24
    159a:	cd 01       	movw	r24, r26
    159c:	fd 81       	ldd	r31, Y+5	; 0x05
    159e:	ee 81       	ldd	r30, Y+6	; 0x06
    15a0:	0f 2f       	mov	r16, r31
    15a2:	1e 2f       	mov	r17, r30
    15a4:	28 2d       	mov	r18, r8
    15a6:	34 2d       	mov	r19, r4
    15a8:	a9 01       	movw	r20, r18
    15aa:	98 01       	movw	r18, r16
    15ac:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__cmpsf2>
    15b0:	88 23       	and	r24, r24
    15b2:	24 f4       	brge	.+8      	; 0x15bc <_Z14River_Push_Funv+0x1d4>
		last_lidar_data=Lidar_Data;
    15b4:	f0 2e       	mov	r15, r16
    15b6:	e1 2e       	mov	r14, r17
    15b8:	d8 2c       	mov	r13, r8
    15ba:	c4 2c       	mov	r12, r4
		
		if(Lidar_Data==0 && last_reading==0)
    15bc:	5d 81       	ldd	r21, Y+5	; 0x05
    15be:	4e 81       	ldd	r20, Y+6	; 0x06
    15c0:	85 2f       	mov	r24, r21
    15c2:	94 2f       	mov	r25, r20
    15c4:	a8 2d       	mov	r26, r8
    15c6:	b4 2d       	mov	r27, r4
    15c8:	bc 01       	movw	r22, r24
    15ca:	cd 01       	movw	r24, r26
    15cc:	20 e0       	ldi	r18, 0x00	; 0
    15ce:	30 e0       	ldi	r19, 0x00	; 0
    15d0:	a9 01       	movw	r20, r18
    15d2:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__cmpsf2>
    15d6:	88 23       	and	r24, r24
    15d8:	71 f4       	brne	.+28     	; 0x15f6 <_Z14River_Push_Funv+0x20e>
    15da:	69 81       	ldd	r22, Y+1	; 0x01
    15dc:	7a 81       	ldd	r23, Y+2	; 0x02
    15de:	8b 81       	ldd	r24, Y+3	; 0x03
    15e0:	9c 81       	ldd	r25, Y+4	; 0x04
    15e2:	20 e0       	ldi	r18, 0x00	; 0
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	a9 01       	movw	r20, r18
    15e8:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__cmpsf2>
    15ec:	88 23       	and	r24, r24
    15ee:	19 f4       	brne	.+6      	; 0x15f6 <_Z14River_Push_Funv+0x20e>
		empty_data_count++;
    15f0:	08 94       	sec
    15f2:	a1 1c       	adc	r10, r1
    15f4:	b1 1c       	adc	r11, r1
		if(empty_data_count>2)
    15f6:	93 e0       	ldi	r25, 0x03	; 3
    15f8:	a9 16       	cp	r10, r25
    15fa:	b1 04       	cpc	r11, r1
    15fc:	08 f4       	brcc	.+2      	; 0x1600 <_Z14River_Push_Funv+0x218>
    15fe:	80 c0       	rjmp	.+256    	; 0x1700 <_Z14River_Push_Funv+0x318>
		{
			if((last_lidar_data>180)||(River_Timer_Count>=50))
    1600:	8f 2d       	mov	r24, r15
    1602:	9e 2d       	mov	r25, r14
    1604:	ad 2d       	mov	r26, r13
    1606:	bc 2d       	mov	r27, r12
    1608:	bc 01       	movw	r22, r24
    160a:	cd 01       	movw	r24, r26
    160c:	20 e0       	ldi	r18, 0x00	; 0
    160e:	30 e0       	ldi	r19, 0x00	; 0
    1610:	44 e3       	ldi	r20, 0x34	; 52
    1612:	53 e4       	ldi	r21, 0x43	; 67
    1614:	0e 94 28 1a 	call	0x3450	; 0x3450 <__gesf2>
    1618:	18 16       	cp	r1, r24
    161a:	2c f0       	brlt	.+10     	; 0x1626 <_Z14River_Push_Funv+0x23e>
    161c:	80 91 84 02 	lds	r24, 0x0284
    1620:	82 33       	cpi	r24, 0x32	; 50
    1622:	08 f4       	brcc	.+2      	; 0x1626 <_Z14River_Push_Funv+0x23e>
    1624:	62 c0       	rjmp	.+196    	; 0x16ea <_Z14River_Push_Funv+0x302>
			{
				while(Lidar_Data<=last_lidar_data)
    1626:	8f 2d       	mov	r24, r15
    1628:	9e 2d       	mov	r25, r14
    162a:	ad 2d       	mov	r26, r13
    162c:	bc 2d       	mov	r27, r12
    162e:	bc 01       	movw	r22, r24
    1630:	cd 01       	movw	r24, r26
    1632:	fd 81       	ldd	r31, Y+5	; 0x05
    1634:	ee 81       	ldd	r30, Y+6	; 0x06
    1636:	0f 2f       	mov	r16, r31
    1638:	1e 2f       	mov	r17, r30
    163a:	28 2d       	mov	r18, r8
    163c:	34 2d       	mov	r19, r4
    163e:	a9 01       	movw	r20, r18
    1640:	98 01       	movw	r18, r16
    1642:	0e 94 28 1a 	call	0x3450	; 0x3450 <__gesf2>
    1646:	88 23       	and	r24, r24
    1648:	0c f4       	brge	.+2      	; 0x164c <_Z14River_Push_Funv+0x264>
    164a:	52 c0       	rjmp	.+164    	; 0x16f0 <_Z14River_Push_Funv+0x308>
				{
					if (River_Push_Control)
    164c:	80 91 5c 02 	lds	r24, 0x025C
    1650:	88 23       	and	r24, r24
    1652:	31 f0       	breq	.+12     	; 0x1660 <_Z14River_Push_Funv+0x278>
    1654:	50 c0       	rjmp	.+160    	; 0x16f6 <_Z14River_Push_Funv+0x30e>
    1656:	80 91 5c 02 	lds	r24, 0x025C
    165a:	88 23       	and	r24, r24
    165c:	09 f0       	breq	.+2      	; 0x1660 <_Z14River_Push_Funv+0x278>
    165e:	4e c0       	rjmp	.+156    	; 0x16fc <_Z14River_Push_Funv+0x314>
					{
						break;
					}
					Duct_Angle=Duct_Angle+sign;
    1660:	80 91 0d 02 	lds	r24, 0x020D
    1664:	90 91 0e 02 	lds	r25, 0x020E
    1668:	01 96       	adiw	r24, 0x01	; 1
    166a:	90 93 0e 02 	sts	0x020E, r25
    166e:	80 93 0d 02 	sts	0x020D, r24
					if(Duct_Angle>previous_angle)
    1672:	20 91 53 02 	lds	r18, 0x0253
    1676:	30 91 54 02 	lds	r19, 0x0254
    167a:	28 17       	cp	r18, r24
    167c:	39 07       	cpc	r19, r25
    167e:	24 f4       	brge	.+8      	; 0x1688 <_Z14River_Push_Funv+0x2a0>
					Duct_Angle=previous_angle;
    1680:	30 93 0e 02 	sts	0x020E, r19
    1684:	20 93 0d 02 	sts	0x020D, r18
					Servoo.Rotate_Duct_Servo(Duct_Angle);
    1688:	60 91 0d 02 	lds	r22, 0x020D
    168c:	70 91 0e 02 	lds	r23, 0x020E
    1690:	88 27       	eor	r24, r24
    1692:	77 fd       	sbrc	r23, 7
    1694:	80 95       	com	r24
    1696:	98 2f       	mov	r25, r24
    1698:	0e 94 78 19 	call	0x32f0	; 0x32f0 <__floatsisf>
    169c:	ab 01       	movw	r20, r22
    169e:	bc 01       	movw	r22, r24
    16a0:	c3 01       	movw	r24, r6
    16a2:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <_ZN5Servo17Rotate_Duct_ServoEf>
					Lidar_Data=LidarUp.Lidar_Up_Get_Data();
    16a6:	c1 01       	movw	r24, r2
    16a8:	0e 94 48 14 	call	0x2890	; 0x2890 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv>
    16ac:	60 93 55 02 	sts	0x0255, r22
    16b0:	70 93 56 02 	sts	0x0256, r23
    16b4:	80 93 57 02 	sts	0x0257, r24
    16b8:	90 93 58 02 	sts	0x0258, r25
    16bc:	2f ef       	ldi	r18, 0xFF	; 255
    16be:	39 ef       	ldi	r19, 0xF9	; 249
    16c0:	40 e0       	ldi	r20, 0x00	; 0
    16c2:	21 50       	subi	r18, 0x01	; 1
    16c4:	30 40       	sbci	r19, 0x00	; 0
    16c6:	40 40       	sbci	r20, 0x00	; 0
    16c8:	e1 f7       	brne	.-8      	; 0x16c2 <_Z14River_Push_Funv+0x2da>
    16ca:	00 c0       	rjmp	.+0      	; 0x16cc <_Z14River_Push_Funv+0x2e4>
    16cc:	00 00       	nop
		empty_data_count++;
		if(empty_data_count>2)
		{
			if((last_lidar_data>180)||(River_Timer_Count>=50))
			{
				while(Lidar_Data<=last_lidar_data)
    16ce:	0f 2d       	mov	r16, r15
    16d0:	1e 2d       	mov	r17, r14
    16d2:	2d 2d       	mov	r18, r13
    16d4:	3c 2d       	mov	r19, r12
    16d6:	a9 01       	movw	r20, r18
    16d8:	98 01       	movw	r18, r16
    16da:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__cmpsf2>
    16de:	18 16       	cp	r1, r24
    16e0:	0c f0       	brlt	.+2      	; 0x16e4 <_Z14River_Push_Funv+0x2fc>
    16e2:	b9 cf       	rjmp	.-142    	; 0x1656 <_Z14River_Push_Funv+0x26e>
					Servoo.Rotate_Duct_Servo(Duct_Angle);
					Lidar_Data=LidarUp.Lidar_Up_Get_Data();
					_delay_ms(20);
				}
			}
			empty_data_count=0;
    16e4:	aa 24       	eor	r10, r10
    16e6:	bb 24       	eor	r11, r11
    16e8:	0b c0       	rjmp	.+22     	; 0x1700 <_Z14River_Push_Funv+0x318>
    16ea:	aa 24       	eor	r10, r10
    16ec:	bb 24       	eor	r11, r11
    16ee:	08 c0       	rjmp	.+16     	; 0x1700 <_Z14River_Push_Funv+0x318>
    16f0:	aa 24       	eor	r10, r10
    16f2:	bb 24       	eor	r11, r11
    16f4:	05 c0       	rjmp	.+10     	; 0x1700 <_Z14River_Push_Funv+0x318>
    16f6:	aa 24       	eor	r10, r10
    16f8:	bb 24       	eor	r11, r11
    16fa:	02 c0       	rjmp	.+4      	; 0x1700 <_Z14River_Push_Funv+0x318>
    16fc:	aa 24       	eor	r10, r10
    16fe:	bb 24       	eor	r11, r11
		}
		if (((last_lidar_data>360 && last_lidar_data<430) && Zone_One_Flag )||River_Push_Control)
    1700:	8f 2d       	mov	r24, r15
    1702:	9e 2d       	mov	r25, r14
    1704:	ad 2d       	mov	r26, r13
    1706:	bc 2d       	mov	r27, r12
    1708:	bc 01       	movw	r22, r24
    170a:	cd 01       	movw	r24, r26
    170c:	20 e0       	ldi	r18, 0x00	; 0
    170e:	30 e0       	ldi	r19, 0x00	; 0
    1710:	44 eb       	ldi	r20, 0xB4	; 180
    1712:	53 e4       	ldi	r21, 0x43	; 67
    1714:	0e 94 28 1a 	call	0x3450	; 0x3450 <__gesf2>
    1718:	18 16       	cp	r1, r24
    171a:	84 f4       	brge	.+32     	; 0x173c <_Z14River_Push_Funv+0x354>
    171c:	8f 2d       	mov	r24, r15
    171e:	9e 2d       	mov	r25, r14
    1720:	ad 2d       	mov	r26, r13
    1722:	bc 2d       	mov	r27, r12
    1724:	bc 01       	movw	r22, r24
    1726:	cd 01       	movw	r24, r26
    1728:	20 e0       	ldi	r18, 0x00	; 0
    172a:	30 e0       	ldi	r19, 0x00	; 0
    172c:	47 ed       	ldi	r20, 0xD7	; 215
    172e:	53 e4       	ldi	r21, 0x43	; 67
    1730:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__cmpsf2>
    1734:	88 23       	and	r24, r24
    1736:	14 f4       	brge	.+4      	; 0x173c <_Z14River_Push_Funv+0x354>
    1738:	55 20       	and	r5, r5
    173a:	21 f4       	brne	.+8      	; 0x1744 <_Z14River_Push_Funv+0x35c>
    173c:	80 91 5c 02 	lds	r24, 0x025C
    1740:	88 23       	and	r24, r24
    1742:	69 f0       	breq	.+26     	; 0x175e <_Z14River_Push_Funv+0x376>
		{
			UART2Transmit('s');
    1744:	83 e7       	ldi	r24, 0x73	; 115
    1746:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
			Duct_Constant_Flag=1;
    174a:	90 92 59 02 	sts	0x0259, r9
			River_Push_Control=0;
    174e:	10 92 5c 02 	sts	0x025C, r1
			River_Push=0;
    1752:	10 92 89 02 	sts	0x0289, r1
			Stop_River_Timer;
    1756:	10 92 85 02 	sts	0x0285, r1
    175a:	10 92 84 02 	sts	0x0284, r1
    175e:	8f ef       	ldi	r24, 0xFF	; 255
    1760:	99 ef       	ldi	r25, 0xF9	; 249
    1762:	a0 e0       	ldi	r26, 0x00	; 0
    1764:	81 50       	subi	r24, 0x01	; 1
    1766:	90 40       	sbci	r25, 0x00	; 0
    1768:	a0 40       	sbci	r26, 0x00	; 0
    176a:	e1 f7       	brne	.-8      	; 0x1764 <_Z14River_Push_Funv+0x37c>
    176c:	00 c0       	rjmp	.+0      	; 0x176e <_Z14River_Push_Funv+0x386>
    176e:	00 00       	nop
	previous_angle=Duct_Angle+8;
	Servoo.Rotate_Duct_Servo(Duct_Angle);
	Mot.Run(Wiper,0);
	LidarDown_Flag=0;
	Start_River_Timer;
	while(River_Push)
    1770:	80 91 89 02 	lds	r24, 0x0289
    1774:	88 23       	and	r24, r24
    1776:	09 f0       	breq	.+2      	; 0x177a <_Z14River_Push_Funv+0x392>
    1778:	89 ce       	rjmp	.-750    	; 0x148c <_Z14River_Push_Funv+0xa4>
			Stop_River_Timer;
		}
		_delay_ms(20);
	}
	
}
    177a:	26 96       	adiw	r28, 0x06	; 6
    177c:	0f b6       	in	r0, 0x3f	; 63
    177e:	f8 94       	cli
    1780:	de bf       	out	0x3e, r29	; 62
    1782:	0f be       	out	0x3f, r0	; 63
    1784:	cd bf       	out	0x3d, r28	; 61
    1786:	df 91       	pop	r29
    1788:	cf 91       	pop	r28
    178a:	1f 91       	pop	r17
    178c:	0f 91       	pop	r16
    178e:	ff 90       	pop	r15
    1790:	ef 90       	pop	r14
    1792:	df 90       	pop	r13
    1794:	cf 90       	pop	r12
    1796:	bf 90       	pop	r11
    1798:	af 90       	pop	r10
    179a:	9f 90       	pop	r9
    179c:	8f 90       	pop	r8
    179e:	7f 90       	pop	r7
    17a0:	6f 90       	pop	r6
    17a2:	5f 90       	pop	r5
    17a4:	4f 90       	pop	r4
    17a6:	3f 90       	pop	r3
    17a8:	2f 90       	pop	r2
    17aa:	08 95       	ret

000017ac <_Z12Pololu_Wiperhhhhiihh>:
		}
	}
}

void Pololu_Wiper(unsigned char Motor_Direction,unsigned char Wiper_Count,unsigned char Present_Value,unsigned char Previous_Value,int thershold,int difference,unsigned char Final_Count,unsigned char Direction)
{
    17ac:	af 92       	push	r10
    17ae:	cf 92       	push	r12
    17b0:	df 92       	push	r13
    17b2:	ef 92       	push	r14
    17b4:	ff 92       	push	r15
    17b6:	0f 93       	push	r16
    17b8:	1f 93       	push	r17
    17ba:	cf 93       	push	r28
    17bc:	c8 2f       	mov	r28, r24
    17be:	97 01       	movw	r18, r14
	if (Set_Value_Flag)
    17c0:	80 91 27 02 	lds	r24, 0x0227
    17c4:	88 23       	and	r24, r24
    17c6:	51 f0       	breq	.+20     	; 0x17dc <_Z12Pololu_Wiperhhhhiihh+0x30>
	{
		Pololu_Previous_Wiper=Previous_Value;
		Pololu_Previous_Wiper=Present_Value;
    17c8:	40 93 61 02 	sts	0x0261, r20
    17cc:	10 92 62 02 	sts	0x0262, r1
		Junction_Wiper=Wiper_Count;
    17d0:	60 93 5f 02 	sts	0x025F, r22
    17d4:	10 92 60 02 	sts	0x0260, r1
		Set_Value_Flag=0;
    17d8:	10 92 27 02 	sts	0x0227, r1
	}
	Pololu_Present_Wiper=pololu.Get_Junction_Sensor(WIPER,thershold,difference);
    17dc:	8d ea       	ldi	r24, 0xAD	; 173
    17de:	92 e0       	ldi	r25, 0x02	; 2
    17e0:	6d e0       	ldi	r22, 0x0D	; 13
    17e2:	a8 01       	movw	r20, r16
    17e4:	0e 94 cf 00 	call	0x19e	; 0x19e <_ZN6Analog19Get_Junction_SensorEhii>
    17e8:	90 93 64 02 	sts	0x0264, r25
    17ec:	80 93 63 02 	sts	0x0263, r24
	if ((Direction==Forward_Direction_Wiper) && (Pololu_Present_Wiper!=Pololu_Previous_Wiper))
    17f0:	21 e0       	ldi	r18, 0x01	; 1
    17f2:	a2 16       	cp	r10, r18
    17f4:	b1 f4       	brne	.+44     	; 0x1822 <_Z12Pololu_Wiperhhhhiihh+0x76>
    17f6:	20 91 61 02 	lds	r18, 0x0261
    17fa:	30 91 62 02 	lds	r19, 0x0262
    17fe:	82 17       	cp	r24, r18
    1800:	93 07       	cpc	r25, r19
    1802:	79 f0       	breq	.+30     	; 0x1822 <_Z12Pololu_Wiperhhhhiihh+0x76>
	{
		Junction_Wiper++;
    1804:	20 91 5f 02 	lds	r18, 0x025F
    1808:	30 91 60 02 	lds	r19, 0x0260
    180c:	2f 5f       	subi	r18, 0xFF	; 255
    180e:	3f 4f       	sbci	r19, 0xFF	; 255
    1810:	30 93 60 02 	sts	0x0260, r19
    1814:	20 93 5f 02 	sts	0x025F, r18
		Pololu_Previous_Wiper=Pololu_Present_Wiper;
    1818:	90 93 62 02 	sts	0x0262, r25
    181c:	80 93 61 02 	sts	0x0261, r24
    1820:	18 c0       	rjmp	.+48     	; 0x1852 <_Z12Pololu_Wiperhhhhiihh+0xa6>
	}
	if ((Direction==Downward_Direction_Wiper) && (Pololu_Present_Wiper!=Pololu_Previous_Wiper))
    1822:	22 e0       	ldi	r18, 0x02	; 2
    1824:	a2 16       	cp	r10, r18
    1826:	a9 f4       	brne	.+42     	; 0x1852 <_Z12Pololu_Wiperhhhhiihh+0xa6>
    1828:	20 91 61 02 	lds	r18, 0x0261
    182c:	30 91 62 02 	lds	r19, 0x0262
    1830:	82 17       	cp	r24, r18
    1832:	93 07       	cpc	r25, r19
    1834:	71 f0       	breq	.+28     	; 0x1852 <_Z12Pololu_Wiperhhhhiihh+0xa6>
	{
		Junction_Wiper--;
    1836:	20 91 5f 02 	lds	r18, 0x025F
    183a:	30 91 60 02 	lds	r19, 0x0260
    183e:	21 50       	subi	r18, 0x01	; 1
    1840:	30 40       	sbci	r19, 0x00	; 0
    1842:	30 93 60 02 	sts	0x0260, r19
    1846:	20 93 5f 02 	sts	0x025F, r18
		Pololu_Previous_Wiper=Pololu_Present_Wiper;
    184a:	90 93 62 02 	sts	0x0262, r25
    184e:	80 93 61 02 	sts	0x0261, r24
	}
	
	if ((Junction_Wiper!=Final_Count))
    1852:	dd 24       	eor	r13, r13
    1854:	80 91 5f 02 	lds	r24, 0x025F
    1858:	90 91 60 02 	lds	r25, 0x0260
    185c:	c8 16       	cp	r12, r24
    185e:	d9 06       	cpc	r13, r25
    1860:	79 f0       	breq	.+30     	; 0x1880 <_Z12Pololu_Wiperhhhhiihh+0xd4>
	{
		Mot.Set_Motor_Direction(Wiper,Motor_Direction);
    1862:	0b ec       	ldi	r16, 0xCB	; 203
    1864:	12 e0       	ldi	r17, 0x02	; 2
    1866:	c8 01       	movw	r24, r16
    1868:	62 e0       	ldi	r22, 0x02	; 2
    186a:	4c 2f       	mov	r20, r28
    186c:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
		Mot.Run(Wiper,1800);
    1870:	c8 01       	movw	r24, r16
    1872:	62 e0       	ldi	r22, 0x02	; 2
    1874:	70 e0       	ldi	r23, 0x00	; 0
    1876:	48 e0       	ldi	r20, 0x08	; 8
    1878:	57 e0       	ldi	r21, 0x07	; 7
    187a:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
    187e:	08 c0       	rjmp	.+16     	; 0x1890 <_Z12Pololu_Wiperhhhhiihh+0xe4>
	}
	else
	{
		Mot.Run(Wiper,0);
    1880:	8b ec       	ldi	r24, 0xCB	; 203
    1882:	92 e0       	ldi	r25, 0x02	; 2
    1884:	62 e0       	ldi	r22, 0x02	; 2
    1886:	70 e0       	ldi	r23, 0x00	; 0
    1888:	40 e0       	ldi	r20, 0x00	; 0
    188a:	50 e0       	ldi	r21, 0x00	; 0
    188c:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
	}
	Last_Wiper_Present_Count=Pololu_Present_Wiper;
    1890:	80 91 63 02 	lds	r24, 0x0263
    1894:	80 93 2d 02 	sts	0x022D, r24
	Last_Wiper_Prevoius_Count=Pololu_Previous_Wiper;
    1898:	80 91 61 02 	lds	r24, 0x0261
    189c:	80 93 2c 02 	sts	0x022C, r24
}
    18a0:	cf 91       	pop	r28
    18a2:	1f 91       	pop	r17
    18a4:	0f 91       	pop	r16
    18a6:	ff 90       	pop	r15
    18a8:	ef 90       	pop	r14
    18aa:	df 90       	pop	r13
    18ac:	cf 90       	pop	r12
    18ae:	af 90       	pop	r10
    18b0:	08 95       	ret

000018b2 <_Z14Pololu_Motor_Ahhhhiihh>:

void Pololu_Motor_A(unsigned char Motor_Direction,unsigned char Motor_A_Count,unsigned char Present_Value,unsigned char Previous_Value,int thershold,int difference,unsigned char Final_Count,unsigned char Direction)
{
    18b2:	af 92       	push	r10
    18b4:	cf 92       	push	r12
    18b6:	df 92       	push	r13
    18b8:	ef 92       	push	r14
    18ba:	ff 92       	push	r15
    18bc:	0f 93       	push	r16
    18be:	1f 93       	push	r17
    18c0:	cf 93       	push	r28
    18c2:	c8 2f       	mov	r28, r24
    18c4:	97 01       	movw	r18, r14
	if (Set_Value_Flag)
    18c6:	80 91 27 02 	lds	r24, 0x0227
    18ca:	88 23       	and	r24, r24
    18cc:	51 f0       	breq	.+20     	; 0x18e2 <_Z14Pololu_Motor_Ahhhhiihh+0x30>
	{
		Pololu_Previous_Motor_A=Previous_Value;
		Pololu_Previous_Motor_A=Present_Value;
    18ce:	40 93 68 02 	sts	0x0268, r20
    18d2:	10 92 69 02 	sts	0x0269, r1
		Junction_Motor_A=Motor_A_Count;
    18d6:	60 93 66 02 	sts	0x0266, r22
    18da:	10 92 67 02 	sts	0x0267, r1
		Set_Value_Flag=0;
    18de:	10 92 27 02 	sts	0x0227, r1
	}
	Pololu_Present_Motor_A=pololu.Get_Junction_Sensor(MOTOR_A,thershold,difference);
    18e2:	8d ea       	ldi	r24, 0xAD	; 173
    18e4:	92 e0       	ldi	r25, 0x02	; 2
    18e6:	68 e0       	ldi	r22, 0x08	; 8
    18e8:	a8 01       	movw	r20, r16
    18ea:	0e 94 cf 00 	call	0x19e	; 0x19e <_ZN6Analog19Get_Junction_SensorEhii>
    18ee:	90 93 6b 02 	sts	0x026B, r25
    18f2:	80 93 6a 02 	sts	0x026A, r24
	if ((Direction==Forward_Direction_Motor_A) && (Pololu_Present_Motor_A!=Pololu_Previous_Motor_A))
    18f6:	21 e0       	ldi	r18, 0x01	; 1
    18f8:	a2 16       	cp	r10, r18
    18fa:	b1 f4       	brne	.+44     	; 0x1928 <_Z14Pololu_Motor_Ahhhhiihh+0x76>
    18fc:	20 91 68 02 	lds	r18, 0x0268
    1900:	30 91 69 02 	lds	r19, 0x0269
    1904:	82 17       	cp	r24, r18
    1906:	93 07       	cpc	r25, r19
    1908:	79 f0       	breq	.+30     	; 0x1928 <_Z14Pololu_Motor_Ahhhhiihh+0x76>
	{
		Junction_Motor_A++;
    190a:	20 91 66 02 	lds	r18, 0x0266
    190e:	30 91 67 02 	lds	r19, 0x0267
    1912:	2f 5f       	subi	r18, 0xFF	; 255
    1914:	3f 4f       	sbci	r19, 0xFF	; 255
    1916:	30 93 67 02 	sts	0x0267, r19
    191a:	20 93 66 02 	sts	0x0266, r18
		Pololu_Previous_Motor_A=Pololu_Present_Motor_A;
    191e:	90 93 69 02 	sts	0x0269, r25
    1922:	80 93 68 02 	sts	0x0268, r24
    1926:	18 c0       	rjmp	.+48     	; 0x1958 <_Z14Pololu_Motor_Ahhhhiihh+0xa6>
	}
	if ((Direction==Downward_Direction_Motor_A) && (Pololu_Present_Motor_A!=Pololu_Previous_Motor_A))
    1928:	22 e0       	ldi	r18, 0x02	; 2
    192a:	a2 16       	cp	r10, r18
    192c:	a9 f4       	brne	.+42     	; 0x1958 <_Z14Pololu_Motor_Ahhhhiihh+0xa6>
    192e:	20 91 68 02 	lds	r18, 0x0268
    1932:	30 91 69 02 	lds	r19, 0x0269
    1936:	82 17       	cp	r24, r18
    1938:	93 07       	cpc	r25, r19
    193a:	71 f0       	breq	.+28     	; 0x1958 <_Z14Pololu_Motor_Ahhhhiihh+0xa6>
	{
		Junction_Motor_A--;
    193c:	20 91 66 02 	lds	r18, 0x0266
    1940:	30 91 67 02 	lds	r19, 0x0267
    1944:	21 50       	subi	r18, 0x01	; 1
    1946:	30 40       	sbci	r19, 0x00	; 0
    1948:	30 93 67 02 	sts	0x0267, r19
    194c:	20 93 66 02 	sts	0x0266, r18
		Pololu_Previous_Motor_A=Pololu_Present_Motor_A;
    1950:	90 93 69 02 	sts	0x0269, r25
    1954:	80 93 68 02 	sts	0x0268, r24
	}
	
	if ((Junction_Motor_A!=Final_Count))
    1958:	dd 24       	eor	r13, r13
    195a:	80 91 66 02 	lds	r24, 0x0266
    195e:	90 91 67 02 	lds	r25, 0x0267
    1962:	c8 16       	cp	r12, r24
    1964:	d9 06       	cpc	r13, r25
    1966:	79 f0       	breq	.+30     	; 0x1986 <_Z14Pololu_Motor_Ahhhhiihh+0xd4>
	{
		Mot.Set_Motor_Direction(Motor_A,Motor_Direction);
    1968:	0b ec       	ldi	r16, 0xCB	; 203
    196a:	12 e0       	ldi	r17, 0x02	; 2
    196c:	c8 01       	movw	r24, r16
    196e:	60 e0       	ldi	r22, 0x00	; 0
    1970:	4c 2f       	mov	r20, r28
    1972:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
		Mot.Run(Motor_A,2000);
    1976:	c8 01       	movw	r24, r16
    1978:	60 e0       	ldi	r22, 0x00	; 0
    197a:	70 e0       	ldi	r23, 0x00	; 0
    197c:	40 ed       	ldi	r20, 0xD0	; 208
    197e:	57 e0       	ldi	r21, 0x07	; 7
    1980:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
    1984:	08 c0       	rjmp	.+16     	; 0x1996 <_Z14Pololu_Motor_Ahhhhiihh+0xe4>
	}
	else
	{
		Mot.Run(Motor_A,0);
    1986:	8b ec       	ldi	r24, 0xCB	; 203
    1988:	92 e0       	ldi	r25, 0x02	; 2
    198a:	60 e0       	ldi	r22, 0x00	; 0
    198c:	70 e0       	ldi	r23, 0x00	; 0
    198e:	40 e0       	ldi	r20, 0x00	; 0
    1990:	50 e0       	ldi	r21, 0x00	; 0
    1992:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
	}
	Last_Motor_A_Present_Count=Pololu_Present_Motor_A;
    1996:	80 91 6a 02 	lds	r24, 0x026A
    199a:	80 93 2b 02 	sts	0x022B, r24
	Last_Motor_A_Prevoius_Count=Pololu_Previous_Motor_A;
    199e:	80 91 68 02 	lds	r24, 0x0268
    19a2:	80 93 2a 02 	sts	0x022A, r24
}
    19a6:	cf 91       	pop	r28
    19a8:	1f 91       	pop	r17
    19aa:	0f 91       	pop	r16
    19ac:	ff 90       	pop	r15
    19ae:	ef 90       	pop	r14
    19b0:	df 90       	pop	r13
    19b2:	cf 90       	pop	r12
    19b4:	af 90       	pop	r10
    19b6:	08 95       	ret

000019b8 <_Z14Gripper_Lengthv>:
		Gripper_Position_Manage=0;
	}
}

void Gripper_Length()
{
    19b8:	af 92       	push	r10
    19ba:	cf 92       	push	r12
    19bc:	ef 92       	push	r14
    19be:	ff 92       	push	r15
    19c0:	0f 93       	push	r16
    19c2:	1f 93       	push	r17
	Pololu_Motor_A(Forward,Junction_Motor_A,Last_Motor_A_Present_Count,Last_Motor_A_Prevoius_Count,Motor_A_Thershold,Motor_A_Difference,2,Downward_Direction_Motor_A);
    19c4:	81 e0       	ldi	r24, 0x01	; 1
    19c6:	60 91 66 02 	lds	r22, 0x0266
    19ca:	40 91 2b 02 	lds	r20, 0x022B
    19ce:	20 91 2a 02 	lds	r18, 0x022A
    19d2:	0a e8       	ldi	r16, 0x8A	; 138
    19d4:	12 e0       	ldi	r17, 0x02	; 2
    19d6:	0f 2e       	mov	r0, r31
    19d8:	f2 e3       	ldi	r31, 0x32	; 50
    19da:	ef 2e       	mov	r14, r31
    19dc:	ff 24       	eor	r15, r15
    19de:	f0 2d       	mov	r31, r0
    19e0:	cc 24       	eor	r12, r12
    19e2:	68 94       	set
    19e4:	c1 f8       	bld	r12, 1
    19e6:	aa 24       	eor	r10, r10
    19e8:	68 94       	set
    19ea:	a1 f8       	bld	r10, 1
    19ec:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <_Z14Pololu_Motor_Ahhhhiihh>
	if (Junction_Motor_A==2)
    19f0:	80 91 66 02 	lds	r24, 0x0266
    19f4:	90 91 67 02 	lds	r25, 0x0267
    19f8:	82 30       	cpi	r24, 0x02	; 2
    19fa:	91 05       	cpc	r25, r1
    19fc:	51 f4       	brne	.+20     	; 0x1a12 <_Z14Gripper_Lengthv+0x5a>
	{
		Mot.Run(Motor_A,0);
    19fe:	8b ec       	ldi	r24, 0xCB	; 203
    1a00:	92 e0       	ldi	r25, 0x02	; 2
    1a02:	60 e0       	ldi	r22, 0x00	; 0
    1a04:	70 e0       	ldi	r23, 0x00	; 0
    1a06:	40 e0       	ldi	r20, 0x00	; 0
    1a08:	50 e0       	ldi	r21, 0x00	; 0
    1a0a:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		Gripper_Length_Manage=0;
    1a0e:	10 92 65 02 	sts	0x0265, r1
	}
	
}
    1a12:	1f 91       	pop	r17
    1a14:	0f 91       	pop	r16
    1a16:	ff 90       	pop	r15
    1a18:	ef 90       	pop	r14
    1a1a:	cf 90       	pop	r12
    1a1c:	af 90       	pop	r10
    1a1e:	08 95       	ret

00001a20 <_Z16Gripper_Positionv>:
	Last_Lidar_Data=Lidar_Data1;
	_delay_ms(10);
}

void Gripper_Position()
{
    1a20:	af 92       	push	r10
    1a22:	cf 92       	push	r12
    1a24:	ef 92       	push	r14
    1a26:	ff 92       	push	r15
    1a28:	0f 93       	push	r16
    1a2a:	1f 93       	push	r17
	Pololu_Motor_A(Reverse,Junction_Motor_A,Last_Motor_A_Present_Count,Last_Motor_A_Prevoius_Count,Motor_A_Thershold,Motor_A_Difference,4,Forward_Direction_Motor_A);
    1a2c:	80 e0       	ldi	r24, 0x00	; 0
    1a2e:	60 91 66 02 	lds	r22, 0x0266
    1a32:	40 91 2b 02 	lds	r20, 0x022B
    1a36:	20 91 2a 02 	lds	r18, 0x022A
    1a3a:	0a e8       	ldi	r16, 0x8A	; 138
    1a3c:	12 e0       	ldi	r17, 0x02	; 2
    1a3e:	0f 2e       	mov	r0, r31
    1a40:	f2 e3       	ldi	r31, 0x32	; 50
    1a42:	ef 2e       	mov	r14, r31
    1a44:	ff 24       	eor	r15, r15
    1a46:	f0 2d       	mov	r31, r0
    1a48:	cc 24       	eor	r12, r12
    1a4a:	68 94       	set
    1a4c:	c2 f8       	bld	r12, 2
    1a4e:	aa 24       	eor	r10, r10
    1a50:	a3 94       	inc	r10
    1a52:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <_Z14Pololu_Motor_Ahhhhiihh>
	if (Junction_Motor_A==4)
    1a56:	80 91 66 02 	lds	r24, 0x0266
    1a5a:	90 91 67 02 	lds	r25, 0x0267
    1a5e:	84 30       	cpi	r24, 0x04	; 4
    1a60:	91 05       	cpc	r25, r1
    1a62:	51 f4       	brne	.+20     	; 0x1a78 <_Z16Gripper_Positionv+0x58>
	{
		Mot.Run(Motor_A,0);
    1a64:	8b ec       	ldi	r24, 0xCB	; 203
    1a66:	92 e0       	ldi	r25, 0x02	; 2
    1a68:	60 e0       	ldi	r22, 0x00	; 0
    1a6a:	70 e0       	ldi	r23, 0x00	; 0
    1a6c:	40 e0       	ldi	r20, 0x00	; 0
    1a6e:	50 e0       	ldi	r21, 0x00	; 0
    1a70:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		Gripper_Position_Manage=0;
    1a74:	10 92 3f 02 	sts	0x023F, r1
	}
}
    1a78:	1f 91       	pop	r17
    1a7a:	0f 91       	pop	r16
    1a7c:	ff 90       	pop	r15
    1a7e:	ef 90       	pop	r14
    1a80:	cf 90       	pop	r12
    1a82:	af 90       	pop	r10
    1a84:	08 95       	ret

00001a86 <_Z14Pololu_Motor_Bhhhhiihh>:
	Last_Motor_A_Present_Count=Pololu_Present_Motor_A;
	Last_Motor_A_Prevoius_Count=Pololu_Previous_Motor_A;
}

void Pololu_Motor_B(unsigned char Motor_Direction,unsigned char Motor_B_Count,unsigned char Present_Value,unsigned char Previous_Value,int thershold,int difference,unsigned char Final_Count,unsigned char Direction)
{
    1a86:	af 92       	push	r10
    1a88:	cf 92       	push	r12
    1a8a:	df 92       	push	r13
    1a8c:	ef 92       	push	r14
    1a8e:	ff 92       	push	r15
    1a90:	0f 93       	push	r16
    1a92:	1f 93       	push	r17
    1a94:	cf 93       	push	r28
    1a96:	c8 2f       	mov	r28, r24
    1a98:	97 01       	movw	r18, r14
	if (Set_Value_Flag)
    1a9a:	80 91 27 02 	lds	r24, 0x0227
    1a9e:	88 23       	and	r24, r24
    1aa0:	51 f0       	breq	.+20     	; 0x1ab6 <_Z14Pololu_Motor_Bhhhhiihh+0x30>
	{
		Pololu_Previous_Motor_B=Previous_Value;
		Pololu_Previous_Motor_B=Present_Value;
    1aa2:	40 93 6e 02 	sts	0x026E, r20
    1aa6:	10 92 6f 02 	sts	0x026F, r1
		Junction_Motor_B=Motor_B_Count;
    1aaa:	60 93 6c 02 	sts	0x026C, r22
    1aae:	10 92 6d 02 	sts	0x026D, r1
		Set_Value_Flag=0;
    1ab2:	10 92 27 02 	sts	0x0227, r1
	}
	Pololu_Present_Motor_B=pololu.Get_Junction_Sensor(MOTOR_B,thershold,difference);
    1ab6:	8d ea       	ldi	r24, 0xAD	; 173
    1ab8:	92 e0       	ldi	r25, 0x02	; 2
    1aba:	60 e0       	ldi	r22, 0x00	; 0
    1abc:	a8 01       	movw	r20, r16
    1abe:	0e 94 cf 00 	call	0x19e	; 0x19e <_ZN6Analog19Get_Junction_SensorEhii>
    1ac2:	90 93 71 02 	sts	0x0271, r25
    1ac6:	80 93 70 02 	sts	0x0270, r24
	if ((Direction==Forward_Direction_Motor_B) && (Pololu_Present_Motor_B!=Pololu_Previous_Motor_B))
    1aca:	21 e0       	ldi	r18, 0x01	; 1
    1acc:	a2 16       	cp	r10, r18
    1ace:	b1 f4       	brne	.+44     	; 0x1afc <_Z14Pololu_Motor_Bhhhhiihh+0x76>
    1ad0:	20 91 6e 02 	lds	r18, 0x026E
    1ad4:	30 91 6f 02 	lds	r19, 0x026F
    1ad8:	82 17       	cp	r24, r18
    1ada:	93 07       	cpc	r25, r19
    1adc:	79 f0       	breq	.+30     	; 0x1afc <_Z14Pololu_Motor_Bhhhhiihh+0x76>
	{
		Junction_Motor_B++;
    1ade:	20 91 6c 02 	lds	r18, 0x026C
    1ae2:	30 91 6d 02 	lds	r19, 0x026D
    1ae6:	2f 5f       	subi	r18, 0xFF	; 255
    1ae8:	3f 4f       	sbci	r19, 0xFF	; 255
    1aea:	30 93 6d 02 	sts	0x026D, r19
    1aee:	20 93 6c 02 	sts	0x026C, r18
		Pololu_Previous_Motor_B=Pololu_Present_Motor_B;
    1af2:	90 93 6f 02 	sts	0x026F, r25
    1af6:	80 93 6e 02 	sts	0x026E, r24
    1afa:	18 c0       	rjmp	.+48     	; 0x1b2c <_Z14Pololu_Motor_Bhhhhiihh+0xa6>
	}
	if ((Direction==Downward_Direction_Motor_B) && (Pololu_Present_Motor_B!=Pololu_Previous_Motor_B))
    1afc:	22 e0       	ldi	r18, 0x02	; 2
    1afe:	a2 16       	cp	r10, r18
    1b00:	a9 f4       	brne	.+42     	; 0x1b2c <_Z14Pololu_Motor_Bhhhhiihh+0xa6>
    1b02:	20 91 6e 02 	lds	r18, 0x026E
    1b06:	30 91 6f 02 	lds	r19, 0x026F
    1b0a:	82 17       	cp	r24, r18
    1b0c:	93 07       	cpc	r25, r19
    1b0e:	71 f0       	breq	.+28     	; 0x1b2c <_Z14Pololu_Motor_Bhhhhiihh+0xa6>
	{
		Junction_Motor_B--;
    1b10:	20 91 6c 02 	lds	r18, 0x026C
    1b14:	30 91 6d 02 	lds	r19, 0x026D
    1b18:	21 50       	subi	r18, 0x01	; 1
    1b1a:	30 40       	sbci	r19, 0x00	; 0
    1b1c:	30 93 6d 02 	sts	0x026D, r19
    1b20:	20 93 6c 02 	sts	0x026C, r18
		Pololu_Previous_Motor_B=Pololu_Present_Motor_B;
    1b24:	90 93 6f 02 	sts	0x026F, r25
    1b28:	80 93 6e 02 	sts	0x026E, r24
	}
	
	if ((Junction_Motor_A!=Final_Count))
    1b2c:	dd 24       	eor	r13, r13
    1b2e:	80 91 66 02 	lds	r24, 0x0266
    1b32:	90 91 67 02 	lds	r25, 0x0267
    1b36:	c8 16       	cp	r12, r24
    1b38:	d9 06       	cpc	r13, r25
    1b3a:	79 f0       	breq	.+30     	; 0x1b5a <_Z14Pololu_Motor_Bhhhhiihh+0xd4>
	{
		Mot.Set_Motor_Direction(Motor_B,Motor_Direction);
    1b3c:	0b ec       	ldi	r16, 0xCB	; 203
    1b3e:	12 e0       	ldi	r17, 0x02	; 2
    1b40:	c8 01       	movw	r24, r16
    1b42:	61 e0       	ldi	r22, 0x01	; 1
    1b44:	4c 2f       	mov	r20, r28
    1b46:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
		Mot.Run(Motor_B,1800);
    1b4a:	c8 01       	movw	r24, r16
    1b4c:	61 e0       	ldi	r22, 0x01	; 1
    1b4e:	70 e0       	ldi	r23, 0x00	; 0
    1b50:	48 e0       	ldi	r20, 0x08	; 8
    1b52:	57 e0       	ldi	r21, 0x07	; 7
    1b54:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
    1b58:	08 c0       	rjmp	.+16     	; 0x1b6a <_Z14Pololu_Motor_Bhhhhiihh+0xe4>
	}
	else
	{
		Mot.Run(Motor_B,0);
    1b5a:	8b ec       	ldi	r24, 0xCB	; 203
    1b5c:	92 e0       	ldi	r25, 0x02	; 2
    1b5e:	61 e0       	ldi	r22, 0x01	; 1
    1b60:	70 e0       	ldi	r23, 0x00	; 0
    1b62:	40 e0       	ldi	r20, 0x00	; 0
    1b64:	50 e0       	ldi	r21, 0x00	; 0
    1b66:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
	}
	Last_Motor_B_Present_Count=Pololu_Present_Motor_B;
    1b6a:	80 91 70 02 	lds	r24, 0x0270
    1b6e:	80 93 29 02 	sts	0x0229, r24
	Last_Motor_B_Prevoius_Count=Pololu_Previous_Motor_B;
    1b72:	80 91 6e 02 	lds	r24, 0x026E
    1b76:	80 93 28 02 	sts	0x0228, r24
}
    1b7a:	cf 91       	pop	r28
    1b7c:	1f 91       	pop	r17
    1b7e:	0f 91       	pop	r16
    1b80:	ff 90       	pop	r15
    1b82:	ef 90       	pop	r14
    1b84:	df 90       	pop	r13
    1b86:	cf 90       	pop	r12
    1b88:	af 90       	pop	r10
    1b8a:	08 95       	ret

00001b8c <_Z18Restart_Second_Funv>:
	}
	
}

void Restart_Second_Fun()
{
    1b8c:	af 92       	push	r10
    1b8e:	cf 92       	push	r12
    1b90:	ef 92       	push	r14
    1b92:	ff 92       	push	r15
    1b94:	0f 93       	push	r16
    1b96:	1f 93       	push	r17
	Pololu_Motor_B(Forward,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_B_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,3,Forward_Direction_Motor_B);
    1b98:	81 e0       	ldi	r24, 0x01	; 1
    1b9a:	60 91 6c 02 	lds	r22, 0x026C
    1b9e:	40 91 29 02 	lds	r20, 0x0229
    1ba2:	20 91 28 02 	lds	r18, 0x0228
    1ba6:	0a e8       	ldi	r16, 0x8A	; 138
    1ba8:	12 e0       	ldi	r17, 0x02	; 2
    1baa:	0f 2e       	mov	r0, r31
    1bac:	fb e4       	ldi	r31, 0x4B	; 75
    1bae:	ef 2e       	mov	r14, r31
    1bb0:	ff 24       	eor	r15, r15
    1bb2:	f0 2d       	mov	r31, r0
    1bb4:	0f 2e       	mov	r0, r31
    1bb6:	f3 e0       	ldi	r31, 0x03	; 3
    1bb8:	cf 2e       	mov	r12, r31
    1bba:	f0 2d       	mov	r31, r0
    1bbc:	aa 24       	eor	r10, r10
    1bbe:	a3 94       	inc	r10
    1bc0:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <_Z14Pololu_Motor_Bhhhhiihh>
	if (Junction_Motor_B==3)
    1bc4:	80 91 6c 02 	lds	r24, 0x026C
    1bc8:	90 91 6d 02 	lds	r25, 0x026D
    1bcc:	83 30       	cpi	r24, 0x03	; 3
    1bce:	91 05       	cpc	r25, r1
    1bd0:	69 f4       	brne	.+26     	; 0x1bec <_Z18Restart_Second_Funv+0x60>
	{
		Mot.Run(Motor_B,0);
    1bd2:	8b ec       	ldi	r24, 0xCB	; 203
    1bd4:	92 e0       	ldi	r25, 0x02	; 2
    1bd6:	61 e0       	ldi	r22, 0x01	; 1
    1bd8:	70 e0       	ldi	r23, 0x00	; 0
    1bda:	40 e0       	ldi	r20, 0x00	; 0
    1bdc:	50 e0       	ldi	r21, 0x00	; 0
    1bde:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		wiper_up_Flag=1;
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	80 93 26 02 	sts	0x0226, r24
		Set_Value_Flag=1;
    1be8:	80 93 27 02 	sts	0x0227, r24
	}
	if (wiper_up_Flag)
    1bec:	80 91 26 02 	lds	r24, 0x0226
    1bf0:	88 23       	and	r24, r24
    1bf2:	69 f1       	breq	.+90     	; 0x1c4e <_Z18Restart_Second_Funv+0xc2>
	{
		Pololu_Wiper(Reverse,Junction_Wiper,Last_Wiper_Present_Count,Last_Wiper_Prevoius_Count,Wiper_Thershold,Wiper_Difference,2,Forward_Direction_Wiper);
    1bf4:	80 e0       	ldi	r24, 0x00	; 0
    1bf6:	60 91 5f 02 	lds	r22, 0x025F
    1bfa:	40 91 2d 02 	lds	r20, 0x022D
    1bfe:	20 91 2c 02 	lds	r18, 0x022C
    1c02:	0a e8       	ldi	r16, 0x8A	; 138
    1c04:	12 e0       	ldi	r17, 0x02	; 2
    1c06:	0f 2e       	mov	r0, r31
    1c08:	fb e4       	ldi	r31, 0x4B	; 75
    1c0a:	ef 2e       	mov	r14, r31
    1c0c:	ff 24       	eor	r15, r15
    1c0e:	f0 2d       	mov	r31, r0
    1c10:	cc 24       	eor	r12, r12
    1c12:	68 94       	set
    1c14:	c1 f8       	bld	r12, 1
    1c16:	aa 24       	eor	r10, r10
    1c18:	a3 94       	inc	r10
    1c1a:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <_Z12Pololu_Wiperhhhhiihh>
		if (Junction_Wiper==2)
    1c1e:	80 91 5f 02 	lds	r24, 0x025F
    1c22:	90 91 60 02 	lds	r25, 0x0260
    1c26:	82 30       	cpi	r24, 0x02	; 2
    1c28:	91 05       	cpc	r25, r1
    1c2a:	89 f4       	brne	.+34     	; 0x1c4e <_Z18Restart_Second_Funv+0xc2>
		{
			Mot.Run(Wiper,0);
    1c2c:	8b ec       	ldi	r24, 0xCB	; 203
    1c2e:	92 e0       	ldi	r25, 0x02	; 2
    1c30:	62 e0       	ldi	r22, 0x02	; 2
    1c32:	70 e0       	ldi	r23, 0x00	; 0
    1c34:	40 e0       	ldi	r20, 0x00	; 0
    1c36:	50 e0       	ldi	r21, 0x00	; 0
    1c38:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
			Case_M=1;
    1c3c:	81 e0       	ldi	r24, 0x01	; 1
    1c3e:	80 93 2f 02 	sts	0x022F, r24
			Set_Value_Flag=1;
    1c42:	80 93 27 02 	sts	0x0227, r24
			Gripper_Position_Manage=1;
    1c46:	80 93 3f 02 	sts	0x023F, r24
			Restart_Flag_Second=0;
    1c4a:	10 92 3c 02 	sts	0x023C, r1
		}
	}
}
    1c4e:	1f 91       	pop	r17
    1c50:	0f 91       	pop	r16
    1c52:	ff 90       	pop	r15
    1c54:	ef 90       	pop	r14
    1c56:	cf 90       	pop	r12
    1c58:	af 90       	pop	r10
    1c5a:	08 95       	ret

00001c5c <_Z17Restart_First_Funv>:
		
	}
}

void Restart_First_Fun()
{
    1c5c:	af 92       	push	r10
    1c5e:	cf 92       	push	r12
    1c60:	ef 92       	push	r14
    1c62:	ff 92       	push	r15
    1c64:	0f 93       	push	r16
    1c66:	1f 93       	push	r17
	if (wiper_up_Flag==0)
    1c68:	80 91 26 02 	lds	r24, 0x0226
    1c6c:	88 23       	and	r24, r24
    1c6e:	49 f5       	brne	.+82     	; 0x1cc2 <_Z17Restart_First_Funv+0x66>
	{
		Pololu_Motor_B(Forward,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_B_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,4,Forward_Direction_Motor_B);
    1c70:	81 e0       	ldi	r24, 0x01	; 1
    1c72:	60 91 6c 02 	lds	r22, 0x026C
    1c76:	40 91 29 02 	lds	r20, 0x0229
    1c7a:	20 91 28 02 	lds	r18, 0x0228
    1c7e:	0a e8       	ldi	r16, 0x8A	; 138
    1c80:	12 e0       	ldi	r17, 0x02	; 2
    1c82:	0f 2e       	mov	r0, r31
    1c84:	fb e4       	ldi	r31, 0x4B	; 75
    1c86:	ef 2e       	mov	r14, r31
    1c88:	ff 24       	eor	r15, r15
    1c8a:	f0 2d       	mov	r31, r0
    1c8c:	cc 24       	eor	r12, r12
    1c8e:	68 94       	set
    1c90:	c2 f8       	bld	r12, 2
    1c92:	aa 24       	eor	r10, r10
    1c94:	a3 94       	inc	r10
    1c96:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <_Z14Pololu_Motor_Bhhhhiihh>
		if (Junction_Motor_B==4)
    1c9a:	80 91 6c 02 	lds	r24, 0x026C
    1c9e:	90 91 6d 02 	lds	r25, 0x026D
    1ca2:	84 30       	cpi	r24, 0x04	; 4
    1ca4:	91 05       	cpc	r25, r1
    1ca6:	69 f4       	brne	.+26     	; 0x1cc2 <_Z17Restart_First_Funv+0x66>
		{
			Mot.Run(Motor_B,0);
    1ca8:	8b ec       	ldi	r24, 0xCB	; 203
    1caa:	92 e0       	ldi	r25, 0x02	; 2
    1cac:	61 e0       	ldi	r22, 0x01	; 1
    1cae:	70 e0       	ldi	r23, 0x00	; 0
    1cb0:	40 e0       	ldi	r20, 0x00	; 0
    1cb2:	50 e0       	ldi	r21, 0x00	; 0
    1cb4:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
			wiper_up_Flag=1;
    1cb8:	81 e0       	ldi	r24, 0x01	; 1
    1cba:	80 93 26 02 	sts	0x0226, r24
			Set_Value_Flag=1;
    1cbe:	80 93 27 02 	sts	0x0227, r24
		}
	}
	if (wiper_up_Flag==1)
    1cc2:	80 91 26 02 	lds	r24, 0x0226
    1cc6:	81 30       	cpi	r24, 0x01	; 1
    1cc8:	49 f5       	brne	.+82     	; 0x1d1c <_Z17Restart_First_Funv+0xc0>
	{
		Pololu_Wiper(Reverse,Junction_Wiper,Last_Wiper_Present_Count,Last_Wiper_Prevoius_Count,Wiper_Thershold,Wiper_Difference,4,Forward_Direction_Wiper);
    1cca:	80 e0       	ldi	r24, 0x00	; 0
    1ccc:	60 91 5f 02 	lds	r22, 0x025F
    1cd0:	40 91 2d 02 	lds	r20, 0x022D
    1cd4:	20 91 2c 02 	lds	r18, 0x022C
    1cd8:	0a e8       	ldi	r16, 0x8A	; 138
    1cda:	12 e0       	ldi	r17, 0x02	; 2
    1cdc:	0f 2e       	mov	r0, r31
    1cde:	fb e4       	ldi	r31, 0x4B	; 75
    1ce0:	ef 2e       	mov	r14, r31
    1ce2:	ff 24       	eor	r15, r15
    1ce4:	f0 2d       	mov	r31, r0
    1ce6:	cc 24       	eor	r12, r12
    1ce8:	68 94       	set
    1cea:	c2 f8       	bld	r12, 2
    1cec:	aa 24       	eor	r10, r10
    1cee:	a3 94       	inc	r10
    1cf0:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <_Z12Pololu_Wiperhhhhiihh>
		if (Junction_Wiper==4)
    1cf4:	80 91 5f 02 	lds	r24, 0x025F
    1cf8:	90 91 60 02 	lds	r25, 0x0260
    1cfc:	84 30       	cpi	r24, 0x04	; 4
    1cfe:	91 05       	cpc	r25, r1
    1d00:	69 f4       	brne	.+26     	; 0x1d1c <_Z17Restart_First_Funv+0xc0>
		{
			Mot.Run(Wiper,0);
    1d02:	8b ec       	ldi	r24, 0xCB	; 203
    1d04:	92 e0       	ldi	r25, 0x02	; 2
    1d06:	62 e0       	ldi	r22, 0x02	; 2
    1d08:	70 e0       	ldi	r23, 0x00	; 0
    1d0a:	40 e0       	ldi	r20, 0x00	; 0
    1d0c:	50 e0       	ldi	r21, 0x00	; 0
    1d0e:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
			Restart_Flag_First=0;			
    1d12:	10 92 3d 02 	sts	0x023D, r1
			Case_K=1;
    1d16:	81 e0       	ldi	r24, 0x01	; 1
    1d18:	80 93 31 02 	sts	0x0231, r24
				
		}
	}
	
}
    1d1c:	1f 91       	pop	r17
    1d1e:	0f 91       	pop	r16
    1d20:	ff 90       	pop	r15
    1d22:	ef 90       	pop	r14
    1d24:	cf 90       	pop	r12
    1d26:	af 90       	pop	r10
    1d28:	08 95       	ret

00001d2a <_Z28Arm_Extend_Height_Manage_Funv>:
		}
	}
}
//activity 1 case A
void Arm_Extend_Height_Manage_Fun()
{
    1d2a:	2f 92       	push	r2
    1d2c:	3f 92       	push	r3
    1d2e:	4f 92       	push	r4
    1d30:	5f 92       	push	r5
    1d32:	6f 92       	push	r6
    1d34:	7f 92       	push	r7
    1d36:	8f 92       	push	r8
    1d38:	9f 92       	push	r9
    1d3a:	af 92       	push	r10
    1d3c:	cf 92       	push	r12
    1d3e:	ef 92       	push	r14
    1d40:	ff 92       	push	r15
    1d42:	0f 93       	push	r16
    1d44:	1f 93       	push	r17
    1d46:	cf 93       	push	r28
    1d48:	df 93       	push	r29
	Set_Value_Flag=1;
    1d4a:	81 e0       	ldi	r24, 0x01	; 1
    1d4c:	80 93 27 02 	sts	0x0227, r24
	while(Arm_Extend_Height_Manage)
	{
		LidarDown_PidCompute();
		
		Pololu_Motor_B(Forward,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_B_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,7,Forward_Direction_Motor_B);		
    1d50:	0f 2e       	mov	r0, r31
    1d52:	fc e6       	ldi	r31, 0x6C	; 108
    1d54:	8f 2e       	mov	r8, r31
    1d56:	f2 e0       	ldi	r31, 0x02	; 2
    1d58:	9f 2e       	mov	r9, r31
    1d5a:	f0 2d       	mov	r31, r0
		UART2TransmitData(Junction_Motor_B);
		UART2TransmitString("\t");
    1d5c:	c0 e0       	ldi	r28, 0x00	; 0
    1d5e:	d2 e0       	ldi	r29, 0x02	; 2
		UART2TransmitData(Pololu_Present_Motor_B);
		UART2TransmitString("\t");
		UART2TransmitData(Pololu_Previous_Motor_B);
		UART2TransmitString("\n\r");
    1d60:	0f 2e       	mov	r0, r31
    1d62:	f2 e0       	ldi	r31, 0x02	; 2
    1d64:	6f 2e       	mov	r6, r31
    1d66:	f2 e0       	ldi	r31, 0x02	; 2
    1d68:	7f 2e       	mov	r7, r31
    1d6a:	f0 2d       	mov	r31, r0
			LidarDown_PidCompute_Flag=1;
			Vertical_Separation=19;
		}
 		if (Junction_Motor_B==7)
 		{
			 Junction_Motor_B=8;    //remove it after
    1d6c:	22 24       	eor	r2, r2
    1d6e:	33 24       	eor	r3, r3
    1d70:	68 94       	set
    1d72:	23 f8       	bld	r2, 3
 	 		 Mot.Run(Motor_B,0);
 			 Arm_Extend_Height_Manage=0;
			 Vertical_Separation=19; 
    1d74:	0f 2e       	mov	r0, r31
    1d76:	f3 e1       	ldi	r31, 0x13	; 19
    1d78:	4f 2e       	mov	r4, r31
    1d7a:	55 24       	eor	r5, r5
    1d7c:	f0 2d       	mov	r31, r0
}
//activity 1 case A
void Arm_Extend_Height_Manage_Fun()
{
	Set_Value_Flag=1;
	while(Arm_Extend_Height_Manage)
    1d7e:	57 c0       	rjmp	.+174    	; 0x1e2e <_Z28Arm_Extend_Height_Manage_Funv+0x104>
	{
		LidarDown_PidCompute();
    1d80:	0e 94 00 03 	call	0x600	; 0x600 <_Z20LidarDown_PidComputev>
		
		Pololu_Motor_B(Forward,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_B_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,7,Forward_Direction_Motor_B);		
    1d84:	81 e0       	ldi	r24, 0x01	; 1
    1d86:	f4 01       	movw	r30, r8
    1d88:	60 81       	ld	r22, Z
    1d8a:	40 91 29 02 	lds	r20, 0x0229
    1d8e:	20 91 28 02 	lds	r18, 0x0228
    1d92:	0a e8       	ldi	r16, 0x8A	; 138
    1d94:	12 e0       	ldi	r17, 0x02	; 2
    1d96:	0f 2e       	mov	r0, r31
    1d98:	fb e4       	ldi	r31, 0x4B	; 75
    1d9a:	ef 2e       	mov	r14, r31
    1d9c:	ff 24       	eor	r15, r15
    1d9e:	f0 2d       	mov	r31, r0
    1da0:	0f 2e       	mov	r0, r31
    1da2:	f7 e0       	ldi	r31, 0x07	; 7
    1da4:	cf 2e       	mov	r12, r31
    1da6:	f0 2d       	mov	r31, r0
    1da8:	aa 24       	eor	r10, r10
    1daa:	a3 94       	inc	r10
    1dac:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <_Z14Pololu_Motor_Bhhhhiihh>
		UART2TransmitData(Junction_Motor_B);
    1db0:	80 91 6c 02 	lds	r24, 0x026C
    1db4:	90 91 6d 02 	lds	r25, 0x026D
    1db8:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2TransmitString("\t");
    1dbc:	ce 01       	movw	r24, r28
    1dbe:	0e 94 35 18 	call	0x306a	; 0x306a <_Z19UART2TransmitStringPKc>
		UART2TransmitData(Pololu_Present_Motor_B);
    1dc2:	80 91 70 02 	lds	r24, 0x0270
    1dc6:	90 91 71 02 	lds	r25, 0x0271
    1dca:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2TransmitString("\t");
    1dce:	ce 01       	movw	r24, r28
    1dd0:	0e 94 35 18 	call	0x306a	; 0x306a <_Z19UART2TransmitStringPKc>
		UART2TransmitData(Pololu_Previous_Motor_B);
    1dd4:	80 91 6e 02 	lds	r24, 0x026E
    1dd8:	90 91 6f 02 	lds	r25, 0x026F
    1ddc:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_Z17UART2TransmitDatai>
		UART2TransmitString("\n\r");
    1de0:	c3 01       	movw	r24, r6
    1de2:	0e 94 35 18 	call	0x306a	; 0x306a <_Z19UART2TransmitStringPKc>
		if (Junction_Motor_B==5)
    1de6:	80 91 6c 02 	lds	r24, 0x026C
    1dea:	90 91 6d 02 	lds	r25, 0x026D
    1dee:	85 30       	cpi	r24, 0x05	; 5
    1df0:	91 05       	cpc	r25, r1
    1df2:	41 f4       	brne	.+16     	; 0x1e04 <_Z28Arm_Extend_Height_Manage_Funv+0xda>
		{
			LidarDown_PidCompute_Flag=1;
    1df4:	81 e0       	ldi	r24, 0x01	; 1
    1df6:	80 93 0b 02 	sts	0x020B, r24
			Vertical_Separation=19;
    1dfa:	50 92 14 02 	sts	0x0214, r5
    1dfe:	40 92 13 02 	sts	0x0213, r4
    1e02:	15 c0       	rjmp	.+42     	; 0x1e2e <_Z28Arm_Extend_Height_Manage_Funv+0x104>
		}
 		if (Junction_Motor_B==7)
    1e04:	87 30       	cpi	r24, 0x07	; 7
    1e06:	91 05       	cpc	r25, r1
    1e08:	91 f4       	brne	.+36     	; 0x1e2e <_Z28Arm_Extend_Height_Manage_Funv+0x104>
 		{
			 Junction_Motor_B=8;    //remove it after
    1e0a:	30 92 6d 02 	sts	0x026D, r3
    1e0e:	20 92 6c 02 	sts	0x026C, r2
 	 		 Mot.Run(Motor_B,0);
    1e12:	8b ec       	ldi	r24, 0xCB	; 203
    1e14:	92 e0       	ldi	r25, 0x02	; 2
    1e16:	61 e0       	ldi	r22, 0x01	; 1
    1e18:	70 e0       	ldi	r23, 0x00	; 0
    1e1a:	40 e0       	ldi	r20, 0x00	; 0
    1e1c:	50 e0       	ldi	r21, 0x00	; 0
    1e1e:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
 			 Arm_Extend_Height_Manage=0;
    1e22:	10 92 8a 02 	sts	0x028A, r1
			 Vertical_Separation=19; 
    1e26:	50 92 14 02 	sts	0x0214, r5
    1e2a:	40 92 13 02 	sts	0x0213, r4
}
//activity 1 case A
void Arm_Extend_Height_Manage_Fun()
{
	Set_Value_Flag=1;
	while(Arm_Extend_Height_Manage)
    1e2e:	80 91 8a 02 	lds	r24, 0x028A
    1e32:	88 23       	and	r24, r24
    1e34:	09 f0       	breq	.+2      	; 0x1e38 <_Z28Arm_Extend_Height_Manage_Funv+0x10e>
    1e36:	a4 cf       	rjmp	.-184    	; 0x1d80 <_Z28Arm_Extend_Height_Manage_Funv+0x56>
 			 Arm_Extend_Height_Manage=0;
			 Vertical_Separation=19; 
 		}
		
	}
}
    1e38:	df 91       	pop	r29
    1e3a:	cf 91       	pop	r28
    1e3c:	1f 91       	pop	r17
    1e3e:	0f 91       	pop	r16
    1e40:	ff 90       	pop	r15
    1e42:	ef 90       	pop	r14
    1e44:	cf 90       	pop	r12
    1e46:	af 90       	pop	r10
    1e48:	9f 90       	pop	r9
    1e4a:	8f 90       	pop	r8
    1e4c:	7f 90       	pop	r7
    1e4e:	6f 90       	pop	r6
    1e50:	5f 90       	pop	r5
    1e52:	4f 90       	pop	r4
    1e54:	3f 90       	pop	r3
    1e56:	2f 90       	pop	r2
    1e58:	08 95       	ret

00001e5a <_Z21Putting_Propeller_Funv>:
		Lidar_Data_Calculate();
	}	
}
//activity case last
void Putting_Propeller_Fun()
{
    1e5a:	4f 92       	push	r4
    1e5c:	5f 92       	push	r5
    1e5e:	6f 92       	push	r6
    1e60:	7f 92       	push	r7
    1e62:	8f 92       	push	r8
    1e64:	9f 92       	push	r9
    1e66:	af 92       	push	r10
    1e68:	cf 92       	push	r12
    1e6a:	ef 92       	push	r14
    1e6c:	ff 92       	push	r15
    1e6e:	0f 93       	push	r16
    1e70:	1f 93       	push	r17
    1e72:	cf 93       	push	r28
    1e74:	df 93       	push	r29
	Mot.Run(Wiper,0);
    1e76:	8b ec       	ldi	r24, 0xCB	; 203
    1e78:	92 e0       	ldi	r25, 0x02	; 2
    1e7a:	62 e0       	ldi	r22, 0x02	; 2
    1e7c:	70 e0       	ldi	r23, 0x00	; 0
    1e7e:	40 e0       	ldi	r20, 0x00	; 0
    1e80:	50 e0       	ldi	r21, 0x00	; 0
    1e82:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
	LidarDown_Flag=0;
    1e86:	10 92 0a 02 	sts	0x020A, r1
	Set_Value_Flag=1;
    1e8a:	81 e0       	ldi	r24, 0x01	; 1
    1e8c:	80 93 27 02 	sts	0x0227, r24
	while(Putting_Propeller)
	{
		Pololu_Motor_B(Reverse,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_A_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,0,Downward_Direction_Motor_B);
    1e90:	0f 2e       	mov	r0, r31
    1e92:	fc e6       	ldi	r31, 0x6C	; 108
    1e94:	8f 2e       	mov	r8, r31
    1e96:	f2 e0       	ldi	r31, 0x02	; 2
    1e98:	9f 2e       	mov	r9, r31
    1e9a:	f0 2d       	mov	r31, r0
		if (Junction_Motor_B==0)
		{
			Putting_Propeller=0;
			Mot.Run(Motor_B,0);
    1e9c:	cb ec       	ldi	r28, 0xCB	; 203
    1e9e:	d2 e0       	ldi	r29, 0x02	; 2
			PORTH &=~ (1<<PH3);
    1ea0:	0f 2e       	mov	r0, r31
    1ea2:	f2 e0       	ldi	r31, 0x02	; 2
    1ea4:	6f 2e       	mov	r6, r31
    1ea6:	f1 e0       	ldi	r31, 0x01	; 1
    1ea8:	7f 2e       	mov	r7, r31
    1eaa:	f0 2d       	mov	r31, r0
			Gripper_Angle=75;
			Servoo.Rotate_Gripper_Servo(Gripper_Angle);
    1eac:	0f 2e       	mov	r0, r31
    1eae:	f3 ec       	ldi	r31, 0xC3	; 195
    1eb0:	4f 2e       	mov	r4, r31
    1eb2:	f2 e0       	ldi	r31, 0x02	; 2
    1eb4:	5f 2e       	mov	r5, r31
    1eb6:	f0 2d       	mov	r31, r0
void Putting_Propeller_Fun()
{
	Mot.Run(Wiper,0);
	LidarDown_Flag=0;
	Set_Value_Flag=1;
	while(Putting_Propeller)
    1eb8:	92 c0       	rjmp	.+292    	; 0x1fde <_Z21Putting_Propeller_Funv+0x184>
	{
		Pololu_Motor_B(Reverse,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_A_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,0,Downward_Direction_Motor_B);
    1eba:	80 e0       	ldi	r24, 0x00	; 0
    1ebc:	d4 01       	movw	r26, r8
    1ebe:	6c 91       	ld	r22, X
    1ec0:	40 91 29 02 	lds	r20, 0x0229
    1ec4:	20 91 2a 02 	lds	r18, 0x022A
    1ec8:	0a e8       	ldi	r16, 0x8A	; 138
    1eca:	12 e0       	ldi	r17, 0x02	; 2
    1ecc:	0f 2e       	mov	r0, r31
    1ece:	fb e4       	ldi	r31, 0x4B	; 75
    1ed0:	ef 2e       	mov	r14, r31
    1ed2:	ff 24       	eor	r15, r15
    1ed4:	f0 2d       	mov	r31, r0
    1ed6:	cc 24       	eor	r12, r12
    1ed8:	aa 24       	eor	r10, r10
    1eda:	68 94       	set
    1edc:	a1 f8       	bld	r10, 1
    1ede:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <_Z14Pololu_Motor_Bhhhhiihh>
		if (Junction_Motor_B==0)
    1ee2:	80 91 6c 02 	lds	r24, 0x026C
    1ee6:	90 91 6d 02 	lds	r25, 0x026D
    1eea:	00 97       	sbiw	r24, 0x00	; 0
    1eec:	09 f0       	breq	.+2      	; 0x1ef0 <_Z21Putting_Propeller_Funv+0x96>
    1eee:	77 c0       	rjmp	.+238    	; 0x1fde <_Z21Putting_Propeller_Funv+0x184>
		{
			Putting_Propeller=0;
    1ef0:	10 92 86 02 	sts	0x0286, r1
			Mot.Run(Motor_B,0);
    1ef4:	ce 01       	movw	r24, r28
    1ef6:	61 e0       	ldi	r22, 0x01	; 1
    1ef8:	70 e0       	ldi	r23, 0x00	; 0
    1efa:	40 e0       	ldi	r20, 0x00	; 0
    1efc:	50 e0       	ldi	r21, 0x00	; 0
    1efe:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
			PORTH &=~ (1<<PH3);
    1f02:	f3 01       	movw	r30, r6
    1f04:	80 81       	ld	r24, Z
    1f06:	87 7f       	andi	r24, 0xF7	; 247
    1f08:	80 83       	st	Z, r24
			Gripper_Angle=75;
    1f0a:	8b e4       	ldi	r24, 0x4B	; 75
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	90 93 10 02 	sts	0x0210, r25
    1f12:	80 93 0f 02 	sts	0x020F, r24
			Servoo.Rotate_Gripper_Servo(Gripper_Angle);
    1f16:	c2 01       	movw	r24, r4
    1f18:	40 e0       	ldi	r20, 0x00	; 0
    1f1a:	50 e0       	ldi	r21, 0x00	; 0
    1f1c:	66 e9       	ldi	r22, 0x96	; 150
    1f1e:	72 e4       	ldi	r23, 0x42	; 66
    1f20:	0e 94 06 17 	call	0x2e0c	; 0x2e0c <_ZN5Servo20Rotate_Gripper_ServoEf>
    1f24:	8f ef       	ldi	r24, 0xFF	; 255
    1f26:	99 e6       	ldi	r25, 0x69	; 105
    1f28:	a8 e1       	ldi	r26, 0x18	; 24
    1f2a:	81 50       	subi	r24, 0x01	; 1
    1f2c:	90 40       	sbci	r25, 0x00	; 0
    1f2e:	a0 40       	sbci	r26, 0x00	; 0
    1f30:	e1 f7       	brne	.-8      	; 0x1f2a <_Z21Putting_Propeller_Funv+0xd0>
    1f32:	00 c0       	rjmp	.+0      	; 0x1f34 <_Z21Putting_Propeller_Funv+0xda>
    1f34:	00 00       	nop
			_delay_ms(500);
			Mot.Set_Motor_Direction(Motor_A,Forward);
    1f36:	ce 01       	movw	r24, r28
    1f38:	60 e0       	ldi	r22, 0x00	; 0
    1f3a:	41 e0       	ldi	r20, 0x01	; 1
    1f3c:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
			Mot.Run(Motor_A,2000);
    1f40:	ce 01       	movw	r24, r28
    1f42:	60 e0       	ldi	r22, 0x00	; 0
    1f44:	70 e0       	ldi	r23, 0x00	; 0
    1f46:	40 ed       	ldi	r20, 0xD0	; 208
    1f48:	57 e0       	ldi	r21, 0x07	; 7
    1f4a:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
    1f4e:	8f ef       	ldi	r24, 0xFF	; 255
    1f50:	99 e6       	ldi	r25, 0x69	; 105
    1f52:	a8 e1       	ldi	r26, 0x18	; 24
    1f54:	81 50       	subi	r24, 0x01	; 1
    1f56:	90 40       	sbci	r25, 0x00	; 0
    1f58:	a0 40       	sbci	r26, 0x00	; 0
    1f5a:	e1 f7       	brne	.-8      	; 0x1f54 <_Z21Putting_Propeller_Funv+0xfa>
    1f5c:	00 c0       	rjmp	.+0      	; 0x1f5e <_Z21Putting_Propeller_Funv+0x104>
    1f5e:	00 00       	nop
			_delay_ms(500);
			Mot.Run(Motor_A,0);
    1f60:	ce 01       	movw	r24, r28
    1f62:	60 e0       	ldi	r22, 0x00	; 0
    1f64:	70 e0       	ldi	r23, 0x00	; 0
    1f66:	40 e0       	ldi	r20, 0x00	; 0
    1f68:	50 e0       	ldi	r21, 0x00	; 0
    1f6a:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
			Mot.Set_Motor_Direction(Motor_B,Forward);
    1f6e:	ce 01       	movw	r24, r28
    1f70:	61 e0       	ldi	r22, 0x01	; 1
    1f72:	41 e0       	ldi	r20, 0x01	; 1
    1f74:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
			Mot.Run(Motor_B,2000);
    1f78:	ce 01       	movw	r24, r28
    1f7a:	61 e0       	ldi	r22, 0x01	; 1
    1f7c:	70 e0       	ldi	r23, 0x00	; 0
    1f7e:	40 ed       	ldi	r20, 0xD0	; 208
    1f80:	57 e0       	ldi	r21, 0x07	; 7
    1f82:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
    1f86:	8f ef       	ldi	r24, 0xFF	; 255
    1f88:	91 ef       	ldi	r25, 0xF1	; 241
    1f8a:	ab e2       	ldi	r26, 0x2B	; 43
    1f8c:	81 50       	subi	r24, 0x01	; 1
    1f8e:	90 40       	sbci	r25, 0x00	; 0
    1f90:	a0 40       	sbci	r26, 0x00	; 0
    1f92:	e1 f7       	brne	.-8      	; 0x1f8c <_Z21Putting_Propeller_Funv+0x132>
    1f94:	00 c0       	rjmp	.+0      	; 0x1f96 <_Z21Putting_Propeller_Funv+0x13c>
    1f96:	00 00       	nop
			_delay_ms(900);
			Mot.Run(Motor_B,0);
    1f98:	ce 01       	movw	r24, r28
    1f9a:	61 e0       	ldi	r22, 0x01	; 1
    1f9c:	70 e0       	ldi	r23, 0x00	; 0
    1f9e:	40 e0       	ldi	r20, 0x00	; 0
    1fa0:	50 e0       	ldi	r21, 0x00	; 0
    1fa2:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
			Mot.Set_Motor_Direction(Wiper,Reverse);
    1fa6:	ce 01       	movw	r24, r28
    1fa8:	62 e0       	ldi	r22, 0x02	; 2
    1faa:	40 e0       	ldi	r20, 0x00	; 0
    1fac:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN5Motor19Set_Motor_DirectionEhh>
			Mot.Run(Wiper,1800);
    1fb0:	ce 01       	movw	r24, r28
    1fb2:	62 e0       	ldi	r22, 0x02	; 2
    1fb4:	70 e0       	ldi	r23, 0x00	; 0
    1fb6:	48 e0       	ldi	r20, 0x08	; 8
    1fb8:	57 e0       	ldi	r21, 0x07	; 7
    1fba:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
    1fbe:	8f ef       	ldi	r24, 0xFF	; 255
    1fc0:	95 ea       	ldi	r25, 0xA5	; 165
    1fc2:	ae e0       	ldi	r26, 0x0E	; 14
    1fc4:	81 50       	subi	r24, 0x01	; 1
    1fc6:	90 40       	sbci	r25, 0x00	; 0
    1fc8:	a0 40       	sbci	r26, 0x00	; 0
    1fca:	e1 f7       	brne	.-8      	; 0x1fc4 <_Z21Putting_Propeller_Funv+0x16a>
    1fcc:	00 c0       	rjmp	.+0      	; 0x1fce <_Z21Putting_Propeller_Funv+0x174>
    1fce:	00 00       	nop
			_delay_ms(300);
			Mot.Run(Wiper,0);
    1fd0:	ce 01       	movw	r24, r28
    1fd2:	62 e0       	ldi	r22, 0x02	; 2
    1fd4:	70 e0       	ldi	r23, 0x00	; 0
    1fd6:	40 e0       	ldi	r20, 0x00	; 0
    1fd8:	50 e0       	ldi	r21, 0x00	; 0
    1fda:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
void Putting_Propeller_Fun()
{
	Mot.Run(Wiper,0);
	LidarDown_Flag=0;
	Set_Value_Flag=1;
	while(Putting_Propeller)
    1fde:	80 91 86 02 	lds	r24, 0x0286
    1fe2:	88 23       	and	r24, r24
    1fe4:	09 f0       	breq	.+2      	; 0x1fe8 <_Z21Putting_Propeller_Funv+0x18e>
    1fe6:	69 cf       	rjmp	.-302    	; 0x1eba <_Z21Putting_Propeller_Funv+0x60>
			Mot.Run(Wiper,0);
			//Last_Height_Down=1;
			//Downward_Direction1=1;
		}
	}
}
    1fe8:	df 91       	pop	r29
    1fea:	cf 91       	pop	r28
    1fec:	1f 91       	pop	r17
    1fee:	0f 91       	pop	r16
    1ff0:	ff 90       	pop	r15
    1ff2:	ef 90       	pop	r14
    1ff4:	cf 90       	pop	r12
    1ff6:	af 90       	pop	r10
    1ff8:	9f 90       	pop	r9
    1ffa:	8f 90       	pop	r8
    1ffc:	7f 90       	pop	r7
    1ffe:	6f 90       	pop	r6
    2000:	5f 90       	pop	r5
    2002:	4f 90       	pop	r4
    2004:	08 95       	ret

00002006 <_Z26Gripping_Height_To_Max_Funv>:
		}
	}
}
//activity 5 case F
void Gripping_Height_To_Max_Fun()
{
    2006:	4f 92       	push	r4
    2008:	5f 92       	push	r5
    200a:	6f 92       	push	r6
    200c:	7f 92       	push	r7
    200e:	8f 92       	push	r8
    2010:	9f 92       	push	r9
    2012:	af 92       	push	r10
    2014:	cf 92       	push	r12
    2016:	df 92       	push	r13
    2018:	ef 92       	push	r14
    201a:	ff 92       	push	r15
    201c:	0f 93       	push	r16
    201e:	1f 93       	push	r17
    2020:	cf 93       	push	r28
    2022:	df 93       	push	r29
	unsigned char Height_Flag=1;
	unsigned char Some_Flag=0;
	unsigned char Arm_Flag=0;
	PORTH &=~ ((1<<PH3));
    2024:	c2 e0       	ldi	r28, 0x02	; 2
    2026:	d1 e0       	ldi	r29, 0x01	; 1
    2028:	88 81       	ld	r24, Y
    202a:	87 7f       	andi	r24, 0xF7	; 247
    202c:	88 83       	st	Y, r24
	Gripper_Angle=51;
    202e:	83 e3       	ldi	r24, 0x33	; 51
    2030:	90 e0       	ldi	r25, 0x00	; 0
    2032:	90 93 10 02 	sts	0x0210, r25
    2036:	80 93 0f 02 	sts	0x020F, r24
	Servoo.Rotate_Gripper_Servo(Gripper_Angle);
    203a:	83 ec       	ldi	r24, 0xC3	; 195
    203c:	92 e0       	ldi	r25, 0x02	; 2
    203e:	40 e0       	ldi	r20, 0x00	; 0
    2040:	50 e0       	ldi	r21, 0x00	; 0
    2042:	6c e4       	ldi	r22, 0x4C	; 76
    2044:	72 e4       	ldi	r23, 0x42	; 66
    2046:	0e 94 06 17 	call	0x2e0c	; 0x2e0c <_ZN5Servo20Rotate_Gripper_ServoEf>
	UART2Transmit('Y');
    204a:	89 e5       	ldi	r24, 0x59	; 89
    204c:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
    2050:	8f ef       	ldi	r24, 0xFF	; 255
    2052:	95 ea       	ldi	r25, 0xA5	; 165
    2054:	ae e0       	ldi	r26, 0x0E	; 14
    2056:	81 50       	subi	r24, 0x01	; 1
    2058:	90 40       	sbci	r25, 0x00	; 0
    205a:	a0 40       	sbci	r26, 0x00	; 0
    205c:	e1 f7       	brne	.-8      	; 0x2056 <_Z26Gripping_Height_To_Max_Funv+0x50>
    205e:	00 c0       	rjmp	.+0      	; 0x2060 <_Z26Gripping_Height_To_Max_Funv+0x5a>
    2060:	00 00       	nop
	_delay_ms(300);
	PORTH |= ((1<<PH3));
    2062:	88 81       	ld	r24, Y
    2064:	88 60       	ori	r24, 0x08	; 8
    2066:	88 83       	st	Y, r24
	LidarDown_Flag=1;
    2068:	81 e0       	ldi	r24, 0x01	; 1
    206a:	80 93 0a 02 	sts	0x020A, r24
	Set_Value_Flag=1;
    206e:	80 93 27 02 	sts	0x0227, r24
	while (Gripping_Height_To_Max)
    2072:	80 91 87 02 	lds	r24, 0x0287
    2076:	88 23       	and	r24, r24
    2078:	09 f4       	brne	.+2      	; 0x207c <_Z26Gripping_Height_To_Max_Funv+0x76>
    207a:	82 c0       	rjmp	.+260    	; 0x2180 <_Z26Gripping_Height_To_Max_Funv+0x17a>
//activity 5 case F
void Gripping_Height_To_Max_Fun()
{
	unsigned char Height_Flag=1;
	unsigned char Some_Flag=0;
	unsigned char Arm_Flag=0;
    207c:	d0 e0       	ldi	r29, 0x00	; 0
	}
}
//activity 5 case F
void Gripping_Height_To_Max_Fun()
{
	unsigned char Height_Flag=1;
    207e:	c1 e0       	ldi	r28, 0x01	; 1
			}
		}
		
		if (Arm_Flag)
		{
			Pololu_Motor_B(Reverse,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_B_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,3,Downward_Direction_Motor_B);
    2080:	0f 2e       	mov	r0, r31
    2082:	fc e6       	ldi	r31, 0x6C	; 108
    2084:	8f 2e       	mov	r8, r31
    2086:	f2 e0       	ldi	r31, 0x02	; 2
    2088:	9f 2e       	mov	r9, r31
    208a:	f0 2d       	mov	r31, r0
			if (Junction_Motor_B==3)
			{
				Mot.Run(Motor_A,0);
    208c:	0f 2e       	mov	r0, r31
    208e:	fb ec       	ldi	r31, 0xCB	; 203
    2090:	4f 2e       	mov	r4, r31
    2092:	f2 e0       	ldi	r31, 0x02	; 2
    2094:	5f 2e       	mov	r5, r31
    2096:	f0 2d       	mov	r31, r0
				Mot.Run(Wiper,0);
				LidarDown_PidCompute_Flag=0;
				Gripping_Height_To_Max=0;
				LidarDown_Flag=0;
				Arm_Flag=0;
				Last_Lidar_Data_Send=1;
    2098:	dd 24       	eor	r13, r13
    209a:	d3 94       	inc	r13
	Set_Value_Flag=1;
	while (Gripping_Height_To_Max)
	{
		if (Height_Flag)
		{
			Pololu_Wiper(Reverse,Junction_Wiper,Last_Wiper_Present_Count,Last_Wiper_Prevoius_Count,Wiper_Thershold,Wiper_Difference,6,Forward_Direction_Wiper);
    209c:	0f 2e       	mov	r0, r31
    209e:	ff e5       	ldi	r31, 0x5F	; 95
    20a0:	6f 2e       	mov	r6, r31
    20a2:	f2 e0       	ldi	r31, 0x02	; 2
    20a4:	7f 2e       	mov	r7, r31
    20a6:	f0 2d       	mov	r31, r0
	PORTH |= ((1<<PH3));
	LidarDown_Flag=1;
	Set_Value_Flag=1;
	while (Gripping_Height_To_Max)
	{
		if (Height_Flag)
    20a8:	cc 23       	and	r28, r28
    20aa:	29 f1       	breq	.+74     	; 0x20f6 <_Z26Gripping_Height_To_Max_Funv+0xf0>
		{
			Pololu_Wiper(Reverse,Junction_Wiper,Last_Wiper_Present_Count,Last_Wiper_Prevoius_Count,Wiper_Thershold,Wiper_Difference,6,Forward_Direction_Wiper);
    20ac:	80 e0       	ldi	r24, 0x00	; 0
    20ae:	d3 01       	movw	r26, r6
    20b0:	6c 91       	ld	r22, X
    20b2:	40 91 2d 02 	lds	r20, 0x022D
    20b6:	20 91 2c 02 	lds	r18, 0x022C
    20ba:	0a e8       	ldi	r16, 0x8A	; 138
    20bc:	12 e0       	ldi	r17, 0x02	; 2
    20be:	0f 2e       	mov	r0, r31
    20c0:	fb e4       	ldi	r31, 0x4B	; 75
    20c2:	ef 2e       	mov	r14, r31
    20c4:	ff 24       	eor	r15, r15
    20c6:	f0 2d       	mov	r31, r0
    20c8:	0f 2e       	mov	r0, r31
    20ca:	f6 e0       	ldi	r31, 0x06	; 6
    20cc:	cf 2e       	mov	r12, r31
    20ce:	f0 2d       	mov	r31, r0
    20d0:	ad 2c       	mov	r10, r13
    20d2:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <_Z12Pololu_Wiperhhhhiihh>
			if ((Junction_Wiper==6)||(LidarDown_Flag==0))
    20d6:	80 91 5f 02 	lds	r24, 0x025F
    20da:	90 91 60 02 	lds	r25, 0x0260
    20de:	86 30       	cpi	r24, 0x06	; 6
    20e0:	91 05       	cpc	r25, r1
    20e2:	21 f0       	breq	.+8      	; 0x20ec <_Z26Gripping_Height_To_Max_Funv+0xe6>
    20e4:	80 91 0a 02 	lds	r24, 0x020A
    20e8:	88 23       	and	r24, r24
    20ea:	29 f4       	brne	.+10     	; 0x20f6 <_Z26Gripping_Height_To_Max_Funv+0xf0>
			{
				Height_Flag=0;
				Arm_Flag=1;
				Set_Value_Flag=1;
    20ec:	d0 92 27 02 	sts	0x0227, r13
		{
			Pololu_Wiper(Reverse,Junction_Wiper,Last_Wiper_Present_Count,Last_Wiper_Prevoius_Count,Wiper_Thershold,Wiper_Difference,6,Forward_Direction_Wiper);
			if ((Junction_Wiper==6)||(LidarDown_Flag==0))
			{
				Height_Flag=0;
				Arm_Flag=1;
    20f0:	dd 2d       	mov	r29, r13
		if (Height_Flag)
		{
			Pololu_Wiper(Reverse,Junction_Wiper,Last_Wiper_Present_Count,Last_Wiper_Prevoius_Count,Wiper_Thershold,Wiper_Difference,6,Forward_Direction_Wiper);
			if ((Junction_Wiper==6)||(LidarDown_Flag==0))
			{
				Height_Flag=0;
    20f2:	c0 e0       	ldi	r28, 0x00	; 0
    20f4:	02 c0       	rjmp	.+4      	; 0x20fa <_Z26Gripping_Height_To_Max_Funv+0xf4>
				Arm_Flag=1;
				Set_Value_Flag=1;
			}
		}
		
		if (Arm_Flag)
    20f6:	dd 23       	and	r29, r29
    20f8:	e1 f1       	breq	.+120    	; 0x2172 <_Z26Gripping_Height_To_Max_Funv+0x16c>
		{
			Pololu_Motor_B(Reverse,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_B_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,3,Downward_Direction_Motor_B);
    20fa:	80 e0       	ldi	r24, 0x00	; 0
    20fc:	f4 01       	movw	r30, r8
    20fe:	60 81       	ld	r22, Z
    2100:	40 91 29 02 	lds	r20, 0x0229
    2104:	20 91 28 02 	lds	r18, 0x0228
    2108:	0a e8       	ldi	r16, 0x8A	; 138
    210a:	12 e0       	ldi	r17, 0x02	; 2
    210c:	0f 2e       	mov	r0, r31
    210e:	fb e4       	ldi	r31, 0x4B	; 75
    2110:	ef 2e       	mov	r14, r31
    2112:	ff 24       	eor	r15, r15
    2114:	f0 2d       	mov	r31, r0
    2116:	0f 2e       	mov	r0, r31
    2118:	f3 e0       	ldi	r31, 0x03	; 3
    211a:	cf 2e       	mov	r12, r31
    211c:	f0 2d       	mov	r31, r0
    211e:	aa 24       	eor	r10, r10
    2120:	68 94       	set
    2122:	a1 f8       	bld	r10, 1
    2124:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <_Z14Pololu_Motor_Bhhhhiihh>
			if (Junction_Motor_B==3)
    2128:	80 91 6c 02 	lds	r24, 0x026C
    212c:	90 91 6d 02 	lds	r25, 0x026D
    2130:	83 30       	cpi	r24, 0x03	; 3
    2132:	91 05       	cpc	r25, r1
    2134:	f1 f4       	brne	.+60     	; 0x2172 <_Z26Gripping_Height_To_Max_Funv+0x16c>
			{
				Mot.Run(Motor_A,0);
    2136:	c2 01       	movw	r24, r4
    2138:	60 e0       	ldi	r22, 0x00	; 0
    213a:	70 e0       	ldi	r23, 0x00	; 0
    213c:	40 e0       	ldi	r20, 0x00	; 0
    213e:	50 e0       	ldi	r21, 0x00	; 0
    2140:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
				Mot.Run(Motor_B,0);
    2144:	c2 01       	movw	r24, r4
    2146:	61 e0       	ldi	r22, 0x01	; 1
    2148:	70 e0       	ldi	r23, 0x00	; 0
    214a:	40 e0       	ldi	r20, 0x00	; 0
    214c:	50 e0       	ldi	r21, 0x00	; 0
    214e:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
				Mot.Run(Wiper,0);
    2152:	c2 01       	movw	r24, r4
    2154:	62 e0       	ldi	r22, 0x02	; 2
    2156:	70 e0       	ldi	r23, 0x00	; 0
    2158:	40 e0       	ldi	r20, 0x00	; 0
    215a:	50 e0       	ldi	r21, 0x00	; 0
    215c:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
				LidarDown_PidCompute_Flag=0;
    2160:	10 92 0b 02 	sts	0x020B, r1
				Gripping_Height_To_Max=0;
    2164:	10 92 87 02 	sts	0x0287, r1
				LidarDown_Flag=0;
    2168:	10 92 0a 02 	sts	0x020A, r1
				Arm_Flag=0;
				Last_Lidar_Data_Send=1;
    216c:	d0 92 3e 02 	sts	0x023E, r13
				Mot.Run(Motor_B,0);
				Mot.Run(Wiper,0);
				LidarDown_PidCompute_Flag=0;
				Gripping_Height_To_Max=0;
				LidarDown_Flag=0;
				Arm_Flag=0;
    2170:	d0 e0       	ldi	r29, 0x00	; 0
				Last_Lidar_Data_Send=1;
			}
		}
		Lidar_Data_Calculate();
    2172:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <_Z20Lidar_Data_Calculatev>
	UART2Transmit('Y');
	_delay_ms(300);
	PORTH |= ((1<<PH3));
	LidarDown_Flag=1;
	Set_Value_Flag=1;
	while (Gripping_Height_To_Max)
    2176:	80 91 87 02 	lds	r24, 0x0287
    217a:	88 23       	and	r24, r24
    217c:	09 f0       	breq	.+2      	; 0x2180 <_Z26Gripping_Height_To_Max_Funv+0x17a>
    217e:	94 cf       	rjmp	.-216    	; 0x20a8 <_Z26Gripping_Height_To_Max_Funv+0xa2>
				Last_Lidar_Data_Send=1;
			}
		}
		Lidar_Data_Calculate();
	}	
}
    2180:	df 91       	pop	r29
    2182:	cf 91       	pop	r28
    2184:	1f 91       	pop	r17
    2186:	0f 91       	pop	r16
    2188:	ff 90       	pop	r15
    218a:	ef 90       	pop	r14
    218c:	df 90       	pop	r13
    218e:	cf 90       	pop	r12
    2190:	af 90       	pop	r10
    2192:	9f 90       	pop	r9
    2194:	8f 90       	pop	r8
    2196:	7f 90       	pop	r7
    2198:	6f 90       	pop	r6
    219a:	5f 90       	pop	r5
    219c:	4f 90       	pop	r4
    219e:	08 95       	ret

000021a0 <_Z29Reset_Height_To_Align_Eco_Funv>:
	}
	
}
//activity 4 case E
void Reset_Height_To_Align_Eco_Fun()
{ 
    21a0:	2f 92       	push	r2
    21a2:	3f 92       	push	r3
    21a4:	4f 92       	push	r4
    21a6:	5f 92       	push	r5
    21a8:	6f 92       	push	r6
    21aa:	7f 92       	push	r7
    21ac:	8f 92       	push	r8
    21ae:	9f 92       	push	r9
    21b0:	af 92       	push	r10
    21b2:	cf 92       	push	r12
    21b4:	ef 92       	push	r14
    21b6:	ff 92       	push	r15
    21b8:	0f 93       	push	r16
    21ba:	1f 93       	push	r17
    21bc:	cf 93       	push	r28
	unsigned char Down_Flag=0;
	if (LidarDown.Lidar_Down_Get_Data()>50)
    21be:	8c ea       	ldi	r24, 0xAC	; 172
    21c0:	92 e0       	ldi	r25, 0x02	; 2
    21c2:	0e 94 6d 13 	call	0x26da	; 0x26da <_ZN10Lidar_Down19Lidar_Down_Get_DataEv>
    21c6:	20 e0       	ldi	r18, 0x00	; 0
    21c8:	30 e0       	ldi	r19, 0x00	; 0
    21ca:	48 e4       	ldi	r20, 0x48	; 72
    21cc:	52 e4       	ldi	r21, 0x42	; 66
    21ce:	0e 94 28 1a 	call	0x3450	; 0x3450 <__gesf2>
    21d2:	18 16       	cp	r1, r24
    21d4:	0c f0       	brlt	.+2      	; 0x21d8 <_Z29Reset_Height_To_Align_Eco_Funv+0x38>
    21d6:	c2 c0       	rjmp	.+388    	; 0x235c <__stack+0x15d>
	{
		Junction_Wiper=0;
    21d8:	10 92 60 02 	sts	0x0260, r1
    21dc:	10 92 5f 02 	sts	0x025F, r1
		Last_Wiper_Present_Count=0;
    21e0:	10 92 2d 02 	sts	0x022D, r1
		Last_Wiper_Prevoius_Count=0;
    21e4:	10 92 2c 02 	sts	0x022C, r1
		Junction_Motor_A=0;
    21e8:	10 92 67 02 	sts	0x0267, r1
    21ec:	10 92 66 02 	sts	0x0266, r1
		Last_Motor_A_Present_Count=0;
    21f0:	10 92 2b 02 	sts	0x022B, r1
		Last_Motor_A_Prevoius_Count=0;
    21f4:	10 92 2a 02 	sts	0x022A, r1
		
		
		Duct_Angle=176;
    21f8:	80 eb       	ldi	r24, 0xB0	; 176
    21fa:	90 e0       	ldi	r25, 0x00	; 0
    21fc:	90 93 0e 02 	sts	0x020E, r25
    2200:	80 93 0d 02 	sts	0x020D, r24
		Servoo.Rotate_Duct_Servo(Duct_Angle);
    2204:	83 ec       	ldi	r24, 0xC3	; 195
    2206:	92 e0       	ldi	r25, 0x02	; 2
    2208:	40 e0       	ldi	r20, 0x00	; 0
    220a:	50 e0       	ldi	r21, 0x00	; 0
    220c:	60 e3       	ldi	r22, 0x30	; 48
    220e:	73 e4       	ldi	r23, 0x43	; 67
    2210:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <_ZN5Servo17Rotate_Duct_ServoEf>
		Duct_Speed=0;
    2214:	10 92 5b 02 	sts	0x025B, r1
    2218:	10 92 5a 02 	sts	0x025A, r1
		Duct.run(Duct_Speed);
    221c:	8f eb       	ldi	r24, 0xBF	; 191
    221e:	92 e0       	ldi	r25, 0x02	; 2
    2220:	40 e0       	ldi	r20, 0x00	; 0
    2222:	50 e0       	ldi	r21, 0x00	; 0
    2224:	ba 01       	movw	r22, r20
    2226:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7Ductfan3runEf>
		Duct_Stop_Flag=1;
    222a:	81 e0       	ldi	r24, 0x01	; 1
    222c:	80 93 11 02 	sts	0x0211, r24
		Duct_Constant_Flag=0;
    2230:	10 92 59 02 	sts	0x0259, r1
		LidarDown_Flag=1;
    2234:	80 93 0a 02 	sts	0x020A, r24
		Set_Value_Flag=1;
    2238:	80 93 27 02 	sts	0x0227, r24
	
}
//activity 4 case E
void Reset_Height_To_Align_Eco_Fun()
{ 
	unsigned char Down_Flag=0;
    223c:	c0 e0       	ldi	r28, 0x00	; 0
		Duct_Constant_Flag=0;
		LidarDown_Flag=1;
		Set_Value_Flag=1;
		while (Reset_Height_To_Align_Eco)
		{
			Pololu_Wiper(Forward,Junction_Wiper,Last_Wiper_Present_Count,Last_Wiper_Prevoius_Count,Wiper_Thershold,Wiper_Difference,4,Forward_Direction_Wiper);
    223e:	0f 2e       	mov	r0, r31
    2240:	ff e5       	ldi	r31, 0x5F	; 95
    2242:	8f 2e       	mov	r8, r31
    2244:	f2 e0       	ldi	r31, 0x02	; 2
    2246:	9f 2e       	mov	r9, r31
    2248:	f0 2d       	mov	r31, r0
				Down_Flag=1;
				Set_Value_Flag=1;
			}
			if (Down_Flag)
			{
				Pololu_Motor_B(Reverse,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_B_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,4,Downward_Direction_Motor_B);				
    224a:	0f 2e       	mov	r0, r31
    224c:	fc e6       	ldi	r31, 0x6C	; 108
    224e:	6f 2e       	mov	r6, r31
    2250:	f2 e0       	ldi	r31, 0x02	; 2
    2252:	7f 2e       	mov	r7, r31
    2254:	f0 2d       	mov	r31, r0
				if (Junction_Motor_B==4)
				{
					Mot.Run(Motor_B,0);
    2256:	0f 2e       	mov	r0, r31
    2258:	fb ec       	ldi	r31, 0xCB	; 203
    225a:	4f 2e       	mov	r4, r31
    225c:	f2 e0       	ldi	r31, 0x02	; 2
    225e:	5f 2e       	mov	r5, r31
    2260:	f0 2d       	mov	r31, r0
					Mot.Run(Wiper,0);
					Reset_Height_To_Align_Eco=0;
					Gripper_Angle=80;
					PORTH &=~ (1<<PH3);
    2262:	0f 2e       	mov	r0, r31
    2264:	f2 e0       	ldi	r31, 0x02	; 2
    2266:	2f 2e       	mov	r2, r31
    2268:	f1 e0       	ldi	r31, 0x01	; 1
    226a:	3f 2e       	mov	r3, r31
    226c:	f0 2d       	mov	r31, r0
		Duct.run(Duct_Speed);
		Duct_Stop_Flag=1;
		Duct_Constant_Flag=0;
		LidarDown_Flag=1;
		Set_Value_Flag=1;
		while (Reset_Height_To_Align_Eco)
    226e:	71 c0       	rjmp	.+226    	; 0x2352 <__stack+0x153>
		{
			Pololu_Wiper(Forward,Junction_Wiper,Last_Wiper_Present_Count,Last_Wiper_Prevoius_Count,Wiper_Thershold,Wiper_Difference,4,Forward_Direction_Wiper);
    2270:	81 e0       	ldi	r24, 0x01	; 1
    2272:	f4 01       	movw	r30, r8
    2274:	60 81       	ld	r22, Z
    2276:	40 91 2d 02 	lds	r20, 0x022D
    227a:	20 91 2c 02 	lds	r18, 0x022C
    227e:	0a e8       	ldi	r16, 0x8A	; 138
    2280:	12 e0       	ldi	r17, 0x02	; 2
    2282:	0f 2e       	mov	r0, r31
    2284:	fb e4       	ldi	r31, 0x4B	; 75
    2286:	ef 2e       	mov	r14, r31
    2288:	ff 24       	eor	r15, r15
    228a:	f0 2d       	mov	r31, r0
    228c:	cc 24       	eor	r12, r12
    228e:	68 94       	set
    2290:	c2 f8       	bld	r12, 2
    2292:	aa 24       	eor	r10, r10
    2294:	a3 94       	inc	r10
    2296:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <_Z12Pololu_Wiperhhhhiihh>
			if (Junction_Wiper==4)
    229a:	80 91 5f 02 	lds	r24, 0x025F
    229e:	90 91 60 02 	lds	r25, 0x0260
    22a2:	84 30       	cpi	r24, 0x04	; 4
    22a4:	91 05       	cpc	r25, r1
    22a6:	61 f4       	brne	.+24     	; 0x22c0 <__stack+0xc1>
			{
				Mot.Run(Wiper,0);							
    22a8:	c2 01       	movw	r24, r4
    22aa:	62 e0       	ldi	r22, 0x02	; 2
    22ac:	70 e0       	ldi	r23, 0x00	; 0
    22ae:	40 e0       	ldi	r20, 0x00	; 0
    22b0:	50 e0       	ldi	r21, 0x00	; 0
    22b2:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
				Down_Flag=1;
				Set_Value_Flag=1;
    22b6:	81 e0       	ldi	r24, 0x01	; 1
    22b8:	80 93 27 02 	sts	0x0227, r24
		{
			Pololu_Wiper(Forward,Junction_Wiper,Last_Wiper_Present_Count,Last_Wiper_Prevoius_Count,Wiper_Thershold,Wiper_Difference,4,Forward_Direction_Wiper);
			if (Junction_Wiper==4)
			{
				Mot.Run(Wiper,0);							
				Down_Flag=1;
    22bc:	c1 e0       	ldi	r28, 0x01	; 1
    22be:	03 c0       	rjmp	.+6      	; 0x22c6 <__stack+0xc7>
				Set_Value_Flag=1;
			}
			if (Down_Flag)
    22c0:	cc 23       	and	r28, r28
    22c2:	09 f4       	brne	.+2      	; 0x22c6 <__stack+0xc7>
    22c4:	46 c0       	rjmp	.+140    	; 0x2352 <__stack+0x153>
			{
				Pololu_Motor_B(Reverse,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_B_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,4,Downward_Direction_Motor_B);				
    22c6:	80 e0       	ldi	r24, 0x00	; 0
    22c8:	f3 01       	movw	r30, r6
    22ca:	60 81       	ld	r22, Z
    22cc:	40 91 29 02 	lds	r20, 0x0229
    22d0:	20 91 28 02 	lds	r18, 0x0228
    22d4:	0a e8       	ldi	r16, 0x8A	; 138
    22d6:	12 e0       	ldi	r17, 0x02	; 2
    22d8:	0f 2e       	mov	r0, r31
    22da:	fb e4       	ldi	r31, 0x4B	; 75
    22dc:	ef 2e       	mov	r14, r31
    22de:	ff 24       	eor	r15, r15
    22e0:	f0 2d       	mov	r31, r0
    22e2:	cc 24       	eor	r12, r12
    22e4:	68 94       	set
    22e6:	c2 f8       	bld	r12, 2
    22e8:	aa 24       	eor	r10, r10
    22ea:	68 94       	set
    22ec:	a1 f8       	bld	r10, 1
    22ee:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <_Z14Pololu_Motor_Bhhhhiihh>
				if (Junction_Motor_B==4)
    22f2:	80 91 6c 02 	lds	r24, 0x026C
    22f6:	90 91 6d 02 	lds	r25, 0x026D
    22fa:	84 30       	cpi	r24, 0x04	; 4
    22fc:	91 05       	cpc	r25, r1
    22fe:	49 f5       	brne	.+82     	; 0x2352 <__stack+0x153>
				{
					Mot.Run(Motor_B,0);
    2300:	c2 01       	movw	r24, r4
    2302:	61 e0       	ldi	r22, 0x01	; 1
    2304:	70 e0       	ldi	r23, 0x00	; 0
    2306:	40 e0       	ldi	r20, 0x00	; 0
    2308:	50 e0       	ldi	r21, 0x00	; 0
    230a:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
					Mot.Run(Wiper,0);
    230e:	c2 01       	movw	r24, r4
    2310:	62 e0       	ldi	r22, 0x02	; 2
    2312:	70 e0       	ldi	r23, 0x00	; 0
    2314:	40 e0       	ldi	r20, 0x00	; 0
    2316:	50 e0       	ldi	r21, 0x00	; 0
    2318:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
					Reset_Height_To_Align_Eco=0;
    231c:	10 92 88 02 	sts	0x0288, r1
					Gripper_Angle=80;
    2320:	80 e5       	ldi	r24, 0x50	; 80
    2322:	90 e0       	ldi	r25, 0x00	; 0
    2324:	90 93 10 02 	sts	0x0210, r25
    2328:	80 93 0f 02 	sts	0x020F, r24
					PORTH &=~ (1<<PH3);
    232c:	f1 01       	movw	r30, r2
    232e:	80 81       	ld	r24, Z
    2330:	87 7f       	andi	r24, 0xF7	; 247
    2332:	80 83       	st	Z, r24
					Servoo.Rotate_Gripper_Servo(Gripper_Angle);
    2334:	83 ec       	ldi	r24, 0xC3	; 195
    2336:	92 e0       	ldi	r25, 0x02	; 2
    2338:	40 e0       	ldi	r20, 0x00	; 0
    233a:	50 e0       	ldi	r21, 0x00	; 0
    233c:	60 ea       	ldi	r22, 0xA0	; 160
    233e:	72 e4       	ldi	r23, 0x42	; 66
    2340:	0e 94 06 17 	call	0x2e0c	; 0x2e0c <_ZN5Servo20Rotate_Gripper_ServoEf>
					Gripper_Position_Manage=1;
    2344:	81 e0       	ldi	r24, 0x01	; 1
    2346:	80 93 3f 02 	sts	0x023F, r24
					Set_Value_Flag=1;
    234a:	80 93 27 02 	sts	0x0227, r24
					LidarDown_PidCompute_Flag=0;
    234e:	10 92 0b 02 	sts	0x020B, r1
		Duct.run(Duct_Speed);
		Duct_Stop_Flag=1;
		Duct_Constant_Flag=0;
		LidarDown_Flag=1;
		Set_Value_Flag=1;
		while (Reset_Height_To_Align_Eco)
    2352:	80 91 88 02 	lds	r24, 0x0288
    2356:	88 23       	and	r24, r24
    2358:	09 f0       	breq	.+2      	; 0x235c <__stack+0x15d>
    235a:	8a cf       	rjmp	.-236    	; 0x2270 <__stack+0x71>
				}
			}
			
		}
	}
}
    235c:	cf 91       	pop	r28
    235e:	1f 91       	pop	r17
    2360:	0f 91       	pop	r16
    2362:	ff 90       	pop	r15
    2364:	ef 90       	pop	r14
    2366:	cf 90       	pop	r12
    2368:	af 90       	pop	r10
    236a:	9f 90       	pop	r9
    236c:	8f 90       	pop	r8
    236e:	7f 90       	pop	r7
    2370:	6f 90       	pop	r6
    2372:	5f 90       	pop	r5
    2374:	4f 90       	pop	r4
    2376:	3f 90       	pop	r3
    2378:	2f 90       	pop	r2
    237a:	08 95       	ret

0000237c <_Z15Arm_Manage_Hillv>:
		}
	}
}

void Arm_Manage_Hill()
{
    237c:	af 92       	push	r10
    237e:	cf 92       	push	r12
    2380:	ef 92       	push	r14
    2382:	ff 92       	push	r15
    2384:	0f 93       	push	r16
    2386:	1f 93       	push	r17
	Pololu_Motor_B(Reverse,Junction_Motor_B,Last_Motor_B_Present_Count,Last_Motor_B_Prevoius_Count,Motor_B_Thershold,Motor_B_Difference,5,Downward_Direction_Motor_B);
    2388:	80 e0       	ldi	r24, 0x00	; 0
    238a:	60 91 6c 02 	lds	r22, 0x026C
    238e:	40 91 29 02 	lds	r20, 0x0229
    2392:	20 91 28 02 	lds	r18, 0x0228
    2396:	0a e8       	ldi	r16, 0x8A	; 138
    2398:	12 e0       	ldi	r17, 0x02	; 2
    239a:	0f 2e       	mov	r0, r31
    239c:	fb e4       	ldi	r31, 0x4B	; 75
    239e:	ef 2e       	mov	r14, r31
    23a0:	ff 24       	eor	r15, r15
    23a2:	f0 2d       	mov	r31, r0
    23a4:	0f 2e       	mov	r0, r31
    23a6:	f5 e0       	ldi	r31, 0x05	; 5
    23a8:	cf 2e       	mov	r12, r31
    23aa:	f0 2d       	mov	r31, r0
    23ac:	aa 24       	eor	r10, r10
    23ae:	68 94       	set
    23b0:	a1 f8       	bld	r10, 1
    23b2:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <_Z14Pololu_Motor_Bhhhhiihh>
	 if (Junction_Motor_B==5)
    23b6:	80 91 6c 02 	lds	r24, 0x026C
    23ba:	90 91 6d 02 	lds	r25, 0x026D
    23be:	85 30       	cpi	r24, 0x05	; 5
    23c0:	91 05       	cpc	r25, r1
    23c2:	51 f4       	brne	.+20     	; 0x23d8 <_Z15Arm_Manage_Hillv+0x5c>
	 {
		 Mot.Run(Motor_B,0);
    23c4:	8b ec       	ldi	r24, 0xCB	; 203
    23c6:	92 e0       	ldi	r25, 0x02	; 2
    23c8:	61 e0       	ldi	r22, 0x01	; 1
    23ca:	70 e0       	ldi	r23, 0x00	; 0
    23cc:	40 e0       	ldi	r20, 0x00	; 0
    23ce:	50 e0       	ldi	r21, 0x00	; 0
    23d0:	0e 94 29 15 	call	0x2a52	; 0x2a52 <_ZN5Motor3RunEjj>
		 Reverse_Flag=0;
    23d4:	10 92 72 02 	sts	0x0272, r1
	 }
}
    23d8:	1f 91       	pop	r17
    23da:	0f 91       	pop	r16
    23dc:	ff 90       	pop	r15
    23de:	ef 90       	pop	r14
    23e0:	cf 90       	pop	r12
    23e2:	af 90       	pop	r10
    23e4:	08 95       	ret

000023e6 <_Z11Init_Timer4v>:
	Last_Motor_B_Prevoius_Count=Pololu_Previous_Motor_B;
}

void Init_Timer4()
{
	TCCR4B |= ((1<<WGM42)|(1<<CS42)|(1<<CS40));
    23e6:	e1 ea       	ldi	r30, 0xA1	; 161
    23e8:	f0 e0       	ldi	r31, 0x00	; 0
    23ea:	80 81       	ld	r24, Z
    23ec:	8d 60       	ori	r24, 0x0D	; 13
    23ee:	80 83       	st	Z, r24
	TIMSK4 |= (1<<OCIE4A);
    23f0:	e2 e7       	ldi	r30, 0x72	; 114
    23f2:	f0 e0       	ldi	r31, 0x00	; 0
    23f4:	80 81       	ld	r24, Z
    23f6:	82 60       	ori	r24, 0x02	; 2
    23f8:	80 83       	st	Z, r24
	TIFR4 |= (1<<OCF4A);
    23fa:	c9 9a       	sbi	0x19, 1	; 25
	OCR4A = 388;
    23fc:	84 e8       	ldi	r24, 0x84	; 132
    23fe:	91 e0       	ldi	r25, 0x01	; 1
    2400:	90 93 a9 00 	sts	0x00A9, r25
    2404:	80 93 a8 00 	sts	0x00A8, r24
	TCNT4=0;
    2408:	10 92 a5 00 	sts	0x00A5, r1
    240c:	10 92 a4 00 	sts	0x00A4, r1
}
    2410:	08 95       	ret

00002412 <_Z23Initilization_All_Valuev>:
	PCICR |= (1<<PCIE2);
	PCMSK2 |= ((1<<PCINT22)|(1<<PCINT23));
}
//initilization of all function
void Initilization_All_Value()
{
    2412:	af 92       	push	r10
    2414:	bf 92       	push	r11
    2416:	cf 92       	push	r12
    2418:	df 92       	push	r13
    241a:	ef 92       	push	r14
    241c:	ff 92       	push	r15
    241e:	0f 93       	push	r16
    2420:	1f 93       	push	r17
    2422:	cf 93       	push	r28
    2424:	df 93       	push	r29
	DDRH |= ((1<<PH3));
    2426:	e1 e0       	ldi	r30, 0x01	; 1
    2428:	f1 e0       	ldi	r31, 0x01	; 1
    242a:	80 81       	ld	r24, Z
    242c:	88 60       	ori	r24, 0x08	; 8
    242e:	80 83       	st	Z, r24
	PORTH &=~ ((1<<PH3));
    2430:	e2 e0       	ldi	r30, 0x02	; 2
    2432:	f1 e0       	ldi	r31, 0x01	; 1
    2434:	80 81       	ld	r24, Z
    2436:	87 7f       	andi	r24, 0xF7	; 247
    2438:	80 83       	st	Z, r24
	initUART1();
    243a:	0e 94 57 17 	call	0x2eae	; 0x2eae <_Z9initUART1v>
	initUART2();
    243e:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <_Z9initUART2v>
	LidarDown.Init_Lidar_Down();
    2442:	8c ea       	ldi	r24, 0xAC	; 172
    2444:	92 e0       	ldi	r25, 0x02	; 2
    2446:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <_ZN10Lidar_Down15Init_Lidar_DownEv>
	LidarUp.Init_Lidar_Up();
    244a:	8b ea       	ldi	r24, 0xAB	; 171
    244c:	92 e0       	ldi	r25, 0x02	; 2
    244e:	0e 94 36 14 	call	0x286c	; 0x286c <_ZN8Lidar_Up13Init_Lidar_UpEv>
	Init_Limit_Switch();
    2452:	0e 94 6d 02 	call	0x4da	; 0x4da <_Z17Init_Limit_Switchv>
	Init_Timer4();
    2456:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <_Z11Init_Timer4v>
	pololu.ADC_Init();
    245a:	8d ea       	ldi	r24, 0xAD	; 173
    245c:	92 e0       	ldi	r25, 0x02	; 2
    245e:	0e 94 af 00 	call	0x15e	; 0x15e <_ZN6Analog8ADC_InitEv>
	Mot.Initialize();
    2462:	8b ec       	ldi	r24, 0xCB	; 203
    2464:	92 e0       	ldi	r25, 0x02	; 2
    2466:	0e 94 ef 14 	call	0x29de	; 0x29de <_ZN5Motor10InitializeEv>
	Servoo.Initialize();
    246a:	0f 2e       	mov	r0, r31
    246c:	f3 ec       	ldi	r31, 0xC3	; 195
    246e:	af 2e       	mov	r10, r31
    2470:	f2 e0       	ldi	r31, 0x02	; 2
    2472:	bf 2e       	mov	r11, r31
    2474:	f0 2d       	mov	r31, r0
    2476:	c5 01       	movw	r24, r10
    2478:	0e 94 95 16 	call	0x2d2a	; 0x2d2a <_ZN5Servo10InitializeEv>
	Duct.Initialize();
    247c:	8f eb       	ldi	r24, 0xBF	; 191
    247e:	92 e0       	ldi	r25, 0x02	; 2
    2480:	0e 94 70 01 	call	0x2e0	; 0x2e0 <_ZN7Ductfan10InitializeEv>
	LidarDownPid.Initialize();
    2484:	cb e8       	ldi	r28, 0x8B	; 139
    2486:	d2 e0       	ldi	r29, 0x02	; 2
    2488:	ce 01       	movw	r24, r28
    248a:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <_ZN3PID10InitializeEv>
	
	public:
			float lasterror;
			float offset;
			void Initialize();
			void Set_Range(float min,float max){minOut=min;maxOut=max;}
    248e:	80 e0       	ldi	r24, 0x00	; 0
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	a1 ee       	ldi	r26, 0xE1	; 225
    2494:	b4 ec       	ldi	r27, 0xC4	; 196
    2496:	80 93 9f 02 	sts	0x029F, r24
    249a:	90 93 a0 02 	sts	0x02A0, r25
    249e:	a0 93 a1 02 	sts	0x02A1, r26
    24a2:	b0 93 a2 02 	sts	0x02A2, r27
    24a6:	80 e0       	ldi	r24, 0x00	; 0
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	a1 ee       	ldi	r26, 0xE1	; 225
    24ac:	b4 e4       	ldi	r27, 0x44	; 68
    24ae:	80 93 9b 02 	sts	0x029B, r24
    24b2:	90 93 9c 02 	sts	0x029C, r25
    24b6:	a0 93 9d 02 	sts	0x029D, r26
    24ba:	b0 93 9e 02 	sts	0x029E, r27
	LidarDownPid.Set_Range(Min_Motor_Speed,Max_Motor_Speed);
	LidarDownPid.Set_PID(KP,KI,KD);
    24be:	40 91 20 02 	lds	r20, 0x0220
    24c2:	50 91 21 02 	lds	r21, 0x0221
    24c6:	60 91 22 02 	lds	r22, 0x0222
    24ca:	70 91 23 02 	lds	r23, 0x0223
    24ce:	00 91 74 02 	lds	r16, 0x0274
    24d2:	10 91 75 02 	lds	r17, 0x0275
    24d6:	20 91 76 02 	lds	r18, 0x0276
    24da:	30 91 77 02 	lds	r19, 0x0277
    24de:	c0 90 78 02 	lds	r12, 0x0278
    24e2:	d0 90 79 02 	lds	r13, 0x0279
    24e6:	e0 90 7a 02 	lds	r14, 0x027A
    24ea:	f0 90 7b 02 	lds	r15, 0x027B
    24ee:	ce 01       	movw	r24, r28
    24f0:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN3PID7Set_PIDEfff>
	LidarDownPid.offset=0;
    24f4:	80 e0       	ldi	r24, 0x00	; 0
    24f6:	90 e0       	ldi	r25, 0x00	; 0
    24f8:	dc 01       	movw	r26, r24
    24fa:	80 93 a7 02 	sts	0x02A7, r24
    24fe:	90 93 a8 02 	sts	0x02A8, r25
    2502:	a0 93 a9 02 	sts	0x02A9, r26
    2506:	b0 93 aa 02 	sts	0x02AA, r27
	Servoo.Set_Range_Duct_Servo(Servo_Duct_Min,Servo_Duct_Max);
    250a:	60 91 1b 02 	lds	r22, 0x021B
    250e:	70 91 1c 02 	lds	r23, 0x021C
    2512:	40 91 19 02 	lds	r20, 0x0219
    2516:	50 91 1a 02 	lds	r21, 0x021A
    251a:	c5 01       	movw	r24, r10
    251c:	0e 94 b5 16 	call	0x2d6a	; 0x2d6a <_ZN5Servo20Set_Range_Duct_ServoEjj>
	Servoo.Set_Range_Gripper_Servo(Servo_Gripper_Min,Servo_Gripper_Max);
    2520:	60 91 17 02 	lds	r22, 0x0217
    2524:	70 91 18 02 	lds	r23, 0x0218
    2528:	40 91 15 02 	lds	r20, 0x0215
    252c:	50 91 16 02 	lds	r21, 0x0216
    2530:	c5 01       	movw	r24, r10
    2532:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <_ZN5Servo23Set_Range_Gripper_ServoEjj>
}
    2536:	df 91       	pop	r29
    2538:	cf 91       	pop	r28
    253a:	1f 91       	pop	r17
    253c:	0f 91       	pop	r16
    253e:	ff 90       	pop	r15
    2540:	ef 90       	pop	r14
    2542:	df 90       	pop	r13
    2544:	cf 90       	pop	r12
    2546:	bf 90       	pop	r11
    2548:	af 90       	pop	r10
    254a:	08 95       	ret

0000254c <main>:
unsigned char Set_Value_Flag=0;
unsigned char wiper_up_Flag=0;

int main(void)
{
	Initilization_All_Value();
    254c:	0e 94 09 12 	call	0x2412	; 0x2412 <_Z23Initilization_All_Valuev>
	sei();	
    2550:	78 94       	sei
	Reset_Position();
    2552:	0e 94 82 02 	call	0x504	; 0x504 <_Z14Reset_Positionv>
	Duct.calibrate();
    2556:	8f eb       	ldi	r24, 0xBF	; 191
    2558:	92 e0       	ldi	r25, 0x02	; 2
    255a:	0e 94 c6 01 	call	0x38c	; 0x38c <_ZN7Ductfan9calibrateEv>
	LidarDown_Height();
    255e:	0e 94 0c 04 	call	0x818	; 0x818 <_Z16LidarDown_Heightv>
	Wait_For_Start();		
    2562:	0e 94 9b 02 	call	0x536	; 0x536 <_Z14Wait_For_Startv>
			
   while(1)
   {
	   if (Main_Flag)
    2566:	80 91 46 02 	lds	r24, 0x0246
    256a:	88 23       	and	r24, r24
    256c:	09 f4       	brne	.+2      	; 0x2570 <main+0x24>
    256e:	46 c0       	rjmp	.+140    	; 0x25fc <main+0xb0>
	   {
		   LidarDown_PidCompute();	   
    2570:	0e 94 00 03 	call	0x600	; 0x600 <_Z20LidarDown_PidComputev>
		   if (Arm_Extend_Height_Manage )
    2574:	80 91 8a 02 	lds	r24, 0x028A
    2578:	88 23       	and	r24, r24
    257a:	11 f0       	breq	.+4      	; 0x2580 <main+0x34>
		   {
			   Arm_Extend_Height_Manage_Fun();
    257c:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <_Z28Arm_Extend_Height_Manage_Funv>
		   }
		   if (River_Push)
    2580:	80 91 89 02 	lds	r24, 0x0289
    2584:	88 23       	and	r24, r24
    2586:	11 f0       	breq	.+4      	; 0x258c <main+0x40>
		   {
			   River_Push_Fun();
    2588:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <_Z14River_Push_Funv>
		   }
		   if (Reset_Height_To_Align_Eco)
    258c:	80 91 88 02 	lds	r24, 0x0288
    2590:	88 23       	and	r24, r24
    2592:	11 f0       	breq	.+4      	; 0x2598 <main+0x4c>
		   {
			   Reset_Height_To_Align_Eco_Fun();
    2594:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <_Z29Reset_Height_To_Align_Eco_Funv>
		   }
		   if (Gripping_Height_To_Max)
    2598:	80 91 87 02 	lds	r24, 0x0287
    259c:	88 23       	and	r24, r24
    259e:	11 f0       	breq	.+4      	; 0x25a4 <main+0x58>
		   {
			   Gripping_Height_To_Max_Fun();
    25a0:	0e 94 03 10 	call	0x2006	; 0x2006 <_Z26Gripping_Height_To_Max_Funv>
		   }
		   if (Putting_Propeller)
    25a4:	80 91 86 02 	lds	r24, 0x0286
    25a8:	88 23       	and	r24, r24
    25aa:	11 f0       	breq	.+4      	; 0x25b0 <main+0x64>
		   {
			   Putting_Propeller_Fun();
    25ac:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_Z21Putting_Propeller_Funv>
		   }
		   if (!Duct_Stop_Flag)
    25b0:	80 91 11 02 	lds	r24, 0x0211
    25b4:	88 23       	and	r24, r24
    25b6:	11 f4       	brne	.+4      	; 0x25bc <main+0x70>
		   {
			   Push_Eco();
    25b8:	0e 94 d5 09 	call	0x13aa	; 0x13aa <_Z8Push_Ecov>
		   }
	   
		   if (Gripper_Position_Manage)
    25bc:	80 91 3f 02 	lds	r24, 0x023F
    25c0:	88 23       	and	r24, r24
    25c2:	11 f0       	breq	.+4      	; 0x25c8 <main+0x7c>
		   {
			   Gripper_Position();
    25c4:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <_Z16Gripper_Positionv>
		   }
	   
		   if (Reverse_Flag)
    25c8:	80 91 72 02 	lds	r24, 0x0272
    25cc:	88 23       	and	r24, r24
    25ce:	11 f0       	breq	.+4      	; 0x25d4 <main+0x88>
		   {
				Arm_Manage_Hill();  
    25d0:	0e 94 be 11 	call	0x237c	; 0x237c <_Z15Arm_Manage_Hillv>
	   
		   if (Last_Height_Down)
		   {
				//Pololu_Wiper_Height_Manage_D_Last();   
		   }
		   if (Last_Lidar_Data_Send)
    25d4:	80 91 3e 02 	lds	r24, 0x023E
    25d8:	88 23       	and	r24, r24
    25da:	11 f0       	breq	.+4      	; 0x25e0 <main+0x94>
		   {
			   Lidar_Data_Calculate();
    25dc:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <_Z20Lidar_Data_Calculatev>
		   }
		   if (Restart_Flag_First)
    25e0:	80 91 3d 02 	lds	r24, 0x023D
    25e4:	88 23       	and	r24, r24
    25e6:	11 f0       	breq	.+4      	; 0x25ec <main+0xa0>
		   {
			   Restart_First_Fun();
    25e8:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <_Z17Restart_First_Funv>
		   }
		   if (Restart_Flag_Second)
    25ec:	80 91 3c 02 	lds	r24, 0x023C
    25f0:	88 23       	and	r24, r24
    25f2:	11 f0       	breq	.+4      	; 0x25f8 <main+0xac>
		   {
			   Restart_Second_Fun();
    25f4:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <_Z18Restart_Second_Funv>
		   }
		   Uart_Check2();
    25f8:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <_Z11Uart_Check2v>
	   }	
	   if (Check_List)
    25fc:	80 91 47 02 	lds	r24, 0x0247
    2600:	88 23       	and	r24, r24
    2602:	09 f4       	brne	.+2      	; 0x2606 <main+0xba>
    2604:	b0 cf       	rjmp	.-160    	; 0x2566 <main+0x1a>
	   {
		   Uart_Check1();
    2606:	0e 94 52 04 	call	0x8a4	; 0x8a4 <_Z11Uart_Check1v>
    260a:	ad cf       	rjmp	.-166    	; 0x2566 <main+0x1a>

0000260c <__vector_11>:
	OCR4A = 388;
	TCNT4=0;
}
	
ISR (PCINT2_vect)
{
    260c:	1f 92       	push	r1
    260e:	0f 92       	push	r0
    2610:	0f b6       	in	r0, 0x3f	; 63
    2612:	0f 92       	push	r0
    2614:	11 24       	eor	r1, r1
    2616:	8f 93       	push	r24
	if((PINK&(1<<PK6))&&(PINK&(1<<PK7)))
    2618:	80 91 06 01 	lds	r24, 0x0106
    261c:	86 ff       	sbrs	r24, 6
    261e:	0f c0       	rjmp	.+30     	; 0x263e <__vector_11+0x32>
    2620:	80 91 06 01 	lds	r24, 0x0106
    2624:	88 23       	and	r24, r24
    2626:	5c f4       	brge	.+22     	; 0x263e <__vector_11+0x32>
	{
		LidarDown_Flag=1;
    2628:	81 e0       	ldi	r24, 0x01	; 1
    262a:	80 93 0a 02 	sts	0x020A, r24
    262e:	0c c0       	rjmp	.+24     	; 0x2648 <__vector_11+0x3c>
	}
	else if((!(PINK&(1<<PK6)))||(!(PINK&(1<<PK7))))
    2630:	80 91 06 01 	lds	r24, 0x0106
    2634:	88 23       	and	r24, r24
    2636:	44 f0       	brlt	.+16     	; 0x2648 <__vector_11+0x3c>
	{
		LidarDown_Flag=0;
    2638:	10 92 0a 02 	sts	0x020A, r1
    263c:	05 c0       	rjmp	.+10     	; 0x2648 <__vector_11+0x3c>
{
	if((PINK&(1<<PK6))&&(PINK&(1<<PK7)))
	{
		LidarDown_Flag=1;
	}
	else if((!(PINK&(1<<PK6)))||(!(PINK&(1<<PK7))))
    263e:	80 91 06 01 	lds	r24, 0x0106
    2642:	86 ff       	sbrs	r24, 6
    2644:	f9 cf       	rjmp	.-14     	; 0x2638 <__vector_11+0x2c>
    2646:	f4 cf       	rjmp	.-24     	; 0x2630 <__vector_11+0x24>
	{
		LidarDown_Flag=0;
	}
}
    2648:	8f 91       	pop	r24
    264a:	0f 90       	pop	r0
    264c:	0f be       	out	0x3f, r0	; 63
    264e:	0f 90       	pop	r0
    2650:	1f 90       	pop	r1
    2652:	18 95       	reti

00002654 <__vector_42>:

ISR (TIMER4_COMPA_vect)
{
    2654:	1f 92       	push	r1
    2656:	0f 92       	push	r0
    2658:	0f b6       	in	r0, 0x3f	; 63
    265a:	0f 92       	push	r0
    265c:	11 24       	eor	r1, r1
    265e:	8f 93       	push	r24
	pidflag=1;
    2660:	81 e0       	ldi	r24, 0x01	; 1
    2662:	80 93 83 02 	sts	0x0283, r24
	Rampflag=1;
    2666:	80 93 73 02 	sts	0x0273, r24
	if (Timer_Start_Flag)
    266a:	80 91 85 02 	lds	r24, 0x0285
    266e:	88 23       	and	r24, r24
    2670:	29 f0       	breq	.+10     	; 0x267c <__vector_42+0x28>
	{
		River_Timer_Count++;
    2672:	80 91 84 02 	lds	r24, 0x0284
    2676:	8f 5f       	subi	r24, 0xFF	; 255
    2678:	80 93 84 02 	sts	0x0284, r24
	}
	if (Timer_Start_Flag && River_Check)
    267c:	80 91 85 02 	lds	r24, 0x0285
    2680:	88 23       	and	r24, r24
    2682:	69 f0       	breq	.+26     	; 0x269e <__vector_42+0x4a>
    2684:	80 91 5d 02 	lds	r24, 0x025D
    2688:	88 23       	and	r24, r24
    268a:	49 f0       	breq	.+18     	; 0x269e <__vector_42+0x4a>
	{
		if(River_Timer_Count>=240)
    268c:	80 91 84 02 	lds	r24, 0x0284
    2690:	80 3f       	cpi	r24, 0xF0	; 240
    2692:	28 f0       	brcs	.+10     	; 0x269e <__vector_42+0x4a>
		{
			River_Push_Control=1;
    2694:	81 e0       	ldi	r24, 0x01	; 1
    2696:	80 93 5c 02 	sts	0x025C, r24
			River_Timer_Count=0;
    269a:	10 92 84 02 	sts	0x0284, r1
		}
	}
    269e:	8f 91       	pop	r24
    26a0:	0f 90       	pop	r0
    26a2:	0f be       	out	0x3f, r0	; 63
    26a4:	0f 90       	pop	r0
    26a6:	1f 90       	pop	r1
    26a8:	18 95       	reti

000026aa <_ZN10Lidar_Down11Init_timer0Ev>:
volatile uint8_t timeoutFlagDown=0;
float timeDataDown=0;

void Lidar_Down::Init_timer0()
{
	TIMSK0 |= (1<<TOIE0);
    26aa:	ee e6       	ldi	r30, 0x6E	; 110
    26ac:	f0 e0       	ldi	r31, 0x00	; 0
    26ae:	80 81       	ld	r24, Z
    26b0:	81 60       	ori	r24, 0x01	; 1
    26b2:	80 83       	st	Z, r24
	TCNT0=0;
    26b4:	16 bc       	out	0x26, r1	; 38
}
    26b6:	08 95       	ret

000026b8 <_ZN10Lidar_Down15Init_Lidar_DownEv>:

void Lidar_Down::Init_Lidar_Down()
{
	Init_timer0();
    26b8:	0e 94 55 13 	call	0x26aa	; 0x26aa <_ZN10Lidar_Down11Init_timer0Ev>
	Trigger_DDR |= (1<<Trigger_PIN);				//trigger pin as output
    26bc:	e1 e0       	ldi	r30, 0x01	; 1
    26be:	f1 e0       	ldi	r31, 0x01	; 1
    26c0:	80 81       	ld	r24, Z
    26c2:	80 61       	ori	r24, 0x10	; 16
    26c4:	80 83       	st	Z, r24
	Trigger_PORT &=~ (1<<Trigger_PIN);			//trigger pin initially low
    26c6:	a2 e0       	ldi	r26, 0x02	; 2
    26c8:	b1 e0       	ldi	r27, 0x01	; 1
    26ca:	8c 91       	ld	r24, X
    26cc:	8f 7e       	andi	r24, 0xEF	; 239
    26ce:	8c 93       	st	X, r24
	Signal_DDR &=~ (1<<Signal_PIN);				//signal_out pin as input
    26d0:	80 81       	ld	r24, Z
    26d2:	8f 7b       	andi	r24, 0xBF	; 191
    26d4:	80 83       	st	Z, r24
	TCNT0=0;
    26d6:	16 bc       	out	0x26, r1	; 38
}
    26d8:	08 95       	ret

000026da <_ZN10Lidar_Down19Lidar_Down_Get_DataEv>:

float Lidar_Down::Lidar_Down_Get_Data()
{
	Start_Timer0;
    26da:	16 bc       	out	0x26, r1	; 38
    26dc:	85 b5       	in	r24, 0x25	; 37
    26de:	84 60       	ori	r24, 0x04	; 4
    26e0:	85 bd       	out	0x25, r24	; 37
	
	while((Signal_CHNL&(1<<Signal_PIN))&&(!timeoutFlagDown));
    26e2:	e0 e0       	ldi	r30, 0x00	; 0
    26e4:	f1 e0       	ldi	r31, 0x01	; 1
    26e6:	80 81       	ld	r24, Z
    26e8:	86 ff       	sbrs	r24, 6
    26ea:	89 c0       	rjmp	.+274    	; 0x27fe <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x124>
    26ec:	80 91 d0 02 	lds	r24, 0x02D0
    26f0:	88 23       	and	r24, r24
    26f2:	c9 f3       	breq	.-14     	; 0x26e6 <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0xc>
    26f4:	84 c0       	rjmp	.+264    	; 0x27fe <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x124>
	
	if(timeoutFlagDown)
	{
		timeoutFlagDown=0;
    26f6:	10 92 d0 02 	sts	0x02D0, r1
		Stop_Timer0;
    26fa:	85 b5       	in	r24, 0x25	; 37
    26fc:	8b 7f       	andi	r24, 0xFB	; 251
    26fe:	85 bd       	out	0x25, r24	; 37
    2700:	16 bc       	out	0x26, r1	; 38
		return ERROR;
    2702:	70 e0       	ldi	r23, 0x00	; 0
    2704:	60 e0       	ldi	r22, 0x00	; 0
    2706:	90 e0       	ldi	r25, 0x00	; 0
    2708:	80 e0       	ldi	r24, 0x00	; 0
    270a:	70 c0       	rjmp	.+224    	; 0x27ec <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x112>
	}
	
	Start_Timer0;
    270c:	16 bc       	out	0x26, r1	; 38
    270e:	85 b5       	in	r24, 0x25	; 37
    2710:	84 60       	ori	r24, 0x04	; 4
    2712:	85 bd       	out	0x25, r24	; 37
	
	while((!(Signal_CHNL&(1<<Signal_PIN)))&&(!timeoutFlagDown));
    2714:	e0 e0       	ldi	r30, 0x00	; 0
    2716:	f1 e0       	ldi	r31, 0x01	; 1
    2718:	80 81       	ld	r24, Z
    271a:	86 fd       	sbrc	r24, 6
    271c:	76 c0       	rjmp	.+236    	; 0x280a <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x130>
    271e:	80 91 d0 02 	lds	r24, 0x02D0
    2722:	88 23       	and	r24, r24
    2724:	c9 f3       	breq	.-14     	; 0x2718 <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x3e>
    2726:	71 c0       	rjmp	.+226    	; 0x280a <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x130>
	
	if(timeoutFlagDown)
	{
		timeoutFlagDown=0;
    2728:	10 92 d0 02 	sts	0x02D0, r1
		Stop_Timer0;
    272c:	85 b5       	in	r24, 0x25	; 37
    272e:	8b 7f       	andi	r24, 0xFB	; 251
    2730:	85 bd       	out	0x25, r24	; 37
    2732:	16 bc       	out	0x26, r1	; 38
		return ERROR;
    2734:	70 e0       	ldi	r23, 0x00	; 0
    2736:	60 e0       	ldi	r22, 0x00	; 0
    2738:	90 e0       	ldi	r25, 0x00	; 0
    273a:	80 e0       	ldi	r24, 0x00	; 0
    273c:	57 c0       	rjmp	.+174    	; 0x27ec <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x112>
	}
	
	Start_Timer0;
    273e:	16 bc       	out	0x26, r1	; 38
    2740:	85 b5       	in	r24, 0x25	; 37
    2742:	84 60       	ori	r24, 0x04	; 4
    2744:	85 bd       	out	0x25, r24	; 37

	while((Signal_CHNL&(1<<Signal_PIN))&&(!timeoutFlagDown));
    2746:	e0 e0       	ldi	r30, 0x00	; 0
    2748:	f1 e0       	ldi	r31, 0x01	; 1
    274a:	80 81       	ld	r24, Z
    274c:	86 ff       	sbrs	r24, 6
    274e:	63 c0       	rjmp	.+198    	; 0x2816 <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x13c>
    2750:	80 91 d0 02 	lds	r24, 0x02D0
    2754:	88 23       	and	r24, r24
    2756:	c9 f3       	breq	.-14     	; 0x274a <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x70>
    2758:	5e c0       	rjmp	.+188    	; 0x2816 <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x13c>
	
	if(timeoutFlagDown)
	{
		timeoutFlagDown=0;
    275a:	10 92 d0 02 	sts	0x02D0, r1
		Stop_Timer0;
    275e:	85 b5       	in	r24, 0x25	; 37
    2760:	8b 7f       	andi	r24, 0xFB	; 251
    2762:	85 bd       	out	0x25, r24	; 37
    2764:	16 bc       	out	0x26, r1	; 38
		return ERROR;
    2766:	70 e0       	ldi	r23, 0x00	; 0
    2768:	60 e0       	ldi	r22, 0x00	; 0
    276a:	90 e0       	ldi	r25, 0x00	; 0
    276c:	80 e0       	ldi	r24, 0x00	; 0
    276e:	3e c0       	rjmp	.+124    	; 0x27ec <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x112>
	}
	
	timeDataDown=((float)TCNT0*16)/10;
    2770:	66 b5       	in	r22, 0x26	; 38
    2772:	70 e0       	ldi	r23, 0x00	; 0
    2774:	80 e0       	ldi	r24, 0x00	; 0
    2776:	90 e0       	ldi	r25, 0x00	; 0
    2778:	0e 94 76 19 	call	0x32ec	; 0x32ec <__floatunsisf>
    277c:	20 e0       	ldi	r18, 0x00	; 0
    277e:	30 e0       	ldi	r19, 0x00	; 0
    2780:	40 e8       	ldi	r20, 0x80	; 128
    2782:	51 e4       	ldi	r21, 0x41	; 65
    2784:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__mulsf3>
    2788:	20 e0       	ldi	r18, 0x00	; 0
    278a:	30 e0       	ldi	r19, 0x00	; 0
    278c:	40 e2       	ldi	r20, 0x20	; 32
    278e:	51 e4       	ldi	r21, 0x41	; 65
    2790:	0e 94 dd 18 	call	0x31ba	; 0x31ba <__divsf3>
	timeDataDown=timeDataDown-30;
    2794:	20 e0       	ldi	r18, 0x00	; 0
    2796:	30 e0       	ldi	r19, 0x00	; 0
    2798:	40 ef       	ldi	r20, 0xF0	; 240
    279a:	51 e4       	ldi	r21, 0x41	; 65
    279c:	0e 94 74 18 	call	0x30e8	; 0x30e8 <__subsf3>
    27a0:	60 93 cc 02 	sts	0x02CC, r22
    27a4:	70 93 cd 02 	sts	0x02CD, r23
    27a8:	80 93 ce 02 	sts	0x02CE, r24
    27ac:	90 93 cf 02 	sts	0x02CF, r25
	Stop_Timer0;
    27b0:	25 b5       	in	r18, 0x25	; 37
    27b2:	2b 7f       	andi	r18, 0xFB	; 251
    27b4:	25 bd       	out	0x25, r18	; 37
    27b6:	16 bc       	out	0x26, r1	; 38
	
	if(timeDataDown<0)
    27b8:	20 e0       	ldi	r18, 0x00	; 0
    27ba:	30 e0       	ldi	r19, 0x00	; 0
    27bc:	a9 01       	movw	r20, r18
    27be:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__cmpsf2>
    27c2:	88 23       	and	r24, r24
    27c4:	5c f4       	brge	.+22     	; 0x27dc <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x102>
	{
		timeDataDown=0;
    27c6:	80 e0       	ldi	r24, 0x00	; 0
    27c8:	90 e0       	ldi	r25, 0x00	; 0
    27ca:	dc 01       	movw	r26, r24
    27cc:	80 93 cc 02 	sts	0x02CC, r24
    27d0:	90 93 cd 02 	sts	0x02CD, r25
    27d4:	a0 93 ce 02 	sts	0x02CE, r26
    27d8:	b0 93 cf 02 	sts	0x02CF, r27
	}
	return timeDataDown;
    27dc:	70 91 cc 02 	lds	r23, 0x02CC
    27e0:	60 91 cd 02 	lds	r22, 0x02CD
    27e4:	90 91 ce 02 	lds	r25, 0x02CE
    27e8:	80 91 cf 02 	lds	r24, 0x02CF
	_delay_ms(7);
}
    27ec:	39 2f       	mov	r19, r25
    27ee:	28 2f       	mov	r18, r24
    27f0:	87 2f       	mov	r24, r23
    27f2:	96 2f       	mov	r25, r22
    27f4:	a3 2f       	mov	r26, r19
    27f6:	b2 2f       	mov	r27, r18
    27f8:	bc 01       	movw	r22, r24
    27fa:	cd 01       	movw	r24, r26
    27fc:	08 95       	ret
{
	Start_Timer0;
	
	while((Signal_CHNL&(1<<Signal_PIN))&&(!timeoutFlagDown));
	
	if(timeoutFlagDown)
    27fe:	80 91 d0 02 	lds	r24, 0x02D0
    2802:	88 23       	and	r24, r24
    2804:	09 f4       	brne	.+2      	; 0x2808 <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x12e>
    2806:	82 cf       	rjmp	.-252    	; 0x270c <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x32>
    2808:	76 cf       	rjmp	.-276    	; 0x26f6 <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x1c>
	
	Start_Timer0;
	
	while((!(Signal_CHNL&(1<<Signal_PIN)))&&(!timeoutFlagDown));
	
	if(timeoutFlagDown)
    280a:	80 91 d0 02 	lds	r24, 0x02D0
    280e:	88 23       	and	r24, r24
    2810:	09 f4       	brne	.+2      	; 0x2814 <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x13a>
    2812:	95 cf       	rjmp	.-214    	; 0x273e <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x64>
    2814:	89 cf       	rjmp	.-238    	; 0x2728 <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x4e>
	
	Start_Timer0;

	while((Signal_CHNL&(1<<Signal_PIN))&&(!timeoutFlagDown));
	
	if(timeoutFlagDown)
    2816:	80 91 d0 02 	lds	r24, 0x02D0
    281a:	88 23       	and	r24, r24
    281c:	09 f4       	brne	.+2      	; 0x2820 <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x146>
    281e:	a8 cf       	rjmp	.-176    	; 0x2770 <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x96>
    2820:	9c cf       	rjmp	.-200    	; 0x275a <_ZN10Lidar_Down19Lidar_Down_Get_DataEv+0x80>

00002822 <__vector_23>:
	return timeDataDown;
	_delay_ms(7);
}

ISR(TIMER0_OVF_vect)
{
    2822:	1f 92       	push	r1
    2824:	0f 92       	push	r0
    2826:	0f b6       	in	r0, 0x3f	; 63
    2828:	0f 92       	push	r0
    282a:	11 24       	eor	r1, r1
    282c:	8f 93       	push	r24
	timeoutFlagDown=1;
    282e:	81 e0       	ldi	r24, 0x01	; 1
    2830:	80 93 d0 02 	sts	0x02D0, r24
    2834:	8f 91       	pop	r24
    2836:	0f 90       	pop	r0
    2838:	0f be       	out	0x3f, r0	; 63
    283a:	0f 90       	pop	r0
    283c:	1f 90       	pop	r1
    283e:	18 95       	reti

00002840 <_ZN8Lidar_Up11Init_timer5Ev>:
volatile uint8_t timeoutFlagUp=0;
float timeDataUp=0;

void Lidar_Up::Init_timer5()
{
	TCCR5B |= (1<<WGM52);
    2840:	e1 e2       	ldi	r30, 0x21	; 33
    2842:	f1 e0       	ldi	r31, 0x01	; 1
    2844:	80 81       	ld	r24, Z
    2846:	88 60       	ori	r24, 0x08	; 8
    2848:	80 83       	st	Z, r24
	TIMSK5 |= (1<<OCIE5A);
    284a:	e3 e7       	ldi	r30, 0x73	; 115
    284c:	f0 e0       	ldi	r31, 0x00	; 0
    284e:	80 81       	ld	r24, Z
    2850:	82 60       	ori	r24, 0x02	; 2
    2852:	80 83       	st	Z, r24
	TIFR5 |= (1<<OCF5A);
    2854:	d1 9a       	sbi	0x1a, 1	; 26
	OCR5A = 10000;
    2856:	80 e1       	ldi	r24, 0x10	; 16
    2858:	97 e2       	ldi	r25, 0x27	; 39
    285a:	90 93 29 01 	sts	0x0129, r25
    285e:	80 93 28 01 	sts	0x0128, r24
	TCNT5 = 0;
    2862:	10 92 25 01 	sts	0x0125, r1
    2866:	10 92 24 01 	sts	0x0124, r1
}
    286a:	08 95       	ret

0000286c <_ZN8Lidar_Up13Init_Lidar_UpEv>:

void Lidar_Up::Init_Lidar_Up()
{
	Init_timer5();
    286c:	0e 94 20 14 	call	0x2840	; 0x2840 <_ZN8Lidar_Up11Init_timer5Ev>
	TRIGGER_DDR |= (1<<TRIGGER_PIN);				//trigger pin as output
    2870:	e1 e0       	ldi	r30, 0x01	; 1
    2872:	f1 e0       	ldi	r31, 0x01	; 1
    2874:	80 81       	ld	r24, Z
    2876:	80 62       	ori	r24, 0x20	; 32
    2878:	80 83       	st	Z, r24
	TRIGGER_PORT |= (1<<TRIGGER_PIN);				//trigger pin initially high
    287a:	e2 e0       	ldi	r30, 0x02	; 2
    287c:	f1 e0       	ldi	r31, 0x01	; 1
    287e:	80 81       	ld	r24, Z
    2880:	80 62       	ori	r24, 0x20	; 32
    2882:	80 83       	st	Z, r24
	SIGNAL_DDR &=~ (1<<SIGNAL_PIN);				//signal_out pin as input
    2884:	24 98       	cbi	0x04, 4	; 4
	TCNT5=0;
    2886:	10 92 25 01 	sts	0x0125, r1
    288a:	10 92 24 01 	sts	0x0124, r1
}
    288e:	08 95       	ret

00002890 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv>:

float Lidar_Up::Lidar_Up_Get_Data()
{
    2890:	cf 93       	push	r28
    2892:	df 93       	push	r29
	
	TRIGGER_PORT&=~(1<<TRIGGER_PIN);
    2894:	e2 e0       	ldi	r30, 0x02	; 2
    2896:	f1 e0       	ldi	r31, 0x01	; 1
    2898:	80 81       	ld	r24, Z
    289a:	8f 7d       	andi	r24, 0xDF	; 223
    289c:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    289e:	85 e3       	ldi	r24, 0x35	; 53
    28a0:	8a 95       	dec	r24
    28a2:	f1 f7       	brne	.-4      	; 0x28a0 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x10>
    28a4:	00 00       	nop
	_delay_us(10);

	Start_Timer5;
    28a6:	10 92 25 01 	sts	0x0125, r1
    28aa:	10 92 24 01 	sts	0x0124, r1
    28ae:	e1 e2       	ldi	r30, 0x21	; 33
    28b0:	f1 e0       	ldi	r31, 0x01	; 1
    28b2:	80 81       	ld	r24, Z
    28b4:	82 60       	ori	r24, 0x02	; 2
    28b6:	80 83       	st	Z, r24
	
	while((!(SIGNAL_CHNL&(1<<SIGNAL_PIN)))&&(!timeoutFlagUp));
    28b8:	1c 99       	sbic	0x03, 4	; 3
    28ba:	76 c0       	rjmp	.+236    	; 0x29a8 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x118>
    28bc:	80 91 d5 02 	lds	r24, 0x02D5
    28c0:	88 23       	and	r24, r24
    28c2:	d1 f3       	breq	.-12     	; 0x28b8 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x28>
    28c4:	71 c0       	rjmp	.+226    	; 0x29a8 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x118>
	
	if(timeoutFlagUp)
	{
		timeoutFlagUp=0;
    28c6:	10 92 d5 02 	sts	0x02D5, r1
		Stop_Timer5;
    28ca:	e1 e2       	ldi	r30, 0x21	; 33
    28cc:	f1 e0       	ldi	r31, 0x01	; 1
    28ce:	80 81       	ld	r24, Z
    28d0:	8d 7f       	andi	r24, 0xFD	; 253
    28d2:	80 83       	st	Z, r24
    28d4:	10 92 25 01 	sts	0x0125, r1
    28d8:	10 92 24 01 	sts	0x0124, r1
		TRIGGER_PORT|=(1<<TRIGGER_PIN);
    28dc:	e2 e0       	ldi	r30, 0x02	; 2
    28de:	f1 e0       	ldi	r31, 0x01	; 1
    28e0:	80 81       	ld	r24, Z
    28e2:	80 62       	ori	r24, 0x20	; 32
    28e4:	80 83       	st	Z, r24
		return ERROR;
    28e6:	70 e0       	ldi	r23, 0x00	; 0
    28e8:	60 e0       	ldi	r22, 0x00	; 0
    28ea:	90 e0       	ldi	r25, 0x00	; 0
    28ec:	80 e0       	ldi	r24, 0x00	; 0
    28ee:	51 c0       	rjmp	.+162    	; 0x2992 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x102>
	}
	
	Start_Timer5;
    28f0:	10 92 25 01 	sts	0x0125, r1
    28f4:	10 92 24 01 	sts	0x0124, r1
    28f8:	e1 e2       	ldi	r30, 0x21	; 33
    28fa:	f1 e0       	ldi	r31, 0x01	; 1
    28fc:	80 81       	ld	r24, Z
    28fe:	82 60       	ori	r24, 0x02	; 2
    2900:	80 83       	st	Z, r24

	while((SIGNAL_CHNL&(1<<SIGNAL_PIN))&&(!timeoutFlagUp));
    2902:	1c 9b       	sbis	0x03, 4	; 3
    2904:	57 c0       	rjmp	.+174    	; 0x29b4 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x124>
    2906:	80 91 d5 02 	lds	r24, 0x02D5
    290a:	88 23       	and	r24, r24
    290c:	d1 f3       	breq	.-12     	; 0x2902 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x72>
    290e:	52 c0       	rjmp	.+164    	; 0x29b4 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x124>
	
	if(timeoutFlagUp)
	{
		timeoutFlagUp=0;
    2910:	10 92 d5 02 	sts	0x02D5, r1
		Stop_Timer5;
    2914:	e1 e2       	ldi	r30, 0x21	; 33
    2916:	f1 e0       	ldi	r31, 0x01	; 1
    2918:	80 81       	ld	r24, Z
    291a:	8d 7f       	andi	r24, 0xFD	; 253
    291c:	80 83       	st	Z, r24
    291e:	10 92 25 01 	sts	0x0125, r1
    2922:	10 92 24 01 	sts	0x0124, r1
		TRIGGER_PORT|=(1<<TRIGGER_PIN);
    2926:	e2 e0       	ldi	r30, 0x02	; 2
    2928:	f1 e0       	ldi	r31, 0x01	; 1
    292a:	80 81       	ld	r24, Z
    292c:	80 62       	ori	r24, 0x20	; 32
    292e:	80 83       	st	Z, r24
		return ERROR;
    2930:	70 e0       	ldi	r23, 0x00	; 0
    2932:	60 e0       	ldi	r22, 0x00	; 0
    2934:	90 e0       	ldi	r25, 0x00	; 0
    2936:	80 e0       	ldi	r24, 0x00	; 0
    2938:	2c c0       	rjmp	.+88     	; 0x2992 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x102>
	}
	
	timeDataUp=((float)TCNT5)/20.0;
    293a:	c4 e2       	ldi	r28, 0x24	; 36
    293c:	d1 e0       	ldi	r29, 0x01	; 1
    293e:	68 81       	ld	r22, Y
    2940:	79 81       	ldd	r23, Y+1	; 0x01
    2942:	80 e0       	ldi	r24, 0x00	; 0
    2944:	90 e0       	ldi	r25, 0x00	; 0
    2946:	0e 94 76 19 	call	0x32ec	; 0x32ec <__floatunsisf>
    294a:	20 e0       	ldi	r18, 0x00	; 0
    294c:	30 e0       	ldi	r19, 0x00	; 0
    294e:	40 ea       	ldi	r20, 0xA0	; 160
    2950:	51 e4       	ldi	r21, 0x41	; 65
    2952:	0e 94 dd 18 	call	0x31ba	; 0x31ba <__divsf3>
    2956:	dc 01       	movw	r26, r24
    2958:	cb 01       	movw	r24, r22
    295a:	80 93 d1 02 	sts	0x02D1, r24
    295e:	90 93 d2 02 	sts	0x02D2, r25
    2962:	a0 93 d3 02 	sts	0x02D3, r26
    2966:	b0 93 d4 02 	sts	0x02D4, r27
	Stop_Timer5;
    296a:	e1 e2       	ldi	r30, 0x21	; 33
    296c:	f1 e0       	ldi	r31, 0x01	; 1
    296e:	80 81       	ld	r24, Z
    2970:	8d 7f       	andi	r24, 0xFD	; 253
    2972:	80 83       	st	Z, r24
    2974:	19 82       	std	Y+1, r1	; 0x01
    2976:	18 82       	st	Y, r1
	
	TRIGGER_PORT|=(1<<TRIGGER_PIN);
    2978:	e2 e0       	ldi	r30, 0x02	; 2
    297a:	f1 e0       	ldi	r31, 0x01	; 1
    297c:	80 81       	ld	r24, Z
    297e:	80 62       	ori	r24, 0x20	; 32
    2980:	80 83       	st	Z, r24
	return timeDataUp;
    2982:	70 91 d1 02 	lds	r23, 0x02D1
    2986:	60 91 d2 02 	lds	r22, 0x02D2
    298a:	90 91 d3 02 	lds	r25, 0x02D3
    298e:	80 91 d4 02 	lds	r24, 0x02D4
	
	_delay_ms(7);
}
    2992:	39 2f       	mov	r19, r25
    2994:	28 2f       	mov	r18, r24
    2996:	87 2f       	mov	r24, r23
    2998:	96 2f       	mov	r25, r22
    299a:	a3 2f       	mov	r26, r19
    299c:	b2 2f       	mov	r27, r18
    299e:	bc 01       	movw	r22, r24
    29a0:	cd 01       	movw	r24, r26
    29a2:	df 91       	pop	r29
    29a4:	cf 91       	pop	r28
    29a6:	08 95       	ret

	Start_Timer5;
	
	while((!(SIGNAL_CHNL&(1<<SIGNAL_PIN)))&&(!timeoutFlagUp));
	
	if(timeoutFlagUp)
    29a8:	80 91 d5 02 	lds	r24, 0x02D5
    29ac:	88 23       	and	r24, r24
    29ae:	09 f4       	brne	.+2      	; 0x29b2 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x122>
    29b0:	9f cf       	rjmp	.-194    	; 0x28f0 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x60>
    29b2:	89 cf       	rjmp	.-238    	; 0x28c6 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x36>
	
	Start_Timer5;

	while((SIGNAL_CHNL&(1<<SIGNAL_PIN))&&(!timeoutFlagUp));
	
	if(timeoutFlagUp)
    29b4:	80 91 d5 02 	lds	r24, 0x02D5
    29b8:	88 23       	and	r24, r24
    29ba:	09 f4       	brne	.+2      	; 0x29be <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x12e>
    29bc:	be cf       	rjmp	.-132    	; 0x293a <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0xaa>
    29be:	a8 cf       	rjmp	.-176    	; 0x2910 <_ZN8Lidar_Up17Lidar_Up_Get_DataEv+0x80>

000029c0 <__vector_47>:
	_delay_ms(7);
}


ISR(TIMER5_COMPA_vect)
{
    29c0:	1f 92       	push	r1
    29c2:	0f 92       	push	r0
    29c4:	0f b6       	in	r0, 0x3f	; 63
    29c6:	0f 92       	push	r0
    29c8:	11 24       	eor	r1, r1
    29ca:	8f 93       	push	r24
	timeoutFlagUp=1;
    29cc:	81 e0       	ldi	r24, 0x01	; 1
    29ce:	80 93 d5 02 	sts	0x02D5, r24
    29d2:	8f 91       	pop	r24
    29d4:	0f 90       	pop	r0
    29d6:	0f be       	out	0x3f, r0	; 63
    29d8:	0f 90       	pop	r0
    29da:	1f 90       	pop	r1
    29dc:	18 95       	reti

000029de <_ZN5Motor10InitializeEv>:

#include "motor.h"

void Motor::Initialize()
{
	Motor_A_DDR |= (1<<Motor_A_PIN);
    29de:	6d 9a       	sbi	0x0d, 5	; 13
	Motor_A_Direction_A_DDR |= (1<<Motor_A_Direction_A_PIN);
    29e0:	0d 9a       	sbi	0x01, 5	; 1
	Motor_A_Direction_B_DDR |= (1<<Motor_A_Direction_B_PIN);
    29e2:	0f 9a       	sbi	0x01, 7	; 1
	Motor_A_PORT &=~ (1<<Motor_A_PIN);
    29e4:	75 98       	cbi	0x0e, 5	; 14
	
	Motor_B_DDR |= (1<<Motor_B_PIN);
    29e6:	6b 9a       	sbi	0x0d, 3	; 13
	Motor_B_Direction_A_DDR |= (1<<Motor_B_Direction_A_PIN);
    29e8:	09 9a       	sbi	0x01, 1	; 1
	Motor_B_Direction_B_DDR |= (1<<Motor_B_Direction_B_PIN);
    29ea:	0b 9a       	sbi	0x01, 3	; 1
	Motor_B_PORT &=~ (1<<Motor_B_PIN);
    29ec:	73 98       	cbi	0x0e, 3	; 14
	
	Wiper_DDR |= (1<<Wiper_PIN);
    29ee:	6c 9a       	sbi	0x0d, 4	; 13
	Wiper_Direction_B_DDR |= (1<<Wiper_Direction_B_PIN);
    29f0:	3e 9a       	sbi	0x07, 6	; 7
	Wiper_Direction_A_DDR |= (1<<Wiper_Direction_A_PIN);
    29f2:	3c 9a       	sbi	0x07, 4	; 7
	Wiper_PORT &=~ (1<<Wiper_PIN);
    29f4:	74 98       	cbi	0x0e, 4	; 14
	
	TCCR3A |= ((1<<COM3A1)|(1<<COM3B1)|(1<<COM3C1)|(1<<WGM31));
    29f6:	e0 e9       	ldi	r30, 0x90	; 144
    29f8:	f0 e0       	ldi	r31, 0x00	; 0
    29fa:	80 81       	ld	r24, Z
    29fc:	8a 6a       	ori	r24, 0xAA	; 170
    29fe:	80 83       	st	Z, r24
	TCCR3B |= ((1<<CS30)|(1<<WGM33)|(1<<WGM32));
    2a00:	e1 e9       	ldi	r30, 0x91	; 145
    2a02:	f0 e0       	ldi	r31, 0x00	; 0
    2a04:	80 81       	ld	r24, Z
    2a06:	89 61       	ori	r24, 0x19	; 25
    2a08:	80 83       	st	Z, r24
	ICR3 = 2000;
    2a0a:	80 ed       	ldi	r24, 0xD0	; 208
    2a0c:	97 e0       	ldi	r25, 0x07	; 7
    2a0e:	90 93 97 00 	sts	0x0097, r25
    2a12:	80 93 96 00 	sts	0x0096, r24
}
    2a16:	08 95       	ret

00002a18 <_ZN5Motor19Set_Motor_DirectionEhh>:

void Motor::Set_Motor_Direction(unsigned char motor,unsigned char direction)
{
	if (motor==Motor_A)
    2a18:	66 23       	and	r22, r22
    2a1a:	39 f4       	brne	.+14     	; 0x2a2a <_ZN5Motor19Set_Motor_DirectionEhh+0x12>
	{
		if (direction==Forward)
    2a1c:	41 30       	cpi	r20, 0x01	; 1
    2a1e:	19 f4       	brne	.+6      	; 0x2a26 <_ZN5Motor19Set_Motor_DirectionEhh+0xe>
		{
			Motor_A_Direction_A_PORT |= (1<<Motor_A_Direction_A_PIN);
    2a20:	15 9a       	sbi	0x02, 5	; 2
			Motor_A_Direction_B_PORT &=~ (1<<Motor_A_Direction_B_PIN);
    2a22:	17 98       	cbi	0x02, 7	; 2
    2a24:	08 95       	ret
		} 
		else
		{
			Motor_A_Direction_A_PORT &=~ (1<<Motor_A_Direction_A_PIN);
    2a26:	15 98       	cbi	0x02, 5	; 2
			Motor_A_Direction_B_PORT |= (1<<Motor_A_Direction_B_PIN);
    2a28:	17 9a       	sbi	0x02, 7	; 2
		}
	}
	
	if(motor==Motor_B)
    2a2a:	61 30       	cpi	r22, 0x01	; 1
    2a2c:	41 f4       	brne	.+16     	; 0x2a3e <_ZN5Motor19Set_Motor_DirectionEhh+0x26>
	{
		if (direction==Forward)
    2a2e:	41 30       	cpi	r20, 0x01	; 1
    2a30:	19 f4       	brne	.+6      	; 0x2a38 <_ZN5Motor19Set_Motor_DirectionEhh+0x20>
		{
			Motor_B_Direction_A_PORT |= (1<<Motor_B_Direction_A_PIN);
    2a32:	11 9a       	sbi	0x02, 1	; 2
			Motor_B_Direction_B_PORT &=~ (1<<Motor_B_Direction_B_PIN);
    2a34:	13 98       	cbi	0x02, 3	; 2
    2a36:	08 95       	ret
		}
		else
		{
			Motor_B_Direction_A_PORT &=~ (1<<Motor_B_Direction_A_PIN);
    2a38:	11 98       	cbi	0x02, 1	; 2
			Motor_B_Direction_B_PORT |= (1<<Motor_B_Direction_B_PIN);
    2a3a:	13 9a       	sbi	0x02, 3	; 2
    2a3c:	08 95       	ret
		}
	}
	
	if(motor==Wiper)
    2a3e:	62 30       	cpi	r22, 0x02	; 2
    2a40:	39 f4       	brne	.+14     	; 0x2a50 <_ZN5Motor19Set_Motor_DirectionEhh+0x38>
	{
		if (direction==Forward)
    2a42:	41 30       	cpi	r20, 0x01	; 1
    2a44:	19 f4       	brne	.+6      	; 0x2a4c <_ZN5Motor19Set_Motor_DirectionEhh+0x34>
		{
			Wiper_Direction_A_PORT |= (1<<Wiper_Direction_A_PIN);
    2a46:	44 9a       	sbi	0x08, 4	; 8
			Wiper_Direction_B_PORT &=~ (1<<Wiper_Direction_B_PIN);
    2a48:	46 98       	cbi	0x08, 6	; 8
    2a4a:	08 95       	ret
		}
		else
		{
			Wiper_Direction_A_PORT &=~ (1<<Wiper_Direction_A_PIN);
    2a4c:	44 98       	cbi	0x08, 4	; 8
			Wiper_Direction_B_PORT |= (1<<Wiper_Direction_B_PIN);
    2a4e:	46 9a       	sbi	0x08, 6	; 8
    2a50:	08 95       	ret

00002a52 <_ZN5Motor3RunEjj>:
	}
}

void Motor::Run(unsigned int motor,unsigned int value)
{
	if (motor==Motor_A)
    2a52:	61 15       	cp	r22, r1
    2a54:	71 05       	cpc	r23, r1
    2a56:	29 f4       	brne	.+10     	; 0x2a62 <_ZN5Motor3RunEjj+0x10>
	{
		OCR3C=value;
    2a58:	50 93 9d 00 	sts	0x009D, r21
    2a5c:	40 93 9c 00 	sts	0x009C, r20
    2a60:	08 95       	ret
	}
	if (motor==Motor_B)
    2a62:	61 30       	cpi	r22, 0x01	; 1
    2a64:	71 05       	cpc	r23, r1
    2a66:	29 f4       	brne	.+10     	; 0x2a72 <_ZN5Motor3RunEjj+0x20>
	{
		OCR3A=value;
    2a68:	50 93 99 00 	sts	0x0099, r21
    2a6c:	40 93 98 00 	sts	0x0098, r20
    2a70:	08 95       	ret
	}
	if (motor==Wiper)
    2a72:	62 30       	cpi	r22, 0x02	; 2
    2a74:	71 05       	cpc	r23, r1
    2a76:	21 f4       	brne	.+8      	; 0x2a80 <_ZN5Motor3RunEjj+0x2e>
	{
		OCR3B=value;
    2a78:	50 93 9b 00 	sts	0x009B, r21
    2a7c:	40 93 9a 00 	sts	0x009A, r20
    2a80:	08 95       	ret

00002a82 <_Z9constrainRfff>:

#ifndef GENERALFUNCTIONS_H_
#define GENERALFUNCTIONS_H_

void constrain(float &val,float minVal,float maxVal)
{
    2a82:	8f 92       	push	r8
    2a84:	9f 92       	push	r9
    2a86:	af 92       	push	r10
    2a88:	bf 92       	push	r11
    2a8a:	cf 92       	push	r12
    2a8c:	df 92       	push	r13
    2a8e:	ef 92       	push	r14
    2a90:	ff 92       	push	r15
    2a92:	0f 93       	push	r16
    2a94:	1f 93       	push	r17
    2a96:	cf 93       	push	r28
    2a98:	df 93       	push	r29
    2a9a:	ec 01       	movw	r28, r24
    2a9c:	4a 01       	movw	r8, r20
    2a9e:	5b 01       	movw	r10, r22
    2aa0:	68 01       	movw	r12, r16
    2aa2:	79 01       	movw	r14, r18
	if(val<minVal)
    2aa4:	68 81       	ld	r22, Y
    2aa6:	79 81       	ldd	r23, Y+1	; 0x01
    2aa8:	8a 81       	ldd	r24, Y+2	; 0x02
    2aaa:	9b 81       	ldd	r25, Y+3	; 0x03
    2aac:	a5 01       	movw	r20, r10
    2aae:	94 01       	movw	r18, r8
    2ab0:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__cmpsf2>
    2ab4:	88 23       	and	r24, r24
    2ab6:	24 f4       	brge	.+8      	; 0x2ac0 <_Z9constrainRfff+0x3e>
	val=minVal;
    2ab8:	88 82       	st	Y, r8
    2aba:	99 82       	std	Y+1, r9	; 0x01
    2abc:	aa 82       	std	Y+2, r10	; 0x02
    2abe:	bb 82       	std	Y+3, r11	; 0x03
	if(val>maxVal)
    2ac0:	68 81       	ld	r22, Y
    2ac2:	79 81       	ldd	r23, Y+1	; 0x01
    2ac4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ac6:	9b 81       	ldd	r25, Y+3	; 0x03
    2ac8:	a7 01       	movw	r20, r14
    2aca:	96 01       	movw	r18, r12
    2acc:	0e 94 28 1a 	call	0x3450	; 0x3450 <__gesf2>
    2ad0:	18 16       	cp	r1, r24
    2ad2:	24 f4       	brge	.+8      	; 0x2adc <_Z9constrainRfff+0x5a>
	val=maxVal;
    2ad4:	c8 82       	st	Y, r12
    2ad6:	d9 82       	std	Y+1, r13	; 0x01
    2ad8:	ea 82       	std	Y+2, r14	; 0x02
    2ada:	fb 82       	std	Y+3, r15	; 0x03
}
    2adc:	df 91       	pop	r29
    2ade:	cf 91       	pop	r28
    2ae0:	1f 91       	pop	r17
    2ae2:	0f 91       	pop	r16
    2ae4:	ff 90       	pop	r15
    2ae6:	ef 90       	pop	r14
    2ae8:	df 90       	pop	r13
    2aea:	cf 90       	pop	r12
    2aec:	bf 90       	pop	r11
    2aee:	af 90       	pop	r10
    2af0:	9f 90       	pop	r9
    2af2:	8f 90       	pop	r8
    2af4:	08 95       	ret

00002af6 <_ZN3PID10InitializeEv>:
 */  
#include "PID.h"
#include "generalFunctions.h"

void PID::Initialize()
{
    2af6:	fc 01       	movw	r30, r24
	kp=0;
    2af8:	40 e0       	ldi	r20, 0x00	; 0
    2afa:	50 e0       	ldi	r21, 0x00	; 0
    2afc:	ba 01       	movw	r22, r20
    2afe:	40 83       	st	Z, r20
    2b00:	51 83       	std	Z+1, r21	; 0x01
    2b02:	62 83       	std	Z+2, r22	; 0x02
    2b04:	73 83       	std	Z+3, r23	; 0x03
	ki=0;
    2b06:	44 83       	std	Z+4, r20	; 0x04
    2b08:	55 83       	std	Z+5, r21	; 0x05
    2b0a:	66 83       	std	Z+6, r22	; 0x06
    2b0c:	77 83       	std	Z+7, r23	; 0x07
	kd=0;
    2b0e:	40 87       	std	Z+8, r20	; 0x08
    2b10:	51 87       	std	Z+9, r21	; 0x09
    2b12:	62 87       	std	Z+10, r22	; 0x0a
    2b14:	73 87       	std	Z+11, r23	; 0x0b
	errSum=0;
    2b16:	44 87       	std	Z+12, r20	; 0x0c
    2b18:	55 87       	std	Z+13, r21	; 0x0d
    2b1a:	66 87       	std	Z+14, r22	; 0x0e
    2b1c:	77 87       	std	Z+15, r23	; 0x0f
	lasterror=0;
    2b1e:	40 8f       	std	Z+24, r20	; 0x18
    2b20:	51 8f       	std	Z+25, r21	; 0x19
    2b22:	62 8f       	std	Z+26, r22	; 0x1a
    2b24:	73 8f       	std	Z+27, r23	; 0x1b
	offset=0;
    2b26:	44 8f       	std	Z+28, r20	; 0x1c
    2b28:	55 8f       	std	Z+29, r21	; 0x1d
    2b2a:	66 8f       	std	Z+30, r22	; 0x1e
    2b2c:	77 8f       	std	Z+31, r23	; 0x1f
}
    2b2e:	08 95       	ret

00002b30 <_ZN3PID7Set_PIDEfff>:
void PID::Set_PID(float KP,float KI,float KD)
{
    2b30:	cf 92       	push	r12
    2b32:	df 92       	push	r13
    2b34:	ef 92       	push	r14
    2b36:	ff 92       	push	r15
    2b38:	0f 93       	push	r16
    2b3a:	1f 93       	push	r17
    2b3c:	fc 01       	movw	r30, r24
	kp=KP;
    2b3e:	40 83       	st	Z, r20
    2b40:	51 83       	std	Z+1, r21	; 0x01
    2b42:	62 83       	std	Z+2, r22	; 0x02
    2b44:	73 83       	std	Z+3, r23	; 0x03
	ki=KI;
    2b46:	04 83       	std	Z+4, r16	; 0x04
    2b48:	15 83       	std	Z+5, r17	; 0x05
    2b4a:	26 83       	std	Z+6, r18	; 0x06
    2b4c:	37 83       	std	Z+7, r19	; 0x07
	kd=KD;
    2b4e:	c0 86       	std	Z+8, r12	; 0x08
    2b50:	d1 86       	std	Z+9, r13	; 0x09
    2b52:	e2 86       	std	Z+10, r14	; 0x0a
    2b54:	f3 86       	std	Z+11, r15	; 0x0b
}
    2b56:	1f 91       	pop	r17
    2b58:	0f 91       	pop	r16
    2b5a:	ff 90       	pop	r15
    2b5c:	ef 90       	pop	r14
    2b5e:	df 90       	pop	r13
    2b60:	cf 90       	pop	r12
    2b62:	08 95       	ret

00002b64 <_ZN3PID11Compute_PIDEff>:
float PID::Compute_PID(float input,float setpoint)
{
    2b64:	4f 92       	push	r4
    2b66:	5f 92       	push	r5
    2b68:	6f 92       	push	r6
    2b6a:	7f 92       	push	r7
    2b6c:	8f 92       	push	r8
    2b6e:	9f 92       	push	r9
    2b70:	af 92       	push	r10
    2b72:	bf 92       	push	r11
    2b74:	ef 92       	push	r14
    2b76:	ff 92       	push	r15
    2b78:	0f 93       	push	r16
    2b7a:	1f 93       	push	r17
    2b7c:	cf 93       	push	r28
    2b7e:	df 93       	push	r29
    2b80:	cd b7       	in	r28, 0x3d	; 61
    2b82:	de b7       	in	r29, 0x3e	; 62
    2b84:	28 97       	sbiw	r28, 0x08	; 8
    2b86:	0f b6       	in	r0, 0x3f	; 63
    2b88:	f8 94       	cli
    2b8a:	de bf       	out	0x3e, r29	; 62
    2b8c:	0f be       	out	0x3f, r0	; 63
    2b8e:	cd bf       	out	0x3d, r28	; 61
    2b90:	7c 01       	movw	r14, r24
    2b92:	4a 01       	movw	r8, r20
    2b94:	5b 01       	movw	r10, r22
    2b96:	c9 01       	movw	r24, r18
    2b98:	b8 01       	movw	r22, r16
	float error=setpoint-input;
    2b9a:	a5 01       	movw	r20, r10
    2b9c:	94 01       	movw	r18, r8
    2b9e:	0e 94 74 18 	call	0x30e8	; 0x30e8 <__subsf3>
    2ba2:	f6 2f       	mov	r31, r22
    2ba4:	e7 2f       	mov	r30, r23
    2ba6:	58 2f       	mov	r21, r24
    2ba8:	49 2f       	mov	r20, r25
    2baa:	86 2e       	mov	r8, r22
    2bac:	97 2e       	mov	r9, r23
    2bae:	a8 2e       	mov	r10, r24
    2bb0:	b9 2e       	mov	r11, r25
	errSum += error;
    2bb2:	d7 01       	movw	r26, r14
    2bb4:	1c 96       	adiw	r26, 0x0c	; 12
    2bb6:	6d 91       	ld	r22, X+
    2bb8:	7d 91       	ld	r23, X+
    2bba:	8d 91       	ld	r24, X+
    2bbc:	9c 91       	ld	r25, X
    2bbe:	1f 97       	sbiw	r26, 0x0f	; 15
    2bc0:	0f 2f       	mov	r16, r31
    2bc2:	1e 2f       	mov	r17, r30
    2bc4:	25 2f       	mov	r18, r21
    2bc6:	34 2f       	mov	r19, r20
    2bc8:	a9 01       	movw	r20, r18
    2bca:	98 01       	movw	r18, r16
    2bcc:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
    2bd0:	dc 01       	movw	r26, r24
    2bd2:	cb 01       	movw	r24, r22
    2bd4:	f7 01       	movw	r30, r14
    2bd6:	84 87       	std	Z+12, r24	; 0x0c
    2bd8:	95 87       	std	Z+13, r25	; 0x0d
    2bda:	a6 87       	std	Z+14, r26	; 0x0e
    2bdc:	b7 87       	std	Z+15, r27	; 0x0f
	
	constrain(errSum,-500,500);
    2bde:	c7 01       	movw	r24, r14
    2be0:	0c 96       	adiw	r24, 0x0c	; 12
    2be2:	40 e0       	ldi	r20, 0x00	; 0
    2be4:	50 e0       	ldi	r21, 0x00	; 0
    2be6:	6a ef       	ldi	r22, 0xFA	; 250
    2be8:	73 ec       	ldi	r23, 0xC3	; 195
    2bea:	00 e0       	ldi	r16, 0x00	; 0
    2bec:	10 e0       	ldi	r17, 0x00	; 0
    2bee:	2a ef       	ldi	r18, 0xFA	; 250
    2bf0:	33 e4       	ldi	r19, 0x43	; 67
    2bf2:	0e 94 41 15 	call	0x2a82	; 0x2a82 <_Z9constrainRfff>
	
	float dErr = (error - lasterror);
    2bf6:	d7 01       	movw	r26, r14
    2bf8:	58 96       	adiw	r26, 0x18	; 24
    2bfa:	4d 90       	ld	r4, X+
    2bfc:	5d 90       	ld	r5, X+
    2bfe:	6d 90       	ld	r6, X+
    2c00:	7c 90       	ld	r7, X
    2c02:	5b 97       	sbiw	r26, 0x1b	; 27
	
	//Compute PID Output
	float output;
	if (fabs(error)>3)
    2c04:	c5 01       	movw	r24, r10
    2c06:	b4 01       	movw	r22, r8
    2c08:	9f 77       	andi	r25, 0x7F	; 127
    2c0a:	20 e0       	ldi	r18, 0x00	; 0
    2c0c:	30 e0       	ldi	r19, 0x00	; 0
    2c0e:	40 e4       	ldi	r20, 0x40	; 64
    2c10:	50 e4       	ldi	r21, 0x40	; 64
    2c12:	0e 94 28 1a 	call	0x3450	; 0x3450 <__gesf2>
    2c16:	18 16       	cp	r1, r24
    2c18:	0c f0       	brlt	.+2      	; 0x2c1c <_ZN3PID11Compute_PIDEff+0xb8>
    2c1a:	4d c0       	rjmp	.+154    	; 0x2cb6 <_ZN3PID11Compute_PIDEff+0x152>
	{
		output = kp * error + ki * errSum + kd * dErr+offset;
    2c1c:	c5 01       	movw	r24, r10
    2c1e:	b4 01       	movw	r22, r8
    2c20:	f7 01       	movw	r30, r14
    2c22:	20 81       	ld	r18, Z
    2c24:	31 81       	ldd	r19, Z+1	; 0x01
    2c26:	42 81       	ldd	r20, Z+2	; 0x02
    2c28:	53 81       	ldd	r21, Z+3	; 0x03
    2c2a:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__mulsf3>
    2c2e:	6d 83       	std	Y+5, r22	; 0x05
    2c30:	7e 83       	std	Y+6, r23	; 0x06
    2c32:	8f 83       	std	Y+7, r24	; 0x07
    2c34:	98 87       	std	Y+8, r25	; 0x08
    2c36:	d7 01       	movw	r26, r14
    2c38:	14 96       	adiw	r26, 0x04	; 4
    2c3a:	6d 91       	ld	r22, X+
    2c3c:	7d 91       	ld	r23, X+
    2c3e:	8d 91       	ld	r24, X+
    2c40:	9c 91       	ld	r25, X
    2c42:	17 97       	sbiw	r26, 0x07	; 7
    2c44:	1c 96       	adiw	r26, 0x0c	; 12
    2c46:	2d 91       	ld	r18, X+
    2c48:	3d 91       	ld	r19, X+
    2c4a:	4d 91       	ld	r20, X+
    2c4c:	5c 91       	ld	r21, X
    2c4e:	1f 97       	sbiw	r26, 0x0f	; 15
    2c50:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__mulsf3>
    2c54:	9b 01       	movw	r18, r22
    2c56:	ac 01       	movw	r20, r24
    2c58:	6d 81       	ldd	r22, Y+5	; 0x05
    2c5a:	7e 81       	ldd	r23, Y+6	; 0x06
    2c5c:	8f 81       	ldd	r24, Y+7	; 0x07
    2c5e:	98 85       	ldd	r25, Y+8	; 0x08
    2c60:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
    2c64:	6d 83       	std	Y+5, r22	; 0x05
    2c66:	7e 83       	std	Y+6, r23	; 0x06
    2c68:	8f 83       	std	Y+7, r24	; 0x07
    2c6a:	98 87       	std	Y+8, r25	; 0x08
	float error=setpoint-input;
	errSum += error;
	
	constrain(errSum,-500,500);
	
	float dErr = (error - lasterror);
    2c6c:	c5 01       	movw	r24, r10
    2c6e:	b4 01       	movw	r22, r8
    2c70:	a3 01       	movw	r20, r6
    2c72:	92 01       	movw	r18, r4
    2c74:	0e 94 74 18 	call	0x30e8	; 0x30e8 <__subsf3>
	
	//Compute PID Output
	float output;
	if (fabs(error)>3)
	{
		output = kp * error + ki * errSum + kd * dErr+offset;
    2c78:	f7 01       	movw	r30, r14
    2c7a:	20 85       	ldd	r18, Z+8	; 0x08
    2c7c:	31 85       	ldd	r19, Z+9	; 0x09
    2c7e:	42 85       	ldd	r20, Z+10	; 0x0a
    2c80:	53 85       	ldd	r21, Z+11	; 0x0b
    2c82:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__mulsf3>
    2c86:	9b 01       	movw	r18, r22
    2c88:	ac 01       	movw	r20, r24
    2c8a:	6d 81       	ldd	r22, Y+5	; 0x05
    2c8c:	7e 81       	ldd	r23, Y+6	; 0x06
    2c8e:	8f 81       	ldd	r24, Y+7	; 0x07
    2c90:	98 85       	ldd	r25, Y+8	; 0x08
    2c92:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
    2c96:	d7 01       	movw	r26, r14
    2c98:	5c 96       	adiw	r26, 0x1c	; 28
    2c9a:	2d 91       	ld	r18, X+
    2c9c:	3d 91       	ld	r19, X+
    2c9e:	4d 91       	ld	r20, X+
    2ca0:	5c 91       	ld	r21, X
    2ca2:	5f 97       	sbiw	r26, 0x1f	; 31
    2ca4:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
    2ca8:	dc 01       	movw	r26, r24
    2caa:	cb 01       	movw	r24, r22
    2cac:	89 83       	std	Y+1, r24	; 0x01
    2cae:	9a 83       	std	Y+2, r25	; 0x02
    2cb0:	ab 83       	std	Y+3, r26	; 0x03
    2cb2:	bc 83       	std	Y+4, r27	; 0x04
    2cb4:	07 c0       	rjmp	.+14     	; 0x2cc4 <_ZN3PID11Compute_PIDEff+0x160>
	}
	else
	output=0;
    2cb6:	80 e0       	ldi	r24, 0x00	; 0
    2cb8:	90 e0       	ldi	r25, 0x00	; 0
    2cba:	dc 01       	movw	r26, r24
    2cbc:	89 83       	std	Y+1, r24	; 0x01
    2cbe:	9a 83       	std	Y+2, r25	; 0x02
    2cc0:	ab 83       	std	Y+3, r26	; 0x03
    2cc2:	bc 83       	std	Y+4, r27	; 0x04
	
	constrain(output,minOut,maxOut);
    2cc4:	f7 01       	movw	r30, r14
    2cc6:	44 89       	ldd	r20, Z+20	; 0x14
    2cc8:	55 89       	ldd	r21, Z+21	; 0x15
    2cca:	66 89       	ldd	r22, Z+22	; 0x16
    2ccc:	77 89       	ldd	r23, Z+23	; 0x17
    2cce:	00 89       	ldd	r16, Z+16	; 0x10
    2cd0:	11 89       	ldd	r17, Z+17	; 0x11
    2cd2:	22 89       	ldd	r18, Z+18	; 0x12
    2cd4:	33 89       	ldd	r19, Z+19	; 0x13
    2cd6:	ce 01       	movw	r24, r28
    2cd8:	01 96       	adiw	r24, 0x01	; 1
    2cda:	0e 94 41 15 	call	0x2a82	; 0x2a82 <_Z9constrainRfff>
	//Remember some variables for next time
	lasterror = error;
    2cde:	d7 01       	movw	r26, r14
    2ce0:	58 96       	adiw	r26, 0x18	; 24
    2ce2:	8d 92       	st	X+, r8
    2ce4:	9d 92       	st	X+, r9
    2ce6:	ad 92       	st	X+, r10
    2ce8:	bc 92       	st	X, r11
    2cea:	5b 97       	sbiw	r26, 0x1b	; 27
	return output;
    2cec:	59 81       	ldd	r21, Y+1	; 0x01
    2cee:	4a 81       	ldd	r20, Y+2	; 0x02
    2cf0:	3b 81       	ldd	r19, Y+3	; 0x03
    2cf2:	2c 81       	ldd	r18, Y+4	; 0x04
    2cf4:	85 2f       	mov	r24, r21
    2cf6:	94 2f       	mov	r25, r20
    2cf8:	a3 2f       	mov	r26, r19
    2cfa:	b2 2f       	mov	r27, r18
    2cfc:	bc 01       	movw	r22, r24
    2cfe:	cd 01       	movw	r24, r26
    2d00:	28 96       	adiw	r28, 0x08	; 8
    2d02:	0f b6       	in	r0, 0x3f	; 63
    2d04:	f8 94       	cli
    2d06:	de bf       	out	0x3e, r29	; 62
    2d08:	0f be       	out	0x3f, r0	; 63
    2d0a:	cd bf       	out	0x3d, r28	; 61
    2d0c:	df 91       	pop	r29
    2d0e:	cf 91       	pop	r28
    2d10:	1f 91       	pop	r17
    2d12:	0f 91       	pop	r16
    2d14:	ff 90       	pop	r15
    2d16:	ef 90       	pop	r14
    2d18:	bf 90       	pop	r11
    2d1a:	af 90       	pop	r10
    2d1c:	9f 90       	pop	r9
    2d1e:	8f 90       	pop	r8
    2d20:	7f 90       	pop	r7
    2d22:	6f 90       	pop	r6
    2d24:	5f 90       	pop	r5
    2d26:	4f 90       	pop	r4
    2d28:	08 95       	ret

00002d2a <_ZN5Servo10InitializeEv>:
 */ 

#include "servo.h"

void Servo::Initialize()
{
    2d2a:	fc 01       	movw	r30, r24
	Min_Duct_Servo = 400;
    2d2c:	20 e9       	ldi	r18, 0x90	; 144
    2d2e:	31 e0       	ldi	r19, 0x01	; 1
    2d30:	33 83       	std	Z+3, r19	; 0x03
    2d32:	22 83       	std	Z+2, r18	; 0x02
	Max_Duct_Servo = 2400;
    2d34:	80 e6       	ldi	r24, 0x60	; 96
    2d36:	99 e0       	ldi	r25, 0x09	; 9
    2d38:	91 83       	std	Z+1, r25	; 0x01
    2d3a:	80 83       	st	Z, r24
	Min_Gripper_Servo = 400;
    2d3c:	37 83       	std	Z+7, r19	; 0x07
    2d3e:	26 83       	std	Z+6, r18	; 0x06
	Max_Gripper_Servo = 2400;
    2d40:	95 83       	std	Z+5, r25	; 0x05
    2d42:	84 83       	std	Z+4, r24	; 0x04
	DuctFan_Servo_DDR |= (1<<DuctFan_Servo_Pin);
    2d44:	27 9a       	sbi	0x04, 7	; 4
	Gripper_Servo_DDR |= (1<<Gripper_Servo_Pin);
    2d46:	25 9a       	sbi	0x04, 5	; 4
	TCCR1A |= ((1<<COM1B1)|(1<<COM1C1)|(1<<WGM11)|(1<<COM1A1));
    2d48:	e0 e8       	ldi	r30, 0x80	; 128
    2d4a:	f0 e0       	ldi	r31, 0x00	; 0
    2d4c:	80 81       	ld	r24, Z
    2d4e:	8a 6a       	ori	r24, 0xAA	; 170
    2d50:	80 83       	st	Z, r24
	TCCR1B |= ((1<<WGM13)|(1<<WGM12)|(1<<CS11));
    2d52:	e1 e8       	ldi	r30, 0x81	; 129
    2d54:	f0 e0       	ldi	r31, 0x00	; 0
    2d56:	80 81       	ld	r24, Z
    2d58:	8a 61       	ori	r24, 0x1A	; 26
    2d5a:	80 83       	st	Z, r24
	ICR1 = 39999;
    2d5c:	8f e3       	ldi	r24, 0x3F	; 63
    2d5e:	9c e9       	ldi	r25, 0x9C	; 156
    2d60:	90 93 87 00 	sts	0x0087, r25
    2d64:	80 93 86 00 	sts	0x0086, r24
}
    2d68:	08 95       	ret

00002d6a <_ZN5Servo20Set_Range_Duct_ServoEjj>:

void Servo::Set_Range_Duct_Servo(unsigned int min, unsigned int max)
{
    2d6a:	fc 01       	movw	r30, r24
	Min_Duct_Servo = min;
    2d6c:	73 83       	std	Z+3, r23	; 0x03
    2d6e:	62 83       	std	Z+2, r22	; 0x02
	Max_Duct_Servo = max;
    2d70:	51 83       	std	Z+1, r21	; 0x01
    2d72:	40 83       	st	Z, r20
}
    2d74:	08 95       	ret

00002d76 <_ZN5Servo23Set_Range_Gripper_ServoEjj>:

void Servo::Set_Range_Gripper_Servo(unsigned int min, unsigned int max)
{
    2d76:	fc 01       	movw	r30, r24
	Min_Gripper_Servo = min;
    2d78:	77 83       	std	Z+7, r23	; 0x07
    2d7a:	66 83       	std	Z+6, r22	; 0x06
	Max_Gripper_Servo = max;
    2d7c:	55 83       	std	Z+5, r21	; 0x05
    2d7e:	44 83       	std	Z+4, r20	; 0x04
}
    2d80:	08 95       	ret

00002d82 <_ZN5Servo17Rotate_Duct_ServoEf>:

void Servo::Rotate_Duct_Servo(float angle)
{
    2d82:	8f 92       	push	r8
    2d84:	9f 92       	push	r9
    2d86:	af 92       	push	r10
    2d88:	bf 92       	push	r11
    2d8a:	cf 92       	push	r12
    2d8c:	df 92       	push	r13
    2d8e:	ef 92       	push	r14
    2d90:	ff 92       	push	r15
    2d92:	0f 93       	push	r16
    2d94:	1f 93       	push	r17
    2d96:	cf 93       	push	r28
    2d98:	df 93       	push	r29
    2d9a:	ec 01       	movw	r28, r24
    2d9c:	6a 01       	movw	r12, r20
    2d9e:	7b 01       	movw	r14, r22
	float var;
	var = Min_Duct_Servo+angle*(float)(Max_Duct_Servo-Min_Duct_Servo)/180.0;
    2da0:	0a 81       	ldd	r16, Y+2	; 0x02
    2da2:	1b 81       	ldd	r17, Y+3	; 0x03
    2da4:	b8 01       	movw	r22, r16
    2da6:	80 e0       	ldi	r24, 0x00	; 0
    2da8:	90 e0       	ldi	r25, 0x00	; 0
    2daa:	0e 94 76 19 	call	0x32ec	; 0x32ec <__floatunsisf>
    2dae:	4b 01       	movw	r8, r22
    2db0:	5c 01       	movw	r10, r24
    2db2:	68 81       	ld	r22, Y
    2db4:	79 81       	ldd	r23, Y+1	; 0x01
    2db6:	60 1b       	sub	r22, r16
    2db8:	71 0b       	sbc	r23, r17
    2dba:	80 e0       	ldi	r24, 0x00	; 0
    2dbc:	90 e0       	ldi	r25, 0x00	; 0
    2dbe:	0e 94 76 19 	call	0x32ec	; 0x32ec <__floatunsisf>
    2dc2:	a7 01       	movw	r20, r14
    2dc4:	96 01       	movw	r18, r12
    2dc6:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__mulsf3>
    2dca:	20 e0       	ldi	r18, 0x00	; 0
    2dcc:	30 e0       	ldi	r19, 0x00	; 0
    2dce:	44 e3       	ldi	r20, 0x34	; 52
    2dd0:	53 e4       	ldi	r21, 0x43	; 67
    2dd2:	0e 94 dd 18 	call	0x31ba	; 0x31ba <__divsf3>
    2dd6:	9b 01       	movw	r18, r22
    2dd8:	ac 01       	movw	r20, r24
    2dda:	c5 01       	movw	r24, r10
    2ddc:	b4 01       	movw	r22, r8
    2dde:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
	OCR1C=(unsigned int)var*2;
    2de2:	0e 94 4a 19 	call	0x3294	; 0x3294 <__fixunssfsi>
    2de6:	66 0f       	add	r22, r22
    2de8:	77 1f       	adc	r23, r23
    2dea:	70 93 8d 00 	sts	0x008D, r23
    2dee:	60 93 8c 00 	sts	0x008C, r22
}
    2df2:	df 91       	pop	r29
    2df4:	cf 91       	pop	r28
    2df6:	1f 91       	pop	r17
    2df8:	0f 91       	pop	r16
    2dfa:	ff 90       	pop	r15
    2dfc:	ef 90       	pop	r14
    2dfe:	df 90       	pop	r13
    2e00:	cf 90       	pop	r12
    2e02:	bf 90       	pop	r11
    2e04:	af 90       	pop	r10
    2e06:	9f 90       	pop	r9
    2e08:	8f 90       	pop	r8
    2e0a:	08 95       	ret

00002e0c <_ZN5Servo20Rotate_Gripper_ServoEf>:

void Servo::Rotate_Gripper_Servo(float angle)
{
    2e0c:	8f 92       	push	r8
    2e0e:	9f 92       	push	r9
    2e10:	af 92       	push	r10
    2e12:	bf 92       	push	r11
    2e14:	cf 92       	push	r12
    2e16:	df 92       	push	r13
    2e18:	ef 92       	push	r14
    2e1a:	ff 92       	push	r15
    2e1c:	0f 93       	push	r16
    2e1e:	1f 93       	push	r17
    2e20:	cf 93       	push	r28
    2e22:	df 93       	push	r29
    2e24:	ec 01       	movw	r28, r24
    2e26:	6a 01       	movw	r12, r20
    2e28:	7b 01       	movw	r14, r22
	float var;
	var = Min_Gripper_Servo+angle*(float)(Max_Gripper_Servo-Min_Gripper_Servo)/180.0;
    2e2a:	0e 81       	ldd	r16, Y+6	; 0x06
    2e2c:	1f 81       	ldd	r17, Y+7	; 0x07
    2e2e:	b8 01       	movw	r22, r16
    2e30:	80 e0       	ldi	r24, 0x00	; 0
    2e32:	90 e0       	ldi	r25, 0x00	; 0
    2e34:	0e 94 76 19 	call	0x32ec	; 0x32ec <__floatunsisf>
    2e38:	4b 01       	movw	r8, r22
    2e3a:	5c 01       	movw	r10, r24
    2e3c:	6c 81       	ldd	r22, Y+4	; 0x04
    2e3e:	7d 81       	ldd	r23, Y+5	; 0x05
    2e40:	60 1b       	sub	r22, r16
    2e42:	71 0b       	sbc	r23, r17
    2e44:	80 e0       	ldi	r24, 0x00	; 0
    2e46:	90 e0       	ldi	r25, 0x00	; 0
    2e48:	0e 94 76 19 	call	0x32ec	; 0x32ec <__floatunsisf>
    2e4c:	a7 01       	movw	r20, r14
    2e4e:	96 01       	movw	r18, r12
    2e50:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__mulsf3>
    2e54:	20 e0       	ldi	r18, 0x00	; 0
    2e56:	30 e0       	ldi	r19, 0x00	; 0
    2e58:	44 e3       	ldi	r20, 0x34	; 52
    2e5a:	53 e4       	ldi	r21, 0x43	; 67
    2e5c:	0e 94 dd 18 	call	0x31ba	; 0x31ba <__divsf3>
    2e60:	9b 01       	movw	r18, r22
    2e62:	ac 01       	movw	r20, r24
    2e64:	c5 01       	movw	r24, r10
    2e66:	b4 01       	movw	r22, r8
    2e68:	0e 94 75 18 	call	0x30ea	; 0x30ea <__addsf3>
	OCR1A=(unsigned int)var*2;
    2e6c:	0e 94 4a 19 	call	0x3294	; 0x3294 <__fixunssfsi>
    2e70:	66 0f       	add	r22, r22
    2e72:	77 1f       	adc	r23, r23
    2e74:	70 93 89 00 	sts	0x0089, r23
    2e78:	60 93 88 00 	sts	0x0088, r22
}
    2e7c:	df 91       	pop	r29
    2e7e:	cf 91       	pop	r28
    2e80:	1f 91       	pop	r17
    2e82:	0f 91       	pop	r16
    2e84:	ff 90       	pop	r15
    2e86:	ef 90       	pop	r14
    2e88:	df 90       	pop	r13
    2e8a:	cf 90       	pop	r12
    2e8c:	bf 90       	pop	r11
    2e8e:	af 90       	pop	r10
    2e90:	9f 90       	pop	r9
    2e92:	8f 90       	pop	r8
    2e94:	08 95       	ret

00002e96 <_Z9initUART0v>:
char buffer=0,buffer1=0,buffer2=0;

void initUART0(void)
{
	//set baud rate
	UBRR0H=(MYUBRR0)>>8;
    2e96:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L=MYUBRR0;
    2e9a:	87 e6       	ldi	r24, 0x67	; 103
    2e9c:	80 93 c4 00 	sts	0x00C4, r24

	//Enable Receiver and Transmitter
	UCSR0B = ((1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0));
    2ea0:	88 e9       	ldi	r24, 0x98	; 152
    2ea2:	80 93 c1 00 	sts	0x00C1, r24
	
	//set frame format
	UCSR0C=((1<<UCSZ00)|(1<<UCSZ01));
    2ea6:	86 e0       	ldi	r24, 0x06	; 6
    2ea8:	80 93 c2 00 	sts	0x00C2, r24
}
    2eac:	08 95       	ret

00002eae <_Z9initUART1v>:

void initUART1(void)
{
	//set baud rate
	UBRR1H=(MYUBRR1)>>8;
    2eae:	10 92 cd 00 	sts	0x00CD, r1
	UBRR1L=MYUBRR1;
    2eb2:	87 e6       	ldi	r24, 0x67	; 103
    2eb4:	80 93 cc 00 	sts	0x00CC, r24

	//Enable Receiver and Transmitter
	UCSR1B = ((1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1));
    2eb8:	88 e9       	ldi	r24, 0x98	; 152
    2eba:	80 93 c9 00 	sts	0x00C9, r24
	
	//set frame format
	UCSR1C= ((1<<UCSZ10)|(1<<UCSZ11));
    2ebe:	86 e0       	ldi	r24, 0x06	; 6
    2ec0:	80 93 ca 00 	sts	0x00CA, r24
}
    2ec4:	08 95       	ret

00002ec6 <_Z9initUART2v>:

void initUART2(void)
{
	//set baud rate
	UBRR2H=(MYUBRR2)>>8;
    2ec6:	10 92 d5 00 	sts	0x00D5, r1
	UBRR2L=MYUBRR2;
    2eca:	87 e6       	ldi	r24, 0x67	; 103
    2ecc:	80 93 d4 00 	sts	0x00D4, r24

	//Enable Receiver and Transmitter
	UCSR2B = ((1<<RXEN2)|(1<<TXEN2)|(1<<RXCIE2));
    2ed0:	88 e9       	ldi	r24, 0x98	; 152
    2ed2:	80 93 d1 00 	sts	0x00D1, r24
	
	//set frame format
	UCSR2C= ((1<<UCSZ20)|(1<<UCSZ21));
    2ed6:	86 e0       	ldi	r24, 0x06	; 6
    2ed8:	80 93 d2 00 	sts	0x00D2, r24
}
    2edc:	08 95       	ret

00002ede <_Z13UART0Transmith>:

void UART0Transmit(unsigned char data)
{
	//wait for transmit buffer to be empty
	while(!((UCSR0A)&(1<<UDRE0)));
    2ede:	e0 ec       	ldi	r30, 0xC0	; 192
    2ee0:	f0 e0       	ldi	r31, 0x00	; 0
    2ee2:	90 81       	ld	r25, Z
    2ee4:	95 ff       	sbrs	r25, 5
    2ee6:	fd cf       	rjmp	.-6      	; 0x2ee2 <_Z13UART0Transmith+0x4>
	
	//send data
	UDR0=data;
    2ee8:	80 93 c6 00 	sts	0x00C6, r24
}
    2eec:	08 95       	ret

00002eee <_Z13UART1Transmith>:


void UART1Transmit(unsigned char data)
{
	//wait for transmit buffer to be empty
	while(!((UCSR1A)&(1<<UDRE1)));
    2eee:	e8 ec       	ldi	r30, 0xC8	; 200
    2ef0:	f0 e0       	ldi	r31, 0x00	; 0
    2ef2:	90 81       	ld	r25, Z
    2ef4:	95 ff       	sbrs	r25, 5
    2ef6:	fd cf       	rjmp	.-6      	; 0x2ef2 <_Z13UART1Transmith+0x4>
	
	//send data
	UDR1=data;
    2ef8:	80 93 ce 00 	sts	0x00CE, r24
}
    2efc:	08 95       	ret

00002efe <_Z13UART2Transmith>:


void UART2Transmit(unsigned char data)
{
	//wait for transmit buffer to be empty
	while(!((UCSR2A)&(1<<UDRE2)));
    2efe:	e0 ed       	ldi	r30, 0xD0	; 208
    2f00:	f0 e0       	ldi	r31, 0x00	; 0
    2f02:	90 81       	ld	r25, Z
    2f04:	95 ff       	sbrs	r25, 5
    2f06:	fd cf       	rjmp	.-6      	; 0x2f02 <_Z13UART2Transmith+0x4>
	
	//send data
	UDR2=data;
    2f08:	80 93 d6 00 	sts	0x00D6, r24
}
    2f0c:	08 95       	ret

00002f0e <_Z12UART0Receivev>:



unsigned char UART0Receive(void)
{
	char data=buffer;
    2f0e:	80 91 d8 02 	lds	r24, 0x02D8
	buffer=0;
    2f12:	10 92 d8 02 	sts	0x02D8, r1
	return data;
}
    2f16:	08 95       	ret

00002f18 <_Z12UART1Receivev>:

unsigned char UART1Receive(void)
{
	char data=buffer1;
    2f18:	80 91 d7 02 	lds	r24, 0x02D7
	buffer1=0;
    2f1c:	10 92 d7 02 	sts	0x02D7, r1
	return data;
}
    2f20:	08 95       	ret

00002f22 <_Z12UART2Receivev>:


unsigned char UART2Receive(void)
{
	char data=buffer2;
    2f22:	80 91 d6 02 	lds	r24, 0x02D6
	buffer2=0;
    2f26:	10 92 d6 02 	sts	0x02D6, r1
	return data;
}
    2f2a:	08 95       	ret

00002f2c <_Z17UART0TransmitDatai>:

void UART0TransmitData(int data)
{
    2f2c:	0f 93       	push	r16
    2f2e:	1f 93       	push	r17
    2f30:	cf 93       	push	r28
    2f32:	df 93       	push	r29
    2f34:	cd b7       	in	r28, 0x3d	; 61
    2f36:	de b7       	in	r29, 0x3e	; 62
    2f38:	64 97       	sbiw	r28, 0x14	; 20
    2f3a:	0f b6       	in	r0, 0x3f	; 63
    2f3c:	f8 94       	cli
    2f3e:	de bf       	out	0x3e, r29	; 62
    2f40:	0f be       	out	0x3f, r0	; 63
    2f42:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	char *i=0;
	itoa(data,buffer,10);
    2f44:	be 01       	movw	r22, r28
    2f46:	6f 5f       	subi	r22, 0xFF	; 255
    2f48:	7f 4f       	sbci	r23, 0xFF	; 255
    2f4a:	4a e0       	ldi	r20, 0x0A	; 10
    2f4c:	50 e0       	ldi	r21, 0x00	; 0
    2f4e:	0e 94 a3 1a 	call	0x3546	; 0x3546 <itoa>
	i=buffer;
	while(*i)
    2f52:	89 81       	ldd	r24, Y+1	; 0x01
    2f54:	88 23       	and	r24, r24
    2f56:	51 f0       	breq	.+20     	; 0x2f6c <_Z17UART0TransmitDatai+0x40>
    2f58:	8e 01       	movw	r16, r28
    2f5a:	0e 5f       	subi	r16, 0xFE	; 254
    2f5c:	1f 4f       	sbci	r17, 0xFF	; 255
		UART0Transmit(*i++);
    2f5e:	0e 94 6f 17 	call	0x2ede	; 0x2ede <_Z13UART0Transmith>
{
	char buffer[20];
	char *i=0;
	itoa(data,buffer,10);
	i=buffer;
	while(*i)
    2f62:	f8 01       	movw	r30, r16
    2f64:	81 91       	ld	r24, Z+
    2f66:	8f 01       	movw	r16, r30
    2f68:	88 23       	and	r24, r24
    2f6a:	c9 f7       	brne	.-14     	; 0x2f5e <_Z17UART0TransmitDatai+0x32>
		UART0Transmit(*i++);
}
    2f6c:	64 96       	adiw	r28, 0x14	; 20
    2f6e:	0f b6       	in	r0, 0x3f	; 63
    2f70:	f8 94       	cli
    2f72:	de bf       	out	0x3e, r29	; 62
    2f74:	0f be       	out	0x3f, r0	; 63
    2f76:	cd bf       	out	0x3d, r28	; 61
    2f78:	df 91       	pop	r29
    2f7a:	cf 91       	pop	r28
    2f7c:	1f 91       	pop	r17
    2f7e:	0f 91       	pop	r16
    2f80:	08 95       	ret

00002f82 <_Z17UART1TransmitDatai>:

void UART1TransmitData(int data)
{
    2f82:	0f 93       	push	r16
    2f84:	1f 93       	push	r17
    2f86:	cf 93       	push	r28
    2f88:	df 93       	push	r29
    2f8a:	cd b7       	in	r28, 0x3d	; 61
    2f8c:	de b7       	in	r29, 0x3e	; 62
    2f8e:	64 97       	sbiw	r28, 0x14	; 20
    2f90:	0f b6       	in	r0, 0x3f	; 63
    2f92:	f8 94       	cli
    2f94:	de bf       	out	0x3e, r29	; 62
    2f96:	0f be       	out	0x3f, r0	; 63
    2f98:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	char *i=0;
	itoa(data,buffer,10);
    2f9a:	be 01       	movw	r22, r28
    2f9c:	6f 5f       	subi	r22, 0xFF	; 255
    2f9e:	7f 4f       	sbci	r23, 0xFF	; 255
    2fa0:	4a e0       	ldi	r20, 0x0A	; 10
    2fa2:	50 e0       	ldi	r21, 0x00	; 0
    2fa4:	0e 94 a3 1a 	call	0x3546	; 0x3546 <itoa>
	i=buffer;
	while(*i)
    2fa8:	89 81       	ldd	r24, Y+1	; 0x01
    2faa:	88 23       	and	r24, r24
    2fac:	51 f0       	breq	.+20     	; 0x2fc2 <_Z17UART1TransmitDatai+0x40>
    2fae:	8e 01       	movw	r16, r28
    2fb0:	0e 5f       	subi	r16, 0xFE	; 254
    2fb2:	1f 4f       	sbci	r17, 0xFF	; 255
	UART1Transmit(*i++);
    2fb4:	0e 94 77 17 	call	0x2eee	; 0x2eee <_Z13UART1Transmith>
{
	char buffer[20];
	char *i=0;
	itoa(data,buffer,10);
	i=buffer;
	while(*i)
    2fb8:	f8 01       	movw	r30, r16
    2fba:	81 91       	ld	r24, Z+
    2fbc:	8f 01       	movw	r16, r30
    2fbe:	88 23       	and	r24, r24
    2fc0:	c9 f7       	brne	.-14     	; 0x2fb4 <_Z17UART1TransmitDatai+0x32>
	UART1Transmit(*i++);
}
    2fc2:	64 96       	adiw	r28, 0x14	; 20
    2fc4:	0f b6       	in	r0, 0x3f	; 63
    2fc6:	f8 94       	cli
    2fc8:	de bf       	out	0x3e, r29	; 62
    2fca:	0f be       	out	0x3f, r0	; 63
    2fcc:	cd bf       	out	0x3d, r28	; 61
    2fce:	df 91       	pop	r29
    2fd0:	cf 91       	pop	r28
    2fd2:	1f 91       	pop	r17
    2fd4:	0f 91       	pop	r16
    2fd6:	08 95       	ret

00002fd8 <_Z17UART2TransmitDatai>:

void UART2TransmitData(int data)
{
    2fd8:	0f 93       	push	r16
    2fda:	1f 93       	push	r17
    2fdc:	cf 93       	push	r28
    2fde:	df 93       	push	r29
    2fe0:	cd b7       	in	r28, 0x3d	; 61
    2fe2:	de b7       	in	r29, 0x3e	; 62
    2fe4:	64 97       	sbiw	r28, 0x14	; 20
    2fe6:	0f b6       	in	r0, 0x3f	; 63
    2fe8:	f8 94       	cli
    2fea:	de bf       	out	0x3e, r29	; 62
    2fec:	0f be       	out	0x3f, r0	; 63
    2fee:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	char *i=0;
	itoa(data,buffer,10);
    2ff0:	be 01       	movw	r22, r28
    2ff2:	6f 5f       	subi	r22, 0xFF	; 255
    2ff4:	7f 4f       	sbci	r23, 0xFF	; 255
    2ff6:	4a e0       	ldi	r20, 0x0A	; 10
    2ff8:	50 e0       	ldi	r21, 0x00	; 0
    2ffa:	0e 94 a3 1a 	call	0x3546	; 0x3546 <itoa>
	i=buffer;
	while(*i)
    2ffe:	89 81       	ldd	r24, Y+1	; 0x01
    3000:	88 23       	and	r24, r24
    3002:	51 f0       	breq	.+20     	; 0x3018 <_Z17UART2TransmitDatai+0x40>
    3004:	8e 01       	movw	r16, r28
    3006:	0e 5f       	subi	r16, 0xFE	; 254
    3008:	1f 4f       	sbci	r17, 0xFF	; 255
	UART2Transmit(*i++);
    300a:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
{
	char buffer[20];
	char *i=0;
	itoa(data,buffer,10);
	i=buffer;
	while(*i)
    300e:	f8 01       	movw	r30, r16
    3010:	81 91       	ld	r24, Z+
    3012:	8f 01       	movw	r16, r30
    3014:	88 23       	and	r24, r24
    3016:	c9 f7       	brne	.-14     	; 0x300a <_Z17UART2TransmitDatai+0x32>
	UART2Transmit(*i++);
}
    3018:	64 96       	adiw	r28, 0x14	; 20
    301a:	0f b6       	in	r0, 0x3f	; 63
    301c:	f8 94       	cli
    301e:	de bf       	out	0x3e, r29	; 62
    3020:	0f be       	out	0x3f, r0	; 63
    3022:	cd bf       	out	0x3d, r28	; 61
    3024:	df 91       	pop	r29
    3026:	cf 91       	pop	r28
    3028:	1f 91       	pop	r17
    302a:	0f 91       	pop	r16
    302c:	08 95       	ret

0000302e <_Z19UART0TransmitStringPKc>:


void UART0TransmitString(const char *s)
{
    302e:	cf 93       	push	r28
    3030:	df 93       	push	r29
    3032:	ec 01       	movw	r28, r24
	while(*s)
    3034:	88 81       	ld	r24, Y
    3036:	88 23       	and	r24, r24
    3038:	31 f0       	breq	.+12     	; 0x3046 <_Z19UART0TransmitStringPKc+0x18>
	while(*i)
	UART2Transmit(*i++);
}


void UART0TransmitString(const char *s)
    303a:	21 96       	adiw	r28, 0x01	; 1
{
	while(*s)
		UART0Transmit(*s++);
    303c:	0e 94 6f 17 	call	0x2ede	; 0x2ede <_Z13UART0Transmith>
}


void UART0TransmitString(const char *s)
{
	while(*s)
    3040:	89 91       	ld	r24, Y+
    3042:	88 23       	and	r24, r24
    3044:	d9 f7       	brne	.-10     	; 0x303c <_Z19UART0TransmitStringPKc+0xe>
		UART0Transmit(*s++);
}
    3046:	df 91       	pop	r29
    3048:	cf 91       	pop	r28
    304a:	08 95       	ret

0000304c <_Z19UART1TransmitStringPKc>:

void UART1TransmitString(const char *s)
{
    304c:	cf 93       	push	r28
    304e:	df 93       	push	r29
    3050:	ec 01       	movw	r28, r24
	while(*s)
    3052:	88 81       	ld	r24, Y
    3054:	88 23       	and	r24, r24
    3056:	31 f0       	breq	.+12     	; 0x3064 <_Z19UART1TransmitStringPKc+0x18>
{
	while(*s)
		UART0Transmit(*s++);
}

void UART1TransmitString(const char *s)
    3058:	21 96       	adiw	r28, 0x01	; 1
{
	while(*s)
	UART1Transmit(*s++);
    305a:	0e 94 77 17 	call	0x2eee	; 0x2eee <_Z13UART1Transmith>
		UART0Transmit(*s++);
}

void UART1TransmitString(const char *s)
{
	while(*s)
    305e:	89 91       	ld	r24, Y+
    3060:	88 23       	and	r24, r24
    3062:	d9 f7       	brne	.-10     	; 0x305a <_Z19UART1TransmitStringPKc+0xe>
	UART1Transmit(*s++);
}
    3064:	df 91       	pop	r29
    3066:	cf 91       	pop	r28
    3068:	08 95       	ret

0000306a <_Z19UART2TransmitStringPKc>:


void UART2TransmitString(const char *s)
{
    306a:	cf 93       	push	r28
    306c:	df 93       	push	r29
    306e:	ec 01       	movw	r28, r24
	while(*s)
    3070:	88 81       	ld	r24, Y
    3072:	88 23       	and	r24, r24
    3074:	31 f0       	breq	.+12     	; 0x3082 <_Z19UART2TransmitStringPKc+0x18>
	while(*s)
	UART1Transmit(*s++);
}


void UART2TransmitString(const char *s)
    3076:	21 96       	adiw	r28, 0x01	; 1
{
	while(*s)
	UART2Transmit(*s++);
    3078:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_Z13UART2Transmith>
}


void UART2TransmitString(const char *s)
{
	while(*s)
    307c:	89 91       	ld	r24, Y+
    307e:	88 23       	and	r24, r24
    3080:	d9 f7       	brne	.-10     	; 0x3078 <_Z19UART2TransmitStringPKc+0xe>
	UART2Transmit(*s++);
}
    3082:	df 91       	pop	r29
    3084:	cf 91       	pop	r28
    3086:	08 95       	ret

00003088 <__vector_25>:

ISR(USART0_RX_vect)
{
    3088:	1f 92       	push	r1
    308a:	0f 92       	push	r0
    308c:	0f b6       	in	r0, 0x3f	; 63
    308e:	0f 92       	push	r0
    3090:	11 24       	eor	r1, r1
    3092:	8f 93       	push	r24
	buffer=UDR0;
    3094:	80 91 c6 00 	lds	r24, 0x00C6
    3098:	80 93 d8 02 	sts	0x02D8, r24
	
}
    309c:	8f 91       	pop	r24
    309e:	0f 90       	pop	r0
    30a0:	0f be       	out	0x3f, r0	; 63
    30a2:	0f 90       	pop	r0
    30a4:	1f 90       	pop	r1
    30a6:	18 95       	reti

000030a8 <__vector_36>:

ISR(USART1_RX_vect)
{
    30a8:	1f 92       	push	r1
    30aa:	0f 92       	push	r0
    30ac:	0f b6       	in	r0, 0x3f	; 63
    30ae:	0f 92       	push	r0
    30b0:	11 24       	eor	r1, r1
    30b2:	8f 93       	push	r24
	buffer1=UDR1;
    30b4:	80 91 ce 00 	lds	r24, 0x00CE
    30b8:	80 93 d7 02 	sts	0x02D7, r24
	
}
    30bc:	8f 91       	pop	r24
    30be:	0f 90       	pop	r0
    30c0:	0f be       	out	0x3f, r0	; 63
    30c2:	0f 90       	pop	r0
    30c4:	1f 90       	pop	r1
    30c6:	18 95       	reti

000030c8 <__vector_51>:

ISR(USART2_RX_vect)
{
    30c8:	1f 92       	push	r1
    30ca:	0f 92       	push	r0
    30cc:	0f b6       	in	r0, 0x3f	; 63
    30ce:	0f 92       	push	r0
    30d0:	11 24       	eor	r1, r1
    30d2:	8f 93       	push	r24
	buffer2=UDR2;
    30d4:	80 91 d6 00 	lds	r24, 0x00D6
    30d8:	80 93 d6 02 	sts	0x02D6, r24
	
}
    30dc:	8f 91       	pop	r24
    30de:	0f 90       	pop	r0
    30e0:	0f be       	out	0x3f, r0	; 63
    30e2:	0f 90       	pop	r0
    30e4:	1f 90       	pop	r1
    30e6:	18 95       	reti

000030e8 <__subsf3>:
    30e8:	50 58       	subi	r21, 0x80	; 128

000030ea <__addsf3>:
    30ea:	bb 27       	eor	r27, r27
    30ec:	aa 27       	eor	r26, r26
    30ee:	0e d0       	rcall	.+28     	; 0x310c <__addsf3x>
    30f0:	75 c1       	rjmp	.+746    	; 0x33dc <__fp_round>
    30f2:	66 d1       	rcall	.+716    	; 0x33c0 <__fp_pscA>
    30f4:	30 f0       	brcs	.+12     	; 0x3102 <__addsf3+0x18>
    30f6:	6b d1       	rcall	.+726    	; 0x33ce <__fp_pscB>
    30f8:	20 f0       	brcs	.+8      	; 0x3102 <__addsf3+0x18>
    30fa:	31 f4       	brne	.+12     	; 0x3108 <__addsf3+0x1e>
    30fc:	9f 3f       	cpi	r25, 0xFF	; 255
    30fe:	11 f4       	brne	.+4      	; 0x3104 <__addsf3+0x1a>
    3100:	1e f4       	brtc	.+6      	; 0x3108 <__addsf3+0x1e>
    3102:	5b c1       	rjmp	.+694    	; 0x33ba <__fp_nan>
    3104:	0e f4       	brtc	.+2      	; 0x3108 <__addsf3+0x1e>
    3106:	e0 95       	com	r30
    3108:	e7 fb       	bst	r30, 7
    310a:	51 c1       	rjmp	.+674    	; 0x33ae <__fp_inf>

0000310c <__addsf3x>:
    310c:	e9 2f       	mov	r30, r25
    310e:	77 d1       	rcall	.+750    	; 0x33fe <__fp_split3>
    3110:	80 f3       	brcs	.-32     	; 0x30f2 <__addsf3+0x8>
    3112:	ba 17       	cp	r27, r26
    3114:	62 07       	cpc	r22, r18
    3116:	73 07       	cpc	r23, r19
    3118:	84 07       	cpc	r24, r20
    311a:	95 07       	cpc	r25, r21
    311c:	18 f0       	brcs	.+6      	; 0x3124 <__addsf3x+0x18>
    311e:	71 f4       	brne	.+28     	; 0x313c <__addsf3x+0x30>
    3120:	9e f5       	brtc	.+102    	; 0x3188 <__addsf3x+0x7c>
    3122:	8f c1       	rjmp	.+798    	; 0x3442 <__fp_zero>
    3124:	0e f4       	brtc	.+2      	; 0x3128 <__addsf3x+0x1c>
    3126:	e0 95       	com	r30
    3128:	0b 2e       	mov	r0, r27
    312a:	ba 2f       	mov	r27, r26
    312c:	a0 2d       	mov	r26, r0
    312e:	0b 01       	movw	r0, r22
    3130:	b9 01       	movw	r22, r18
    3132:	90 01       	movw	r18, r0
    3134:	0c 01       	movw	r0, r24
    3136:	ca 01       	movw	r24, r20
    3138:	a0 01       	movw	r20, r0
    313a:	11 24       	eor	r1, r1
    313c:	ff 27       	eor	r31, r31
    313e:	59 1b       	sub	r21, r25
    3140:	99 f0       	breq	.+38     	; 0x3168 <__addsf3x+0x5c>
    3142:	59 3f       	cpi	r21, 0xF9	; 249
    3144:	50 f4       	brcc	.+20     	; 0x315a <__addsf3x+0x4e>
    3146:	50 3e       	cpi	r21, 0xE0	; 224
    3148:	68 f1       	brcs	.+90     	; 0x31a4 <__addsf3x+0x98>
    314a:	1a 16       	cp	r1, r26
    314c:	f0 40       	sbci	r31, 0x00	; 0
    314e:	a2 2f       	mov	r26, r18
    3150:	23 2f       	mov	r18, r19
    3152:	34 2f       	mov	r19, r20
    3154:	44 27       	eor	r20, r20
    3156:	58 5f       	subi	r21, 0xF8	; 248
    3158:	f3 cf       	rjmp	.-26     	; 0x3140 <__addsf3x+0x34>
    315a:	46 95       	lsr	r20
    315c:	37 95       	ror	r19
    315e:	27 95       	ror	r18
    3160:	a7 95       	ror	r26
    3162:	f0 40       	sbci	r31, 0x00	; 0
    3164:	53 95       	inc	r21
    3166:	c9 f7       	brne	.-14     	; 0x315a <__addsf3x+0x4e>
    3168:	7e f4       	brtc	.+30     	; 0x3188 <__addsf3x+0x7c>
    316a:	1f 16       	cp	r1, r31
    316c:	ba 0b       	sbc	r27, r26
    316e:	62 0b       	sbc	r22, r18
    3170:	73 0b       	sbc	r23, r19
    3172:	84 0b       	sbc	r24, r20
    3174:	ba f0       	brmi	.+46     	; 0x31a4 <__addsf3x+0x98>
    3176:	91 50       	subi	r25, 0x01	; 1
    3178:	a1 f0       	breq	.+40     	; 0x31a2 <__addsf3x+0x96>
    317a:	ff 0f       	add	r31, r31
    317c:	bb 1f       	adc	r27, r27
    317e:	66 1f       	adc	r22, r22
    3180:	77 1f       	adc	r23, r23
    3182:	88 1f       	adc	r24, r24
    3184:	c2 f7       	brpl	.-16     	; 0x3176 <__addsf3x+0x6a>
    3186:	0e c0       	rjmp	.+28     	; 0x31a4 <__addsf3x+0x98>
    3188:	ba 0f       	add	r27, r26
    318a:	62 1f       	adc	r22, r18
    318c:	73 1f       	adc	r23, r19
    318e:	84 1f       	adc	r24, r20
    3190:	48 f4       	brcc	.+18     	; 0x31a4 <__addsf3x+0x98>
    3192:	87 95       	ror	r24
    3194:	77 95       	ror	r23
    3196:	67 95       	ror	r22
    3198:	b7 95       	ror	r27
    319a:	f7 95       	ror	r31
    319c:	9e 3f       	cpi	r25, 0xFE	; 254
    319e:	08 f0       	brcs	.+2      	; 0x31a2 <__addsf3x+0x96>
    31a0:	b3 cf       	rjmp	.-154    	; 0x3108 <__addsf3+0x1e>
    31a2:	93 95       	inc	r25
    31a4:	88 0f       	add	r24, r24
    31a6:	08 f0       	brcs	.+2      	; 0x31aa <__addsf3x+0x9e>
    31a8:	99 27       	eor	r25, r25
    31aa:	ee 0f       	add	r30, r30
    31ac:	97 95       	ror	r25
    31ae:	87 95       	ror	r24
    31b0:	08 95       	ret

000031b2 <__cmpsf2>:
    31b2:	d9 d0       	rcall	.+434    	; 0x3366 <__fp_cmp>
    31b4:	08 f4       	brcc	.+2      	; 0x31b8 <__cmpsf2+0x6>
    31b6:	81 e0       	ldi	r24, 0x01	; 1
    31b8:	08 95       	ret

000031ba <__divsf3>:
    31ba:	0c d0       	rcall	.+24     	; 0x31d4 <__divsf3x>
    31bc:	0f c1       	rjmp	.+542    	; 0x33dc <__fp_round>
    31be:	07 d1       	rcall	.+526    	; 0x33ce <__fp_pscB>
    31c0:	40 f0       	brcs	.+16     	; 0x31d2 <__divsf3+0x18>
    31c2:	fe d0       	rcall	.+508    	; 0x33c0 <__fp_pscA>
    31c4:	30 f0       	brcs	.+12     	; 0x31d2 <__divsf3+0x18>
    31c6:	21 f4       	brne	.+8      	; 0x31d0 <__divsf3+0x16>
    31c8:	5f 3f       	cpi	r21, 0xFF	; 255
    31ca:	19 f0       	breq	.+6      	; 0x31d2 <__divsf3+0x18>
    31cc:	f0 c0       	rjmp	.+480    	; 0x33ae <__fp_inf>
    31ce:	51 11       	cpse	r21, r1
    31d0:	39 c1       	rjmp	.+626    	; 0x3444 <__fp_szero>
    31d2:	f3 c0       	rjmp	.+486    	; 0x33ba <__fp_nan>

000031d4 <__divsf3x>:
    31d4:	14 d1       	rcall	.+552    	; 0x33fe <__fp_split3>
    31d6:	98 f3       	brcs	.-26     	; 0x31be <__divsf3+0x4>

000031d8 <__divsf3_pse>:
    31d8:	99 23       	and	r25, r25
    31da:	c9 f3       	breq	.-14     	; 0x31ce <__divsf3+0x14>
    31dc:	55 23       	and	r21, r21
    31de:	b1 f3       	breq	.-20     	; 0x31cc <__divsf3+0x12>
    31e0:	95 1b       	sub	r25, r21
    31e2:	55 0b       	sbc	r21, r21
    31e4:	bb 27       	eor	r27, r27
    31e6:	aa 27       	eor	r26, r26
    31e8:	62 17       	cp	r22, r18
    31ea:	73 07       	cpc	r23, r19
    31ec:	84 07       	cpc	r24, r20
    31ee:	38 f0       	brcs	.+14     	; 0x31fe <__divsf3_pse+0x26>
    31f0:	9f 5f       	subi	r25, 0xFF	; 255
    31f2:	5f 4f       	sbci	r21, 0xFF	; 255
    31f4:	22 0f       	add	r18, r18
    31f6:	33 1f       	adc	r19, r19
    31f8:	44 1f       	adc	r20, r20
    31fa:	aa 1f       	adc	r26, r26
    31fc:	a9 f3       	breq	.-22     	; 0x31e8 <__divsf3_pse+0x10>
    31fe:	33 d0       	rcall	.+102    	; 0x3266 <__divsf3_pse+0x8e>
    3200:	0e 2e       	mov	r0, r30
    3202:	3a f0       	brmi	.+14     	; 0x3212 <__divsf3_pse+0x3a>
    3204:	e0 e8       	ldi	r30, 0x80	; 128
    3206:	30 d0       	rcall	.+96     	; 0x3268 <__divsf3_pse+0x90>
    3208:	91 50       	subi	r25, 0x01	; 1
    320a:	50 40       	sbci	r21, 0x00	; 0
    320c:	e6 95       	lsr	r30
    320e:	00 1c       	adc	r0, r0
    3210:	ca f7       	brpl	.-14     	; 0x3204 <__divsf3_pse+0x2c>
    3212:	29 d0       	rcall	.+82     	; 0x3266 <__divsf3_pse+0x8e>
    3214:	fe 2f       	mov	r31, r30
    3216:	27 d0       	rcall	.+78     	; 0x3266 <__divsf3_pse+0x8e>
    3218:	66 0f       	add	r22, r22
    321a:	77 1f       	adc	r23, r23
    321c:	88 1f       	adc	r24, r24
    321e:	bb 1f       	adc	r27, r27
    3220:	26 17       	cp	r18, r22
    3222:	37 07       	cpc	r19, r23
    3224:	48 07       	cpc	r20, r24
    3226:	ab 07       	cpc	r26, r27
    3228:	b0 e8       	ldi	r27, 0x80	; 128
    322a:	09 f0       	breq	.+2      	; 0x322e <__divsf3_pse+0x56>
    322c:	bb 0b       	sbc	r27, r27
    322e:	80 2d       	mov	r24, r0
    3230:	bf 01       	movw	r22, r30
    3232:	ff 27       	eor	r31, r31
    3234:	93 58       	subi	r25, 0x83	; 131
    3236:	5f 4f       	sbci	r21, 0xFF	; 255
    3238:	2a f0       	brmi	.+10     	; 0x3244 <__divsf3_pse+0x6c>
    323a:	9e 3f       	cpi	r25, 0xFE	; 254
    323c:	51 05       	cpc	r21, r1
    323e:	68 f0       	brcs	.+26     	; 0x325a <__divsf3_pse+0x82>
    3240:	b6 c0       	rjmp	.+364    	; 0x33ae <__fp_inf>
    3242:	00 c1       	rjmp	.+512    	; 0x3444 <__fp_szero>
    3244:	5f 3f       	cpi	r21, 0xFF	; 255
    3246:	ec f3       	brlt	.-6      	; 0x3242 <__divsf3_pse+0x6a>
    3248:	98 3e       	cpi	r25, 0xE8	; 232
    324a:	dc f3       	brlt	.-10     	; 0x3242 <__divsf3_pse+0x6a>
    324c:	86 95       	lsr	r24
    324e:	77 95       	ror	r23
    3250:	67 95       	ror	r22
    3252:	b7 95       	ror	r27
    3254:	f7 95       	ror	r31
    3256:	9f 5f       	subi	r25, 0xFF	; 255
    3258:	c9 f7       	brne	.-14     	; 0x324c <__divsf3_pse+0x74>
    325a:	88 0f       	add	r24, r24
    325c:	91 1d       	adc	r25, r1
    325e:	96 95       	lsr	r25
    3260:	87 95       	ror	r24
    3262:	97 f9       	bld	r25, 7
    3264:	08 95       	ret
    3266:	e1 e0       	ldi	r30, 0x01	; 1
    3268:	66 0f       	add	r22, r22
    326a:	77 1f       	adc	r23, r23
    326c:	88 1f       	adc	r24, r24
    326e:	bb 1f       	adc	r27, r27
    3270:	62 17       	cp	r22, r18
    3272:	73 07       	cpc	r23, r19
    3274:	84 07       	cpc	r24, r20
    3276:	ba 07       	cpc	r27, r26
    3278:	20 f0       	brcs	.+8      	; 0x3282 <__divsf3_pse+0xaa>
    327a:	62 1b       	sub	r22, r18
    327c:	73 0b       	sbc	r23, r19
    327e:	84 0b       	sbc	r24, r20
    3280:	ba 0b       	sbc	r27, r26
    3282:	ee 1f       	adc	r30, r30
    3284:	88 f7       	brcc	.-30     	; 0x3268 <__divsf3_pse+0x90>
    3286:	e0 95       	com	r30
    3288:	08 95       	ret

0000328a <__fixsfsi>:
    328a:	04 d0       	rcall	.+8      	; 0x3294 <__fixunssfsi>
    328c:	68 94       	set
    328e:	b1 11       	cpse	r27, r1
    3290:	d9 c0       	rjmp	.+434    	; 0x3444 <__fp_szero>
    3292:	08 95       	ret

00003294 <__fixunssfsi>:
    3294:	bc d0       	rcall	.+376    	; 0x340e <__fp_splitA>
    3296:	88 f0       	brcs	.+34     	; 0x32ba <__fixunssfsi+0x26>
    3298:	9f 57       	subi	r25, 0x7F	; 127
    329a:	90 f0       	brcs	.+36     	; 0x32c0 <__fixunssfsi+0x2c>
    329c:	b9 2f       	mov	r27, r25
    329e:	99 27       	eor	r25, r25
    32a0:	b7 51       	subi	r27, 0x17	; 23
    32a2:	a0 f0       	brcs	.+40     	; 0x32cc <__fixunssfsi+0x38>
    32a4:	d1 f0       	breq	.+52     	; 0x32da <__fixunssfsi+0x46>
    32a6:	66 0f       	add	r22, r22
    32a8:	77 1f       	adc	r23, r23
    32aa:	88 1f       	adc	r24, r24
    32ac:	99 1f       	adc	r25, r25
    32ae:	1a f0       	brmi	.+6      	; 0x32b6 <__fixunssfsi+0x22>
    32b0:	ba 95       	dec	r27
    32b2:	c9 f7       	brne	.-14     	; 0x32a6 <__fixunssfsi+0x12>
    32b4:	12 c0       	rjmp	.+36     	; 0x32da <__fixunssfsi+0x46>
    32b6:	b1 30       	cpi	r27, 0x01	; 1
    32b8:	81 f0       	breq	.+32     	; 0x32da <__fixunssfsi+0x46>
    32ba:	c3 d0       	rcall	.+390    	; 0x3442 <__fp_zero>
    32bc:	b1 e0       	ldi	r27, 0x01	; 1
    32be:	08 95       	ret
    32c0:	c0 c0       	rjmp	.+384    	; 0x3442 <__fp_zero>
    32c2:	67 2f       	mov	r22, r23
    32c4:	78 2f       	mov	r23, r24
    32c6:	88 27       	eor	r24, r24
    32c8:	b8 5f       	subi	r27, 0xF8	; 248
    32ca:	39 f0       	breq	.+14     	; 0x32da <__fixunssfsi+0x46>
    32cc:	b9 3f       	cpi	r27, 0xF9	; 249
    32ce:	cc f3       	brlt	.-14     	; 0x32c2 <__fixunssfsi+0x2e>
    32d0:	86 95       	lsr	r24
    32d2:	77 95       	ror	r23
    32d4:	67 95       	ror	r22
    32d6:	b3 95       	inc	r27
    32d8:	d9 f7       	brne	.-10     	; 0x32d0 <__fixunssfsi+0x3c>
    32da:	3e f4       	brtc	.+14     	; 0x32ea <__fixunssfsi+0x56>
    32dc:	90 95       	com	r25
    32de:	80 95       	com	r24
    32e0:	70 95       	com	r23
    32e2:	61 95       	neg	r22
    32e4:	7f 4f       	sbci	r23, 0xFF	; 255
    32e6:	8f 4f       	sbci	r24, 0xFF	; 255
    32e8:	9f 4f       	sbci	r25, 0xFF	; 255
    32ea:	08 95       	ret

000032ec <__floatunsisf>:
    32ec:	e8 94       	clt
    32ee:	09 c0       	rjmp	.+18     	; 0x3302 <__floatsisf+0x12>

000032f0 <__floatsisf>:
    32f0:	97 fb       	bst	r25, 7
    32f2:	3e f4       	brtc	.+14     	; 0x3302 <__floatsisf+0x12>
    32f4:	90 95       	com	r25
    32f6:	80 95       	com	r24
    32f8:	70 95       	com	r23
    32fa:	61 95       	neg	r22
    32fc:	7f 4f       	sbci	r23, 0xFF	; 255
    32fe:	8f 4f       	sbci	r24, 0xFF	; 255
    3300:	9f 4f       	sbci	r25, 0xFF	; 255
    3302:	99 23       	and	r25, r25
    3304:	a9 f0       	breq	.+42     	; 0x3330 <__floatsisf+0x40>
    3306:	f9 2f       	mov	r31, r25
    3308:	96 e9       	ldi	r25, 0x96	; 150
    330a:	bb 27       	eor	r27, r27
    330c:	93 95       	inc	r25
    330e:	f6 95       	lsr	r31
    3310:	87 95       	ror	r24
    3312:	77 95       	ror	r23
    3314:	67 95       	ror	r22
    3316:	b7 95       	ror	r27
    3318:	f1 11       	cpse	r31, r1
    331a:	f8 cf       	rjmp	.-16     	; 0x330c <__floatsisf+0x1c>
    331c:	fa f4       	brpl	.+62     	; 0x335c <__floatsisf+0x6c>
    331e:	bb 0f       	add	r27, r27
    3320:	11 f4       	brne	.+4      	; 0x3326 <__floatsisf+0x36>
    3322:	60 ff       	sbrs	r22, 0
    3324:	1b c0       	rjmp	.+54     	; 0x335c <__floatsisf+0x6c>
    3326:	6f 5f       	subi	r22, 0xFF	; 255
    3328:	7f 4f       	sbci	r23, 0xFF	; 255
    332a:	8f 4f       	sbci	r24, 0xFF	; 255
    332c:	9f 4f       	sbci	r25, 0xFF	; 255
    332e:	16 c0       	rjmp	.+44     	; 0x335c <__floatsisf+0x6c>
    3330:	88 23       	and	r24, r24
    3332:	11 f0       	breq	.+4      	; 0x3338 <__floatsisf+0x48>
    3334:	96 e9       	ldi	r25, 0x96	; 150
    3336:	11 c0       	rjmp	.+34     	; 0x335a <__floatsisf+0x6a>
    3338:	77 23       	and	r23, r23
    333a:	21 f0       	breq	.+8      	; 0x3344 <__floatsisf+0x54>
    333c:	9e e8       	ldi	r25, 0x8E	; 142
    333e:	87 2f       	mov	r24, r23
    3340:	76 2f       	mov	r23, r22
    3342:	05 c0       	rjmp	.+10     	; 0x334e <__floatsisf+0x5e>
    3344:	66 23       	and	r22, r22
    3346:	71 f0       	breq	.+28     	; 0x3364 <__floatsisf+0x74>
    3348:	96 e8       	ldi	r25, 0x86	; 134
    334a:	86 2f       	mov	r24, r22
    334c:	70 e0       	ldi	r23, 0x00	; 0
    334e:	60 e0       	ldi	r22, 0x00	; 0
    3350:	2a f0       	brmi	.+10     	; 0x335c <__floatsisf+0x6c>
    3352:	9a 95       	dec	r25
    3354:	66 0f       	add	r22, r22
    3356:	77 1f       	adc	r23, r23
    3358:	88 1f       	adc	r24, r24
    335a:	da f7       	brpl	.-10     	; 0x3352 <__floatsisf+0x62>
    335c:	88 0f       	add	r24, r24
    335e:	96 95       	lsr	r25
    3360:	87 95       	ror	r24
    3362:	97 f9       	bld	r25, 7
    3364:	08 95       	ret

00003366 <__fp_cmp>:
    3366:	99 0f       	add	r25, r25
    3368:	00 08       	sbc	r0, r0
    336a:	55 0f       	add	r21, r21
    336c:	aa 0b       	sbc	r26, r26
    336e:	e0 e8       	ldi	r30, 0x80	; 128
    3370:	fe ef       	ldi	r31, 0xFE	; 254
    3372:	16 16       	cp	r1, r22
    3374:	17 06       	cpc	r1, r23
    3376:	e8 07       	cpc	r30, r24
    3378:	f9 07       	cpc	r31, r25
    337a:	c0 f0       	brcs	.+48     	; 0x33ac <__fp_cmp+0x46>
    337c:	12 16       	cp	r1, r18
    337e:	13 06       	cpc	r1, r19
    3380:	e4 07       	cpc	r30, r20
    3382:	f5 07       	cpc	r31, r21
    3384:	98 f0       	brcs	.+38     	; 0x33ac <__fp_cmp+0x46>
    3386:	62 1b       	sub	r22, r18
    3388:	73 0b       	sbc	r23, r19
    338a:	84 0b       	sbc	r24, r20
    338c:	95 0b       	sbc	r25, r21
    338e:	39 f4       	brne	.+14     	; 0x339e <__fp_cmp+0x38>
    3390:	0a 26       	eor	r0, r26
    3392:	61 f0       	breq	.+24     	; 0x33ac <__fp_cmp+0x46>
    3394:	23 2b       	or	r18, r19
    3396:	24 2b       	or	r18, r20
    3398:	25 2b       	or	r18, r21
    339a:	21 f4       	brne	.+8      	; 0x33a4 <__fp_cmp+0x3e>
    339c:	08 95       	ret
    339e:	0a 26       	eor	r0, r26
    33a0:	09 f4       	brne	.+2      	; 0x33a4 <__fp_cmp+0x3e>
    33a2:	a1 40       	sbci	r26, 0x01	; 1
    33a4:	a6 95       	lsr	r26
    33a6:	8f ef       	ldi	r24, 0xFF	; 255
    33a8:	81 1d       	adc	r24, r1
    33aa:	81 1d       	adc	r24, r1
    33ac:	08 95       	ret

000033ae <__fp_inf>:
    33ae:	97 f9       	bld	r25, 7
    33b0:	9f 67       	ori	r25, 0x7F	; 127
    33b2:	80 e8       	ldi	r24, 0x80	; 128
    33b4:	70 e0       	ldi	r23, 0x00	; 0
    33b6:	60 e0       	ldi	r22, 0x00	; 0
    33b8:	08 95       	ret

000033ba <__fp_nan>:
    33ba:	9f ef       	ldi	r25, 0xFF	; 255
    33bc:	80 ec       	ldi	r24, 0xC0	; 192
    33be:	08 95       	ret

000033c0 <__fp_pscA>:
    33c0:	00 24       	eor	r0, r0
    33c2:	0a 94       	dec	r0
    33c4:	16 16       	cp	r1, r22
    33c6:	17 06       	cpc	r1, r23
    33c8:	18 06       	cpc	r1, r24
    33ca:	09 06       	cpc	r0, r25
    33cc:	08 95       	ret

000033ce <__fp_pscB>:
    33ce:	00 24       	eor	r0, r0
    33d0:	0a 94       	dec	r0
    33d2:	12 16       	cp	r1, r18
    33d4:	13 06       	cpc	r1, r19
    33d6:	14 06       	cpc	r1, r20
    33d8:	05 06       	cpc	r0, r21
    33da:	08 95       	ret

000033dc <__fp_round>:
    33dc:	09 2e       	mov	r0, r25
    33de:	03 94       	inc	r0
    33e0:	00 0c       	add	r0, r0
    33e2:	11 f4       	brne	.+4      	; 0x33e8 <__fp_round+0xc>
    33e4:	88 23       	and	r24, r24
    33e6:	52 f0       	brmi	.+20     	; 0x33fc <__fp_round+0x20>
    33e8:	bb 0f       	add	r27, r27
    33ea:	40 f4       	brcc	.+16     	; 0x33fc <__fp_round+0x20>
    33ec:	bf 2b       	or	r27, r31
    33ee:	11 f4       	brne	.+4      	; 0x33f4 <__fp_round+0x18>
    33f0:	60 ff       	sbrs	r22, 0
    33f2:	04 c0       	rjmp	.+8      	; 0x33fc <__fp_round+0x20>
    33f4:	6f 5f       	subi	r22, 0xFF	; 255
    33f6:	7f 4f       	sbci	r23, 0xFF	; 255
    33f8:	8f 4f       	sbci	r24, 0xFF	; 255
    33fa:	9f 4f       	sbci	r25, 0xFF	; 255
    33fc:	08 95       	ret

000033fe <__fp_split3>:
    33fe:	57 fd       	sbrc	r21, 7
    3400:	90 58       	subi	r25, 0x80	; 128
    3402:	44 0f       	add	r20, r20
    3404:	55 1f       	adc	r21, r21
    3406:	59 f0       	breq	.+22     	; 0x341e <__fp_splitA+0x10>
    3408:	5f 3f       	cpi	r21, 0xFF	; 255
    340a:	71 f0       	breq	.+28     	; 0x3428 <__fp_splitA+0x1a>
    340c:	47 95       	ror	r20

0000340e <__fp_splitA>:
    340e:	88 0f       	add	r24, r24
    3410:	97 fb       	bst	r25, 7
    3412:	99 1f       	adc	r25, r25
    3414:	61 f0       	breq	.+24     	; 0x342e <__fp_splitA+0x20>
    3416:	9f 3f       	cpi	r25, 0xFF	; 255
    3418:	79 f0       	breq	.+30     	; 0x3438 <__fp_splitA+0x2a>
    341a:	87 95       	ror	r24
    341c:	08 95       	ret
    341e:	12 16       	cp	r1, r18
    3420:	13 06       	cpc	r1, r19
    3422:	14 06       	cpc	r1, r20
    3424:	55 1f       	adc	r21, r21
    3426:	f2 cf       	rjmp	.-28     	; 0x340c <__fp_split3+0xe>
    3428:	46 95       	lsr	r20
    342a:	f1 df       	rcall	.-30     	; 0x340e <__fp_splitA>
    342c:	08 c0       	rjmp	.+16     	; 0x343e <__fp_splitA+0x30>
    342e:	16 16       	cp	r1, r22
    3430:	17 06       	cpc	r1, r23
    3432:	18 06       	cpc	r1, r24
    3434:	99 1f       	adc	r25, r25
    3436:	f1 cf       	rjmp	.-30     	; 0x341a <__fp_splitA+0xc>
    3438:	86 95       	lsr	r24
    343a:	71 05       	cpc	r23, r1
    343c:	61 05       	cpc	r22, r1
    343e:	08 94       	sec
    3440:	08 95       	ret

00003442 <__fp_zero>:
    3442:	e8 94       	clt

00003444 <__fp_szero>:
    3444:	bb 27       	eor	r27, r27
    3446:	66 27       	eor	r22, r22
    3448:	77 27       	eor	r23, r23
    344a:	cb 01       	movw	r24, r22
    344c:	97 f9       	bld	r25, 7
    344e:	08 95       	ret

00003450 <__gesf2>:
    3450:	8a df       	rcall	.-236    	; 0x3366 <__fp_cmp>
    3452:	08 f4       	brcc	.+2      	; 0x3456 <__gesf2+0x6>
    3454:	8f ef       	ldi	r24, 0xFF	; 255
    3456:	08 95       	ret

00003458 <__mulsf3>:
    3458:	0b d0       	rcall	.+22     	; 0x3470 <__mulsf3x>
    345a:	c0 cf       	rjmp	.-128    	; 0x33dc <__fp_round>
    345c:	b1 df       	rcall	.-158    	; 0x33c0 <__fp_pscA>
    345e:	28 f0       	brcs	.+10     	; 0x346a <__mulsf3+0x12>
    3460:	b6 df       	rcall	.-148    	; 0x33ce <__fp_pscB>
    3462:	18 f0       	brcs	.+6      	; 0x346a <__mulsf3+0x12>
    3464:	95 23       	and	r25, r21
    3466:	09 f0       	breq	.+2      	; 0x346a <__mulsf3+0x12>
    3468:	a2 cf       	rjmp	.-188    	; 0x33ae <__fp_inf>
    346a:	a7 cf       	rjmp	.-178    	; 0x33ba <__fp_nan>
    346c:	11 24       	eor	r1, r1
    346e:	ea cf       	rjmp	.-44     	; 0x3444 <__fp_szero>

00003470 <__mulsf3x>:
    3470:	c6 df       	rcall	.-116    	; 0x33fe <__fp_split3>
    3472:	a0 f3       	brcs	.-24     	; 0x345c <__mulsf3+0x4>

00003474 <__mulsf3_pse>:
    3474:	95 9f       	mul	r25, r21
    3476:	d1 f3       	breq	.-12     	; 0x346c <__mulsf3+0x14>
    3478:	95 0f       	add	r25, r21
    347a:	50 e0       	ldi	r21, 0x00	; 0
    347c:	55 1f       	adc	r21, r21
    347e:	62 9f       	mul	r22, r18
    3480:	f0 01       	movw	r30, r0
    3482:	72 9f       	mul	r23, r18
    3484:	bb 27       	eor	r27, r27
    3486:	f0 0d       	add	r31, r0
    3488:	b1 1d       	adc	r27, r1
    348a:	63 9f       	mul	r22, r19
    348c:	aa 27       	eor	r26, r26
    348e:	f0 0d       	add	r31, r0
    3490:	b1 1d       	adc	r27, r1
    3492:	aa 1f       	adc	r26, r26
    3494:	64 9f       	mul	r22, r20
    3496:	66 27       	eor	r22, r22
    3498:	b0 0d       	add	r27, r0
    349a:	a1 1d       	adc	r26, r1
    349c:	66 1f       	adc	r22, r22
    349e:	82 9f       	mul	r24, r18
    34a0:	22 27       	eor	r18, r18
    34a2:	b0 0d       	add	r27, r0
    34a4:	a1 1d       	adc	r26, r1
    34a6:	62 1f       	adc	r22, r18
    34a8:	73 9f       	mul	r23, r19
    34aa:	b0 0d       	add	r27, r0
    34ac:	a1 1d       	adc	r26, r1
    34ae:	62 1f       	adc	r22, r18
    34b0:	83 9f       	mul	r24, r19
    34b2:	a0 0d       	add	r26, r0
    34b4:	61 1d       	adc	r22, r1
    34b6:	22 1f       	adc	r18, r18
    34b8:	74 9f       	mul	r23, r20
    34ba:	33 27       	eor	r19, r19
    34bc:	a0 0d       	add	r26, r0
    34be:	61 1d       	adc	r22, r1
    34c0:	23 1f       	adc	r18, r19
    34c2:	84 9f       	mul	r24, r20
    34c4:	60 0d       	add	r22, r0
    34c6:	21 1d       	adc	r18, r1
    34c8:	82 2f       	mov	r24, r18
    34ca:	76 2f       	mov	r23, r22
    34cc:	6a 2f       	mov	r22, r26
    34ce:	11 24       	eor	r1, r1
    34d0:	9f 57       	subi	r25, 0x7F	; 127
    34d2:	50 40       	sbci	r21, 0x00	; 0
    34d4:	8a f0       	brmi	.+34     	; 0x34f8 <__mulsf3_pse+0x84>
    34d6:	e1 f0       	breq	.+56     	; 0x3510 <__mulsf3_pse+0x9c>
    34d8:	88 23       	and	r24, r24
    34da:	4a f0       	brmi	.+18     	; 0x34ee <__mulsf3_pse+0x7a>
    34dc:	ee 0f       	add	r30, r30
    34de:	ff 1f       	adc	r31, r31
    34e0:	bb 1f       	adc	r27, r27
    34e2:	66 1f       	adc	r22, r22
    34e4:	77 1f       	adc	r23, r23
    34e6:	88 1f       	adc	r24, r24
    34e8:	91 50       	subi	r25, 0x01	; 1
    34ea:	50 40       	sbci	r21, 0x00	; 0
    34ec:	a9 f7       	brne	.-22     	; 0x34d8 <__mulsf3_pse+0x64>
    34ee:	9e 3f       	cpi	r25, 0xFE	; 254
    34f0:	51 05       	cpc	r21, r1
    34f2:	70 f0       	brcs	.+28     	; 0x3510 <__mulsf3_pse+0x9c>
    34f4:	5c cf       	rjmp	.-328    	; 0x33ae <__fp_inf>
    34f6:	a6 cf       	rjmp	.-180    	; 0x3444 <__fp_szero>
    34f8:	5f 3f       	cpi	r21, 0xFF	; 255
    34fa:	ec f3       	brlt	.-6      	; 0x34f6 <__mulsf3_pse+0x82>
    34fc:	98 3e       	cpi	r25, 0xE8	; 232
    34fe:	dc f3       	brlt	.-10     	; 0x34f6 <__mulsf3_pse+0x82>
    3500:	86 95       	lsr	r24
    3502:	77 95       	ror	r23
    3504:	67 95       	ror	r22
    3506:	b7 95       	ror	r27
    3508:	f7 95       	ror	r31
    350a:	e7 95       	ror	r30
    350c:	9f 5f       	subi	r25, 0xFF	; 255
    350e:	c1 f7       	brne	.-16     	; 0x3500 <__mulsf3_pse+0x8c>
    3510:	fe 2b       	or	r31, r30
    3512:	88 0f       	add	r24, r24
    3514:	91 1d       	adc	r25, r1
    3516:	96 95       	lsr	r25
    3518:	87 95       	ror	r24
    351a:	97 f9       	bld	r25, 7
    351c:	08 95       	ret

0000351e <__udivmodhi4>:
    351e:	aa 1b       	sub	r26, r26
    3520:	bb 1b       	sub	r27, r27
    3522:	51 e1       	ldi	r21, 0x11	; 17
    3524:	07 c0       	rjmp	.+14     	; 0x3534 <__udivmodhi4_ep>

00003526 <__udivmodhi4_loop>:
    3526:	aa 1f       	adc	r26, r26
    3528:	bb 1f       	adc	r27, r27
    352a:	a6 17       	cp	r26, r22
    352c:	b7 07       	cpc	r27, r23
    352e:	10 f0       	brcs	.+4      	; 0x3534 <__udivmodhi4_ep>
    3530:	a6 1b       	sub	r26, r22
    3532:	b7 0b       	sbc	r27, r23

00003534 <__udivmodhi4_ep>:
    3534:	88 1f       	adc	r24, r24
    3536:	99 1f       	adc	r25, r25
    3538:	5a 95       	dec	r21
    353a:	a9 f7       	brne	.-22     	; 0x3526 <__udivmodhi4_loop>
    353c:	80 95       	com	r24
    353e:	90 95       	com	r25
    3540:	bc 01       	movw	r22, r24
    3542:	cd 01       	movw	r24, r26
    3544:	08 95       	ret

00003546 <itoa>:
    3546:	fb 01       	movw	r30, r22
    3548:	9f 01       	movw	r18, r30
    354a:	e8 94       	clt
    354c:	42 30       	cpi	r20, 0x02	; 2
    354e:	c4 f0       	brlt	.+48     	; 0x3580 <itoa+0x3a>
    3550:	45 32       	cpi	r20, 0x25	; 37
    3552:	b4 f4       	brge	.+44     	; 0x3580 <itoa+0x3a>
    3554:	4a 30       	cpi	r20, 0x0A	; 10
    3556:	29 f4       	brne	.+10     	; 0x3562 <itoa+0x1c>
    3558:	97 fb       	bst	r25, 7
    355a:	1e f4       	brtc	.+6      	; 0x3562 <itoa+0x1c>
    355c:	90 95       	com	r25
    355e:	81 95       	neg	r24
    3560:	9f 4f       	sbci	r25, 0xFF	; 255
    3562:	64 2f       	mov	r22, r20
    3564:	77 27       	eor	r23, r23
    3566:	0e 94 8f 1a 	call	0x351e	; 0x351e <__udivmodhi4>
    356a:	80 5d       	subi	r24, 0xD0	; 208
    356c:	8a 33       	cpi	r24, 0x3A	; 58
    356e:	0c f0       	brlt	.+2      	; 0x3572 <itoa+0x2c>
    3570:	89 5d       	subi	r24, 0xD9	; 217
    3572:	81 93       	st	Z+, r24
    3574:	cb 01       	movw	r24, r22
    3576:	00 97       	sbiw	r24, 0x00	; 0
    3578:	a1 f7       	brne	.-24     	; 0x3562 <itoa+0x1c>
    357a:	16 f4       	brtc	.+4      	; 0x3580 <itoa+0x3a>
    357c:	5d e2       	ldi	r21, 0x2D	; 45
    357e:	51 93       	st	Z+, r21
    3580:	10 82       	st	Z, r1
    3582:	c9 01       	movw	r24, r18
    3584:	0c 94 c4 1a 	jmp	0x3588	; 0x3588 <strrev>

00003588 <strrev>:
    3588:	dc 01       	movw	r26, r24
    358a:	fc 01       	movw	r30, r24
    358c:	67 2f       	mov	r22, r23
    358e:	71 91       	ld	r23, Z+
    3590:	77 23       	and	r23, r23
    3592:	e1 f7       	brne	.-8      	; 0x358c <strrev+0x4>
    3594:	32 97       	sbiw	r30, 0x02	; 2
    3596:	04 c0       	rjmp	.+8      	; 0x35a0 <strrev+0x18>
    3598:	7c 91       	ld	r23, X
    359a:	6d 93       	st	X+, r22
    359c:	70 83       	st	Z, r23
    359e:	62 91       	ld	r22, -Z
    35a0:	ae 17       	cp	r26, r30
    35a2:	bf 07       	cpc	r27, r31
    35a4:	c8 f3       	brcs	.-14     	; 0x3598 <strrev+0x10>
    35a6:	08 95       	ret

000035a8 <_exit>:
    35a8:	f8 94       	cli

000035aa <__stop_program>:
    35aa:	ff cf       	rjmp	.-2      	; 0x35aa <__stop_program>
